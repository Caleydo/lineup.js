
/**
 * emitted when the pattern property changes
 * @asMemberOf Column
 * @event
 */
export declare function filterChanged(previous: any, current: any): void;

/**
 * emitted when a column has been added
 * @asMemberOf Column
 * @event
 */
export declare function addColumn(col: Column, index: number): void;

/**
 * emitted when a column has been moved within this composite columm
 * @asMemberOf Column
 * @event
 */
export declare function moveColumn(col: Column, index: number, oldIndex: number): void;

/**
 * emitted when a column has been removed
 * @asMemberOf Column
 * @event
 */
export declare function removeColumn(col: Column, index: number): void;


/**
 * emitted when the grouping criteria changes
 * @asMemberOf Column
 * @event
 */
export declare function groupingChanged(previous: any, current: any): void;


static readonly EVENT_FILTER_CHANGED = 'filterChanged';
static readonly EVENT_ADD_COLUMN = 'addColumn';
static readonly EVENT_MOVE_COLUMN = 'moveColumn';
static readonly EVENT_REMOVE_COLUMN = 'removeColumn';
static readonly EVENT_SORTMETHOD_CHANGED = 'sortMethodChanged';
static readonly EVENT_GROUPING_CHANGED = 'groupingChanged';


on(type: typeof Column.EVENT_FILTER_CHANGED, listener: typeof filterChanged | null): this;
on(type: typeof Column.EVENT_ADD_COLUMN, listener: typeof addColumn | null): this;
on(type: typeof Column.EVENT_MOVE_COLUMN, listener: typeof moveColumn | null): this;
on(type: typeof Column.EVENT_REMOVE_COLUMN, listener: typeof removeColumn | null): this;
on(type: typeof Column.EVENT_SORTMETHOD_CHANGED, listener: typeof sortMethodChanged | null): this;
on(type: typeof Column.EVENT_GROUPING_CHANGED, listener: typeof groupingChanged | null): this;
on(type: typeof Column.EVENT_DATA_LOADED, listener: typeof dataLoaded | null): this;
