@import "colors";

.lu svg.lu-body {
  text {
    font: $lu_body_font;

    &.selection {
      cursor: pointer;

      &:hover {
        color: $lu_body_text_hover_color;
      }
    }

    &.actions tspan {
      cursor: pointer;

      &:hover {
        color: $lu_body_text_hover_color;
      }
    }

    &.rank,
    &.text_right {
      text-anchor: end;
    }

    &.text_center {
      text-anchor: middle;
    }
  }

  .foreign { // e.g. the input field in annotate columns
    padding: 0;
    margin: 0;
    pointer-events: all;
  }

  .cat rect {
    fill: transparent;
  }

  line.meanline {
    stroke: $lu_meanline_color;
    stroke-width: 1;
  }

  .sparklinecell {
    stroke: black;
    fill: none;
  }

  .boxplotcell {
    .boxplotrect {
      stroke: $lu_renderer_boxplot_stroke;
      fill: $lu_renderer_boxplot_box;
    }

    .cellbg {
      fill: transparent;
      stroke: none;
    }

    path {
      fill: none;

      &.boxplotallpath {
        stroke: $lu_renderer_boxplot_stroke;
      }

      &.boxplotsortpath {
        stroke: $lu_renderer_boxplot_sort_indicator;
      }
    }
  }

  .upsetcell {
    circle {
      stroke: $lu_upset_stroke;
      fill: $lu_upset_circle_color;
      opacity: $lu_upset_inactive_opacity;

      &.enabled {
        opacity: 1;
      }
    }

    path {
      stroke: $lu_upset_stroke;
      fill: none;
    }
  }

  g.row {
    rect.bg {
      fill: transparent;
    }

    &.even rect.bg {
      fill: $lu_even_bg;
    }

    &.selected {
      rect.bg {
        stroke: $lu_selected_color;
        stroke-width: 1;
      }
    }

    &.hover {
      rect.bg {
        fill: $lu_hover_color;
      }
    }

    &.selected,
    &.hover {
      .bar rect {
        opacity: 0.5; // bars nested combined with a text representation
      }
    }
  }
}
