/**
  popups, e.g., rename dialogs,...
 */
@import './vars';
@import './icons/index';

@at-root {
  .#{$lu_css_prefix}-dialog {
    background-color: white;
    border: 1px solid black;
    display: flex;
    flex-direction: column;
    position: absolute;
    padding: 5px;
    z-index: 9;
    font-size: $lu_dialog_font_size;
    clear: right;

    h4 {
      margin: 0.2em;
      display: inline-block;
    }

    &::before {
      content: '';
      top: -$lu_dialog_mouse_region;
      left: -$lu_dialog_mouse_region;
      right: -$lu_dialog_mouse_region;
      bottom: -$lu_dialog_mouse_region;
      position: absolute;
      z-index: -1;
    }

    label {
      font-weight: normal;
    }

    input {
      font-size: 8pt;
    }

    button {
      border: none;
      background: none;
      color: $lu_toolbar_color_base;
      transition: all 0.5s ease;

      &:hover,
      &:active,
      &:focus {
        color: $lu_toolbar_color_hover;
      }

      &::before {
        @include lu_icons();
      }
    }

    button[type=submit],
    button[type=reset],
    button[title=cancel] {
      margin-top: 1em;
    }

    button[type=submit]::before {
      content: $lu_icon_check;
    }

    button[title=cancel]::before {
      content: $lu_icon_times;
    }

    button[type=reset]::before {
      content: $lu_icon_undo;
    }

    button[type=submit] {
      float: right;
    }

    &.#{$lu_css_prefix}-sub-nested {
      width: 100px;
    }

    &.#{$lu_css_prefix}-filter-table {
      > div:first-of-type {
        overflow-y: auto;
        max-height: 50vh;
        display: flex;
        flex-direction: column;

        * {
          transition: all 0.5s ease;
        }

        span {
          width: 1.2em;
          margin: 0 0.5em;
        }

        input[type=number] + div {
          width: 3em;
          position: relative;

          > * {
            height: 100%;
          }
        }

        input[type=checkbox]:not(:checked) ~ * {
          opacity: 0.5;
        }

        > * {
          display: flex;
        }
      }
    }
    .#{$lu_css_prefix}_filter_missing {
      margin-top: 1em;
    }

    .script-description {
      font-size: 120%;
      max-width: 50em;

      dl {
        padding: 1em 0.2em;

        dd {
          padding-left: 1em;
        }
      }
    }
  }

  .#{$lu_css_prefix}-dialog-mapper {
    width: 20em;

    > .#{$lu_css_prefix}-summary {
      height: 5em;
      margin: 0.5em 3px 0 3px;
    }

    input[type=number] {
      width: 5em;
    }

    div.#{$lu_css_prefix}-script {
      margin-top: 1em;
      display: none;

      textarea {
        height: 4em;
        width: 98%;
        font-size: 8pt;
        display: block;
      }
    }

    &[data-scale=script] div.#{$lu_css_prefix}-script {
      display: block;
    }

    h4[data-toggle] {
      margin-top: 1em;

      &::before {
        @include lu_icons();
        content: $lu_icon_caret_right;
        width: 0.8em;
        cursor: pointer;
      }

      &[data-toggle=open]::before {
        content: $lu_icon_caret_down;
      }
    }

    .#{$lu_css_prefix}-details {
      display: none;
    }

    [data-toggle=open] ~ .#{$lu_css_prefix}-details {
      display: block;
    }

    svg {
      shape-rendering: geometricprecision;
      height: 20em * 6 / 10;

      rect {
        fill: transparent;
        stroke: none;
      }

      line {
        stroke: $lu_mapping_bg;
        stroke-width: 0.75;
        stroke-linejoin: round;
        stroke-linecap: round;
      }

      line:not([x1]) { // the horizontal lines
        stroke-width: 1;
      }

      circle {
        fill: $lu_mapping_circle
      }

      g.#{$lu_css_prefix}-mapping {
        cursor: ew-resize;
        > line:first-child {
          stroke-width: 5;
          stroke: transparent !important;
        }

        &.#{$lu_css_prefix}-frozen {
          circle:first-of-type {
            cursor: not-allowed;
            fill: $lu_mapping_circle !important;
          }
        }

        &:hover {
          circle {
            fill: $lu_mapping_hover;
          }
          line {
            stroke: $lu_mapping_hover;
          }
        }
      }
    }
  }
}
