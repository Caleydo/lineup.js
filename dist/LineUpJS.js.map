{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 236a2abd39e06fa3e54e","webpack:///./src/bundle.js","webpack:///./src/style.scss","webpack:///./src/main.ts","webpack:///./src/model.js","webpack:///external \"d3\"","webpack:///./src/utils.js","webpack:///./src/provider.js","webpack:///./src/renderer.js","webpack:///./src/ui.js","webpack:///./src/ui_dialogs.js","webpack:///./src/mappingeditor.js"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;;;;;;;ACJA,0C;;;;;;;ACAA;;;IAGG;;;;;;;AAEH,4CAA2C;AAC3C,KAAO,MAAM,uBAAW,CAAS,CAAC,CAAC;AACnC,KAAO,SAAS,uBAAW,CAAY,CAAC,CAAC;AACzC,KAAO,SAAS,uBAAW,CAAY,CAAC,CAAC;AACzC,KAAO,GAAG,uBAAW,CAAM,CAAC,CAAC;AAC7B,KAAO,MAAM,uBAAW,CAAS,CAAC,CAAC;AACnC,KAAO,WAAW,uBAAW,EAAc,CAAC,CAAC;AAC7C,KAAO,EAAE,uBAAW,CAAI,CAAC,CAAC;AAE1B;;;IAGG;AACQ,cAAK,GAAG,MAAM,CAAC;AAC1B;;;IAGG;AACQ,iBAAQ,GAAG,SAAS,CAAC;AAChC;;;IAGG;AACQ,iBAAQ,GAAG,SAAS,CAAC;AAChC;;;IAGG;AACQ,WAAE,GAAG,GAAG,CAAC;AACpB;;;IAGG;AACQ,cAAK,GAAG,MAAM,CAAC;AAC1B;;;IAGG;AACQ,mBAAU,GAAG,WAAW,CAAC;AAGpC;;IAEG;AACH;KAA4B,0BAAuB;KAoJjD,gBAAY,SAAqC,EAAS,IAA2B,EAAE,MAAe;SApJxG,iBAmVC;SA/LwF,sBAAe,GAAf,WAAe;SACpG,iBAAO,CAAC;SADgD,SAAI,GAAJ,IAAI,CAAuB;SAvHrF;;YAEG;SACH,WAAM,GAAG;aACP;;gBAEG;aACH,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;aAE3D;;gBAEG;aACH,MAAM,EAAE;iBACN;;oBAEG;iBACH,YAAY,EAAE,EAAE;iBAChB;;oBAEG;iBACH,qBAAqB,EAAE,EAAE;iBACzB;;oBAEG;iBACH,gBAAgB,EAAE,KAAK;iBACvB;;oBAEG;iBACH,cAAc,EAAE,EAAE;iBAClB;;oBAEG;iBACH,cAAc,EAAE,CAAC,EAAE;iBACnB;;oBAEG;iBACH,cAAc,EAAoB,GAAG,CAAC,sBAAsB;iBAE5D;;oBAEG;iBACH,aAAa,EAAE,EAAE;cAClB;aACD;;gBAEG;aACH,UAAU,EAAE,EAAE;aACd;;gBAEG;aACH,gBAAgB,EAAE;iBAChB;;oBAEG;iBACH,OAAO,EAAE,IAAI;iBACb;;oBAEG;iBACH,SAAS,EAAE,IAAI;iBACf;;oBAEG;iBACH,UAAU,EAAE,KAAK;iBACjB;;oBAEG;iBACH,QAAQ,EAAE,KAAK;cAChB;aACD;;gBAEG;aACH,IAAI,EAAE;iBACJ,QAAQ,EAAE,KAAK;iBACf,SAAS,EAAE,EAAE;iBACb,UAAU,EAAE,GAAG;iBACf,aAAa,EAAE,CAAC;iBAEhB;;oBAEG;iBACH,eAAe,EAAE,IAAI;iBAErB;;oBAEG;iBACH,gBAAgB,EAAE,CAAC;iBACnB,iBAAiB,EAAE,IAAI;iBAEvB,uDAAuD;iBACvD,UAAU,EAAE,CAAC;iBAEb,UAAU,EAAE,EAAE;cACf;aACD;;gBAEG;aACH,SAAS,EAAE,EAAE;aACb;;gBAEG;aACH,YAAY,EAAE,IAAI;aAClB;;gBAEG;aACH,IAAI,EAAE,KAAK;aAEX;;gBAEG;aACH,SAAS,EAAE,SAAS,CAAC,SAAS,EAAE;UACjC,CAAC;SAIM,SAAI,GAAqB,IAAI,CAAC;SAC9B,WAAM,GAAsB,IAAI,CAAC;SACjC,UAAK,GAAsB,EAAE,CAAC;SAC9B,oBAAe,GAA0B,IAAI,CAAC;SA8JtD;;;YAGG;SACK,wBAAmB,GAAG,KAAK,CAAC;SA9JlC,IAAI,CAAC,UAAU,GAAG,SAAS,YAAY,EAAE,CAAC,SAAS,GAAsB,SAAS,GAAG,EAAE,CAAC,MAAM,CAAU,SAAS,CAAC,CAAC;SACnH,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACpE,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;SACzC,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;SAE5C,aAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SAGjC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SAExE,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;aACpD,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY;aACtC,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY;aAC7C,qBAAqB,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB;aAC/D,UAAU,EAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,UAAU;aAEpD,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB;aACrD,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc;aACjD,cAAc,EAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc;aAElD,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU;aAEvC,cAAc,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc;aACjD,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa;UAChD,CAAC,CAAC;SACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,KAAK,GAAG,GAAG,CAAC,YAAY,GAAE,GAAG,CAAC,kBAAkB,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;aACvI,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS;aACrC,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU;aACvC,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa;aAC7C,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB;aACrD,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ;aAC/C,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,SAAS;aACjD,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO;aAC7C,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU;aACpC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ;aAE9B,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU;aACvC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;UACjC,CAAC,CAAC;SACH,mBAAmB;SACnB,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;SAElD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,mBAAmB,CAAC,CAAC;SACpD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;aACjD,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SACnE,CAAC;SAED,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;aACrC,IAAI,CAAC,eAAe,GAAG,IAAI,MAAM,CAAC,eAAe,CAAU,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;iBACjG,UAAU,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB;iBAC7C,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS;iBACrC,QAAQ,EAAE,cAAM,YAAI,CAAC,MAAM,CAAC,aAAa,EAAE,EAA3B,CAA2B;cAC5C,CAAC,CAAC;aACH,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,GAAG,EAAE,IAAI;iBAC1C,4CAA4C;iBAC5C,8BAA8B;iBAC9B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,WAAW,EAAE,YAAY,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;iBAC7E,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;qBACrC,KAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;qBAC/B,KAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;iBAC9B,CAAC;aACH,CAAC,CAAC,CAAC;aACH,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACtE,CAAC;KACH,CAAC;KAED,gCAAe,GAAf;SACE,MAAM,CAAC,gBAAK,CAAC,eAAe,WAAE,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,uBAAuB,EAAE,MAAM,CAAC,4BAA4B,EAAE,MAAM,CAAC,kBAAkB,EAAE,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC;KACpM,CAAC;KASD,wBAAO,GAAP,UAAQ,SAAkC,EAAE,MAAoB;SAApB,sBAAoB,GAApB,SAAS,IAAI,CAAC,MAAM;SAC9D,EAAE,CAAC,CAAC,SAAS,YAAY,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;aAC1C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAmB,SAAS,CAAC,CAAC;SAC/C,CAAC;SAAC,IAAI,CAAC,CAAC;aACN,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,EAAW,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;SAC/E,CAAC;SACD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC3C,CAAC;KAMD,sBAAI,wBAAI;SAJR;;;YAGG;cACH;aACE,MAAM,CAAU,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SACzC,CAAC;;;QAAA;KAEO,sBAAK,GAAb,UAAc,KAAY,EAAE,MAAa,EAAE,KAA0B;SACnE,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;aACzB,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;SAC3D,CAAC;SACD,MAAM,CAAC,EAAC,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAC,CAAC;KACnC,CAAC;KAED;;QAEG;KACH,wBAAO,GAAP;SACE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,MAAM,EAAE,EAAV,CAAU,CAAC,CAAC;SACtC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;SACzB,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;aACzB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;SACjC,CAAC;KACH,CAAC;KAED;;;;;QAKG;KACH,uBAAM,GAAN,UAAO,MAA8C,EAAE,SAAiB;SAAjB,yBAAiB,GAAjB,iBAAiB;SACtE,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aACR,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;SAC1B,CAAC;SACD,MAAM,CAAC,GAAG,KAAK,IAAI,CAAC;KACtB,CAAC;KAED,qBAAI,GAAJ;SACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KAC1B,CAAC;KAED,kCAAiB,GAAjB,UAAkB,IAA2B,EAAE,IAAS;SACtD,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;aACd,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;SAC9C,CAAC;SACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;SACjB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;aACT,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC1B,CAAC;SACD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,uBAAuB,EAAE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACxE,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SACpC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;SAClC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAzB,CAAyB,CAAC,CAAC;SACrD,IAAI,CAAC,MAAM,EAAE,CAAC;KAChB,CAAC;KAEO,iCAAgB,GAAxB,UAAyB,YAAqB;SAC5C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,uBAAuB,EAAE,YAAY,CAAC,MAAM,GAAG,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC1F,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,4BAA4B,EAAE,YAAY,CAAC,CAAC;KAC/D,CAAC;KAED,wBAAO,GAAP,UAAQ,IAAQ;SACd,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;KAC1C,CAAC;KAQD,uBAAM,GAAN;SAAA,iBAoBC;SAnBC,gEAAgE;SAChE,oEAAoE;SACpE,6DAA6D;SAC7D,iEAAiE;SACjE,mCAAmC;SACnC,IAAI,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SAC7D,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SAEhC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;SACrC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;SACrB,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,CAAC,IAAK,QAAC,CAAC,MAAM,EAAE,EAAV,CAAU,CAAC,CAAC;SAEtC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,gBAAgB,EAAE;aAC7B,mBAAmB,IAAI,CAAC,CAAC;aACzB,EAAE,EAAC,mBAAmB,KAAK,CAAC,CAAC,CAAG,CAAC;iBAC/B,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;aAC1C,CAAC;SACH,CAAC,CAAC,CAAC;KACL,CAAC;KAED,sCAAqB,GAArB,UAAsB,MAAa,EAAE,KAAa;SAChD,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;SAC7C,EAAE,CAAC,CAAC,MAAM,KAAK,WAAW,IAAI,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;aACnD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aACnC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;SACrB,CAAC;KACH,CAAC;KAjVD;;;QAGG;KACI,0BAAmB,GAAG,cAAc,CAAC;KAE5C;;;QAGG;KACI,8BAAuB,GAAG,kBAAkB,CAAC;KAEpD;;;QAGG;KACI,mCAA4B,GAAG,uBAAuB,CAAC;KAE9D;;QAEG;KACI,yBAAkB,GAAG,aAAa,CAAC;KAE1C;;QAEG;KACI,4BAAqB,GAAG,gBAAgB,CAAC;KAwTlD,aAAC;AAAD,EAAC,CAnV2B,MAAM,CAAC,gBAAgB,GAmVlD;AAnVY,eAAM,SAmVlB;AAED;;;;IAIG;AACH,uBAA6B,OAA4B;KACvD,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC;KACnD,OAAO,CAAC,OAAO,CAAC,UAAC,GAAO;SACtB,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;aACjB,KAAK,QAAQ;iBACX,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;iBAC3B,KAAK,CAAC;SACV,CAAC;KACH,CAAC,CAAC,CAAC;KACH,MAAM,CAAC,OAAO,CAAC;AACjB,EAAC;AAVe,qBAAY,eAU3B;AAED;;;;;;IAMG;AACH,6BAAmC,IAAU,EAAE,OAA4B,EAAE,OAAY;KAAZ,uBAAY,GAAZ,YAAY;KACvF,MAAM,CAAC,IAAI,SAAS,CAAC,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;AACjE,EAAC;AAFe,2BAAkB,qBAEjC;AAED,iBAAuB,IAA2B,EAAE,SAAqC,EAAE,MAAe;KAAf,sBAAe,GAAf,WAAe;KACxG,MAAM,CAAC,IAAI,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;AAC7C,EAAC;AAFe,eAAM,SAErB;;;;;;;ACpaD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA,gDAA+C,iBAAiB,GAAG,WAAW;AAC9E;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA,qCAAoC,gBAAgB;AACpD,kCAAiC,aAAa;AAC9C;AACA,iBAAgB,sCAAsC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,oCAAmC,mBAAmB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,aAAa,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,2BAA0B,iBAAiB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,oBAAoB,EAAE;AAC3D;AACA;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,iBAAiB;AACjD,+BAA8B,iBAAiB;AAC/C,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,kBAAkB;AACnD,gCAA+B,kEAAkE,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,6BAA6B;AACvE,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA,+BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,wBAAuB;AACvB;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA,wBAAuB;AACvB;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,UAAU,kCAAkC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClcAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC,oBAAoB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,gCAA+B,aAAa;AAC5C,iBAAgB;AAChmBAAkB;AAClB;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,4DAA4D,EAAE;AACnH,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,4DAA4D,EAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,oCAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAqC;AACrC;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,4DAA4D,EAAE;AACnH,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAA+D,8BAA8B,uBAAuB,QAAQ,EAAE;AAC9H;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,gEAA+D,8BAA8B,uBAAuB,QAAQ,EAAE;AAC9H;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,mCAAmC,EAAE;AAClF;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,qCAAoC,gBAAgB;AACpD,kCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA,4BAA2B,sCAAsC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,uDAAsD,0BAA0B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,uBAAuB,EAAE;AAC1E;AACA;AACA,mDAAkD,sBAAsB,EAAE;AAC1E;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,gCAA+B,oBAAoB;AACnD,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,gBAAgB;AACpD,kCAAiC,aAAa;AAC9C;AACA,qHAAoH,sBAAsB,EAAE;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA,4BAA2B,sCAAsC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,iCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,cAAc;AAC9C;AACA;AACA;AACA,iCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,iDAAgD,yBAAyB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA,gCAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,cAAc,EAAE;AAC5D;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,yDAAwD,mDAAmD,EAAE;AAC7G;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,gCAA+B,eAAe;AAC9C,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,wBAAwB,EAAE;AAC9E;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,gCAA+B,eAAe;AAC9C,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,wBAAwB,EAAE;AAC9E;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,gCAA+B,gBAAgB;AAC/C,iBAAgB;AAChB;AACA;AACA,sDAAqD,wBAAwB,EAAE;AAC/E;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,gCAA+B,kBAAkB;AACjD,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAkF,wBAAwB,EAAE;AAC5G;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA,gCAA+B,gBAAgB;AAC/C,iBAAgB;AAChB;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,mCAAmC,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,0BAA0B,EAAE;AAC/E;AACA;AACA;AACA;AACA,sDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,8DAA6D,wCAAwC,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA,qCAAoC,gBAAgB;AACpD,kCAAiC,aAAa;AAC9C,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,mBAAmB;AACtD;AACA,0BAAyB;AACzB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,gCAA+B,6BAA6B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,8DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,mFAAmF,EAAE;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,cAAc,EAAE;AACvD,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,2EAA0E,gCAAgC,EAAE;AAC5G;AACA,wBAAuB,cAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAA+C,uBAAuB,EAAE;AACxE;AACA;AACA,iDAAgD,sBAAsB,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,gCAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,oDAAmD,aAAa;AAChE;AACA;AACA;AACA;AACA;AACA;AACA,WAAU,oBAAoB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA,4BAA2B,mBAAmB;AAC9C,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;ACvtEA,gD;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY,8BAA8B;AAC1C;AACA;AACA,kCAAiC,mBAAmB;AACpD,mCAAkC,qBAAqB;AACvD;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,wCAAwC,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA,oBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA,wBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAmC,UAAU,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAgE,yBAAyB,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB,0BAA0B;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,iCAAiC,EAAE;AACrF;AACA;AACA,mDAAkD,6BAA6B,EAAE;AACjF;AACA;AACA,mDAAkD,6BAA6B,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,kC;;;;;;AC7XA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,cAAc,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,YAAY,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAc,OAAO,uBAAuB;AAC5C;AACA;AACA;AACA,wCAAuC,sBAAsB,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;AACL;AACA;AACA,iDAAgD,UAAU,iCAAiC,EAAE,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,+BAA+B;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,mDAAkD,gCAAgC,EAAE;AACpF;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,iBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB,aAAa;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA4C,qCAAqC;AACjF,kDAAiD,sEAAsE;AACvH;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,2EAA0E,gCAAgC,EAAE;AAC5G,wBAAuB,2BAA2B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,gCAAgC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,sCAAsC,EAAE;AACzF;AACA;AACA;AACA,gDAA+C,mCAAmC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,uCAAuC,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,sCAAsC,EAAE;AACjG;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,8CAA6C,mCAAmC,EAAE;AAClF,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,kDAAiD,sCAAsC,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA,oCAAmC,0CAA0C,EAAE;AAC/E,mCAAkC,0CAA0C;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAoF,uCAAuC,EAAE;AAC7H,oBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,QAAQ;AACzB;AACA;AACA,qCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,8CAA6C,yBAAyB,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,uBAAuB,EAAE;AAC1E;AACA;AACA,kDAAiD,kCAAkC,EAAE;AACrF,cAAa;AACb;AACA,UAAS;AACT;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA,oDAAmD,yBAAyB;AAC5E;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,yBAAyB,EAAE;AAC5E;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sDAAqD,4CAA4C,EAAE;AACnG;AACA;AACA;AACA;AACA;AACA,0EAAyE,2BAA2B,EAAE;AACtG;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,uCAAuC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,qDAAoD,UAAU,mDAAmD,EAAE,EAAE;AACrH;AACA;AACA,sEAAqE,uBAAuB,EAAE;AAC9F;AACA,sDAAqD,uCAAuC,wBAAwB,EAAE,EAAE,EAAE;AAC1H;AACA;AACA;AACA,kDAAiD,8BAA8B,EAAE;AACjF;AACA;AACA,sCAAqC,yCAAyC,EAAE;AAChF;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAiD,wBAAwB,EAAE,wBAAwB,0BAA0B,EAAE;AAC/H;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,iCAAgC,mDAAmD;AACnF;AACA,oCAAmC,qCAAqC,4DAA4D,EAAE,EAAE,EAAE;AAC1I,mCAAkC,qCAAqC,uEAAuE,EAAE,EAAE;AAClJ;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,0DAAyD,uCAAuC,EAAE;AAClG;AACA;AACA,4DAA2D,+BAA+B,EAAE,iBAAiB,gCAAgC;AAC7I;AACA;AACA,UAAS,sBAAsB,mBAAmB,EAAE;AACpD;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,oBAAoB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,2CAA0C,8BAA8B,EAAE;AAC1E;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,EAAC;AACD;AACA,qC;;;;;;ACv8BA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA,mBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,6BAA6B;AAC7D,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,0CAA0C,EAAE;AAC5E,4CAA2C,UAAU;AACrD,UAAS,qBAAqB,wBAAwB,EAAE;AACxD;AACA,iCAAgC,yBAAyB;AACzD,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,yBAAyB,EAAE;AAC3D,iCAAgC,+DAA+D,EAAE;AACjG;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,4CAA2C,UAAU,EAAE;AACvD,sCAAqC,mEAAmE;AACxG,UAAS;AACT;AACA,iCAAgC,yBAAyB,EAAE;AAC3D,iCAAgC,2DAA2D,EAAE;AAC7F;AACA;AACA;AACA;AACA,UAAS;AACT,oCAAmC,iCAAiC;AACpE,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,qBAAqB,wBAAwB,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,yBAAyB,EAAE;AAC3D,iCAAgC,+DAA+D,EAAE;AACjG,qCAAoC,mEAAmE;AACvG,UAAS;AACT;AACA,4CAA2C,UAAU,EAAE;AACvD,qCAAoC,mEAAmE,EAAE;AACzG,sCAAqC,mEAAmE;AACxG,UAAS;AACT;AACA,iCAAgC,yBAAyB,EAAE;AAC3D,iCAAgC,2DAA2D;AAC3F,UAAS;AACT,oCAAmC,iCAAiC;AACpE,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa,qBAAqB,wBAAwB,EAAE;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,iCAAgC,eAAe,EAAE;AACjD,0CAAyC,eAAe,EAAE;AAC1D;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,6BAA6B;AAC7D,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,iCAAgC,yBAAyB,EAAE;AAC3D,4CAA2C,UAAU;AACrD,UAAS,qBAAqB,uDAAuD,EAAE;AACvF;AACA,iCAAgC,yBAAyB;AACzD,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS,2BAA2B,mCAAmC,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAgC,6BAA6B;AAC7D,UAAS;AACT;AACA,iCAAgC,yBAAyB,EAAE;AAC3D,4CAA2C,UAAU;AACrD,UAAS,qBAAqB,mJAAmJ,EAAE;AACnL;AACA,iCAAgC,yBAAyB;AACzD,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA2C,UAAU,EAAE;AACvD,yCAAwC,2EAA2E;AACnH,UAAS;AACT;AACA;AACA,iCAAgC,6BAA6B;AAC7D,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA,4CAA2C,UAAU,EAAE;AACvD,yCAAwC,uEAAuE;AAC/G,UAAS;AACT;AACA,iCAAgC,6BAA6B;AAC7D,UAAS,qBAAqB,wBAAwB,EAAE;AACxD;AACA,iCAAgC,wBAAwB;AACxD,UAAS;AACT,sCAAqC,gFAAgF,EAAE;AACvH,qCAAoC,gFAAgF;AACpH,UAAS;AACT;AACA,yCAAwC,uEAAuE;AAC/G,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAwF,aAAa,EAAE;AACvG;AACA;AACA;AACA,yCAAwC,yCAAyC;AACjF,UAAS;AACT;AACA;AACA,oCAAmC,sCAAsC,EAAE;AAC3E,4CAA2C,UAAU;AACrD,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,wFAAuF,yEAAyE,EAAE;AAClK;AACA;AACA;AACA,UAAS;AACT;AACA,yCAAwC,yCAAyC;AACjF,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,oBAAoB,oBAAoB,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,oBAAoB,YAAY,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,oBAAoB,YAAY,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAuF,oEAAoE,EAAE;AAC7J;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,6BAA4B,aAAa;AACzC;AACA;AACA,8CAA6C,wEAAwE;AACrH;AACA;AACA;AACA;AACA;AACA,oCAAmC,wBAAwB;AAC3D,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;ACxrBA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gGAA+F,yBAAyB,EAAE;AAC1H;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA,mEAAkE,eAAe,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb;AACA,mEAAkE,eAAe,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,qBAAqB,EAAE,oBAAoB,eAAe,EAAE;AACvH;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,cAAa;AACb;AACA,iFAAgF,gBAAgB,EAAE;AAClG,8CAA6C,wDAAwD,EAAE;AACvG;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,kCAAiC,gBAAgB;AACjD,UAAS;AACT,oDAAmD,gBAAgB,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAwB;AACxB;AACA;AACA,yBAAwB;AACxB;AACA;AACA,yBAAwB;AACxB;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAwC,0CAA0C,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,yDAAyD,EAAE;AACjG;AACA,cAAa;AACb,uCAAsC,sDAAsD,EAAE;AAC9F;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA8E,uCAAuC,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,yDAAyD,EAAE;AACrG;AACA;AACA;AACA;AACA,wCAAuC,iBAAiB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB,kBAAiB;AACjB,2CAA0C,sDAAsD,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA,0BAAyB;AACzB,sBAAqB;AACrB,kBAAiB;AACjB,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wDAAuD,kCAAkC,EAAE;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,gDAA+C,cAAc,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAkD,sCAAsC,EAAE,yCAAyC,uCAAuC,EAAE;AAC5K;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,oCAAmC,sCAAsC,EAAE;AAC3E;AACA;AACA,UAAS;AACT;AACA,oCAAmC,wCAAwC,EAAE;AAC7E;AACA;AACA,UAAS;AACT;AACA,oCAAmC,kDAAkD,EAAE;AACvF;AACA;AACA,UAAS;AACT;AACA,oCAAmC,oCAAoC,EAAE;AACzE;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,sDAAqD,2BAA2B,EAAE;AAClF,uDAAsD,0BAA0B,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,mDAAkD,0BAA0B,EAAE;AAC9E,iDAAgD,yBAAyB,EAAE;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,gDAA+C,kCAAkC,EAAE;AACnF,kDAAiD,8DAA8D,EAAE;AACjH;AACA;AACA;AACA,gCAA+B,oBAAoB;AACnD,gCAA+B,kBAAkB;AACjD,oFAAmF,aAAa,EAAE;AAClG;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,uDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,+DAA+D,EAAE;AACrG,oCAAmC,gCAAgC,EAAE;AACrE,+CAA8C,gBAAgB;AAC9D,UAAS;AACT;AACA,oCAAmC,4NAA4N,EAAE;AACjQ,kCAAiC,gBAAgB,EAAE;AACnD,sCAAqC,aAAa,EAAE;AACpD,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,6DAA4D,gBAAgB,EAAE;AAC9E;AACA,uCAAsC,uCAAuC,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,4DAA2D,cAAc,EAAE;AAC3E;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,2CAA0C,qCAAqC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,wBAAwB,EAAE;AAC1E,kDAAiD,6BAA6B,EAAE;AAChF,gDAA+C,8BAA8B,EAAE;AAC/E,mDAAkD,sBAAsB,EAAE;AAC1E,+DAA8D,2BAA2B;AACzF,0BAAyB;AACzB,kDAAiD,6BAA6B,EAAE;AAChF,uDAAsD,cAAc;AACpE,0BAAyB;AACzB;AACA,sBAAqB;AACrB;AACA,cAAa;AACb,2CAA0C,wCAAwC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAmD,4BAA4B,EAAE;AACjF,qDAAoD,6BAA6B,EAAE;AACnF,gDAA+C,8BAA8B,EAAE;AAC/E,mDAAkD,sBAAsB;AACxE,0BAAyB;AACzB,qDAAoD,kCAAkC,EAAE;AACxF,qDAAoD,YAAY;AAChE,0BAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,0CAAyC,gBAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,0CAAyC,gBAAgB;AACzD;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA,wCAAuC,yFAAyF,EAAE;AAClI;AACA,2CAA0C,qHAAqH,EAAE;AACjK,+CAA8C,mDAAmD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS,wBAAwB,aAAa,EAAE;AAChD;AACA,uCAAsC,4CAA4C,EAAE;AACpF;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,kCAAiC,sCAAsC,EAAE;AACzE;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,2DAA0D,cAAc,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA,qDAAoD,2BAA2B,EAAE;AACjF,mFAAkF,aAAa,EAAE;AACjG;AACA;AACA,yCAAwC,+CAA+C;AACvF,UAAS;AACT;AACA;AACA;AACA,yCAAwC,+CAA+C;AACvF,UAAS;AACT,yFAAwF,wCAAwC,sBAAsB,EAAE,EAAE,EAAE,gBAAgB,aAAa,EAAE;AAC3L;AACA;AACA;AACA,4CAA2C,mDAAmD;AAC9F,UAAS;AACT;AACA;AACA;AACA,4CAA2C,UAAU;AACrD,UAAS;AACT;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,wHAAuH,sBAAsB,EAAE,iBAAiB,aAAa,EAAE;AAC/K;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB,cAAa;AACb;AACA;AACA;AACA,oCAAmC,cAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,yFAAwF,uCAAuC,UAAU,aAAa,EAAE,EAAE,EAAE,EAAE;AAC9J;AACA;AACA,UAAS;AACT;AACA;AACA,UAAS;AACT,uCAAsC,oBAAoB;AAC1D;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,yCAAwC,YAAY;AACpD,UAAS,oCAAoC,mCAAmC,EAAE;AAClF;AACA,8BAA6B,2BAA2B,EAAE;AAC1D,mCAAkC,+BAA+B,EAAE;AACnE,wCAAuC,wBAAwB,EAAE;AACjE,uCAAsC,+CAA+C;AACrF,UAAS;AACT;AACA;AACA;AACA;AACA,qCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA,2DAA0D,sCAAsC,4DAA4D,EAAE,EAAE,EAAE;AAClK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA4E,2BAA2B,EAAE;AACzG,kFAAiF,oCAAoC,EAAE;AACvH;AACA;AACA;AACA,gCAA+B,cAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA0D,UAAU,uDAAuD,EAAE,EAAE;AAC/H;AACA;AACA;AACA,UAAS;AACT;AACA,yCAAwC,gFAAgF;AACxH,UAAS;AACT;AACA;AACA;AACA;AACA,cAAa;AACb,2DAA0D;AAC1D;AACA;AACA;AACA,cAAa,EAAE,EAAE,uBAAuB,uBAAuB,EAAE;AACjE,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,yCAAwC,qBAAqB;AAC7D,UAAS;AACT;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,8EAA8E,EAAE;AAC1H,2CAA0C,4DAA4D;AACtG,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA0C,8EAA8E,EAAE;AAC1H,2CAA0C,4DAA4D;AACtG,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,4BAA4B,EAAE;AACpF;AACA,mEAAkE,oCAAoC,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,kCAAkC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA,kEAAiE,sBAAsB,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,0CAAyC,gBAAgB;AACzD;AACA,cAAa;AACb;AACA,0CAAyC,gBAAgB;AACzD;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA,wCAAuC,aAAa,EAAE;AACtD;AACA,2CAA0C,qHAAqH,EAAE;AACjK,+CAA8C,mDAAmD;AACjG;AACA;AACA;AACA;AACA,qDAAoD,2BAA2B,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA;AACA;AACA,2DAA0D,UAAU,uDAAuD,EAAE,EAAE;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb,oEAAmE;AACnE;AACA;AACA;AACA,cAAa,EAAE,EAAE,uBAAuB,uBAAuB,EAAE;AACjE;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAsD,4BAA4B,EAAE;AACpF;AACA,mEAAkE,oCAAoC,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA,iDAAgD,kCAAkC,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA,kEAAiE,sBAAsB,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA,+B;;;;;;AClvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAsC,0BAA0B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA4B,mCAAmC;AAC/D;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAA+B,gBAAgB;AAC/C;AACA;AACA,gFAA+E,yCAAyC,EAAE;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAuF,UAAU,mCAAmC,EAAE,EAAE;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,iBAAiB,EAAE;AAChD;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA,sCAAqC,gCAAgC,EAAE;AACvE,kDAAiD,oBAAoB,EAAE;AACvE,iDAAgD,oBAAoB,EAAE;AACtE;AACA,wEAAuE,+BAA+B,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,2CAA0C,oCAAoC,EAAE;AAChF,+DAA8D,iBAAiB,EAAE;AACjF;AACA,MAAK;AACL;AACA,sDAAqD,iBAAiB,EAAE;AACxE;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,qDAAoD,gFAAgF,EAAE;AACtI;AACA;AACA;AACA,UAAS;AACT,iEAAgE,mCAAmC,EAAE;AACrG;AACA;AACA;AACA;AACA,uDAAsD,iFAAiF,EAAE;AACzI;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,sCAAqC,2BAA2B,EAAE;AAClE;AACA;AACA,MAAK;AACL;AACA,6CAA4C,oBAAoB,EAAE,oBAAoB,YAAY,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,UAAS;AACT;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iNAAgN;AAChN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA8B,mDAAmD;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4HAA2H,UAAU,kDAAkD,EAAE,EAAE;AAC3L;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,gBAAgB,EAAE;AAC/C;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;AACA;AACA,kDAAiD,gBAAgB,EAAE;AACnE,iDAAgD,cAAc,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA,OAAM,EAAE;AACR;AACA,sDAAqD,sBAAsB,EAAE;AAC7E;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;ACxdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAiC,cAAc;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAoC,UAAU,EAAE;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAkC,0CAA0C,EAAE;AAC9E;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb,UAAS;AACT;AACA;AACA,mCAAkC,0CAA0C,EAAE;AAC9E;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA4D,UAAU,sBAAsB,EAAE,EAAE;AAChG;AACA;AACA;AACA,qDAAoD,kBAAkB,EAAE;AACxE;AACA;AACA,gEAA+D,YAAY,EAAE;AAC7E,+DAA8D,YAAY,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,mCAAkC,0BAA0B,EAAE;AAC9D,mCAAkC,uBAAuB;AACzD,cAAa;AACb,2EAA0E,0BAA0B,EAAE;AACtG,oEAAmE,uBAAuB,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,wCAAuC,mBAAmB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,EAAC;AACD;AACA;AACA,8BAA6B,cAAc;AAC3C;AACA;AACA;AACA,0C","file":"LineUpJS.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LineUpJS\"] = factory(require(\"d3\"));\n\telse\n\t\troot[\"LineUpJS\"] = factory(root[\"d3\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_5__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 236a2abd39e06fa3e54e\n **/","/**\n * Created by Samuel Gratzl on 26.09.2016.\n */\nrequire('./style.scss');\nmodule.exports = require('./main.ts');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/bundle.js\n ** module id = 0\n ** module chunks = 0\n **/","// removed by extract-text-webpack-plugin\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/style.scss\n ** module id = 1\n ** module chunks = 0\n **/","/**\r\n * main module of LineUp.js containing the main class and exposes all other modules\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\n\r\n///<reference path='../typings/tsd.d.ts' />\r\nimport model_ = require('./model');\r\nimport provider_ = require('./provider');\r\nimport renderer_ = require('./renderer');\r\nimport ui_ = require('./ui');\r\nimport utils_ = require('./utils');\r\nimport ui_dialogs_ = require('./ui_dialogs');\r\nimport d3 = require('d3');\r\n\r\n/**\r\n * access to the model module\r\n * @type {--global-type--}\r\n */\r\nexport var model = model_;\r\n/**\r\n * access to the provider module\r\n * @type {--global-type--}\r\n */\r\nexport var provider = provider_;\r\n/**\r\n * access to the renderer module\r\n * @type {--global-type--}\r\n */\r\nexport var renderer = renderer_;\r\n/**\r\n * access to the ui module\r\n * @type {--global-type--}\r\n */\r\nexport var ui = ui_;\r\n/**\r\n * access to the utils module\r\n * @type {--global-type--}\r\n */\r\nexport var utils = utils_;\r\n/**\r\n * access to the ui_dialogs module\r\n * @type {--global-type--}\r\n */\r\nexport var ui_dialogs = ui_dialogs_;\r\n\r\n\r\n/**\r\n * main LineUp class managing data and rendering\r\n */\r\nexport class LineUp extends utils_.AEventDispatcher {\r\n  /**\r\n   * triggered when the mouse is over a specific row\r\n   * @argument data_index:number the selected data index or <0 if no row\r\n   */\r\n  static EVENT_HOVER_CHANGED = 'hoverChanged';\r\n\r\n  /**\r\n   * triggered when the user click on a row\r\n   * @argument data_index:number the selected data index or <0 if no row\r\n   */\r\n  static EVENT_SELECTION_CHANGED = 'selectionChanged';\r\n\r\n  /**\r\n   * triggered when the user selects one or more rows\r\n   * @argument data_indices:number[] the selected data indices\r\n   */\r\n  static EVENT_MULTISELECTION_CHANGED = 'multiSelectionChanged';\r\n\r\n  /**\r\n   * triggered when LineUpJS.update() was called\r\n   */\r\n  static EVENT_UPDATE_START = 'updateStart';\r\n\r\n  /**\r\n   * triggered when LineUpJS.update() was called and the rendering the body has finished\r\n   */\r\n  static EVENT_UPDATE_FINISHED = 'updateFinished';\r\n\r\n  /**\r\n   * default config of LineUp with all available options\r\n   */\r\n  config = {\r\n    /**\r\n     * a prefix used for all generated html ids\r\n     */\r\n    idPrefix: Math.random().toString(36).slice(-8).substr(0, 3), //generate a random string with length3\r\n\r\n    /**\r\n     * options related to the header html layout\r\n     */\r\n    header: {\r\n      /**\r\n       * standard height of the header\r\n       */\r\n      headerHeight: 20,\r\n      /**\r\n       * height of the header including histogram\r\n       */\r\n      headerHistogramHeight: 40,\r\n      /**\r\n       * should labels be automatically rotated if they doesn't fit?\r\n       */\r\n      autoRotateLabels: false,\r\n      /**\r\n       * space reserved if a label is rotated\r\n       */\r\n      rotationHeight: 50, //in px\r\n      /**\r\n       * the degrees to rotate a label\r\n       */\r\n      rotationDegree: -20, //in deg\r\n      /**\r\n       * hook for adding buttons to rankings in the header\r\n       */\r\n      rankingButtons: <ui_.IRankingHook>ui_.dummyRankingButtonHook,\r\n\r\n      /**\r\n       * templates for link patterns\r\n       */\r\n      linkTemplates: []\r\n    },\r\n    /**\r\n     * old name for header\r\n     */\r\n    htmlLayout: {},\r\n    /**\r\n     * visual representation options\r\n     */\r\n    renderingOptions: {\r\n      /**\r\n       * show combined bars as stacked bars\r\n       */\r\n      stacked: true,\r\n      /**\r\n       * use animation for reordering\r\n       */\r\n      animation: true,\r\n      /**\r\n       * show histograms of the headers (just settable at the beginning)\r\n       */\r\n      histograms: false,\r\n      /**\r\n       * show a mean line for single numberial columns\r\n       */\r\n      meanLine: false,\r\n    },\r\n    /**\r\n     * options related to the rendering of the body\r\n     */\r\n    body: {\r\n      renderer: 'svg', //svg, canvas\r\n      rowHeight: 17,\r\n      rowPadding: 0.2, //padding for scale.rangeBands\r\n      rowBarPadding: 1,\r\n\r\n      /**\r\n       * whether just the visible rows or all rows should be rendered - rendering performance (default: true)\r\n       */\r\n      visibleRowsOnly: true,\r\n\r\n      /**\r\n       * number of backup rows to keep to avoid updating on every small scroll thing\r\n       */\r\n      backupScrollRows: 4,\r\n      animationDuration: 1000,\r\n\r\n      //number of cols that should be frozen on the left side\r\n      freezeCols: 0,\r\n\r\n      rowActions: []\r\n    },\r\n    /**\r\n     * old name for body\r\n     */\r\n    svgLayout: {},\r\n    /**\r\n     *  enables manipulation features, remove column, reorder,...\r\n     */\r\n    manipulative: true,\r\n    /**\r\n     * automatically add a column pool at the end\r\n     */\r\n    pool: false,\r\n\r\n    /**\r\n     * the renderers to use for rendering the columns\r\n     */\r\n    renderers: renderer_.renderers()\r\n  };\r\n\r\n  private $container:d3.Selection<any>;\r\n\r\n  private body:ui_.IBodyRenderer = null;\r\n  private header:ui_.HeaderRenderer = null;\r\n  private pools:ui_.PoolRenderer[] = [];\r\n  private contentScroller:utils_.ContentScroller = null;\r\n\r\n  constructor(container:d3.Selection<any> | Element, public data:provider_.DataProvider, config:any = {}) {\r\n    super();\r\n    this.$container = container instanceof d3.selection ? <d3.Selection<any>>container : d3.select(<Element>container);\r\n    this.$container = this.$container.append('div').classed('lu', true);\r\n    this.config.svgLayout = this.config.body;\r\n    this.config.htmlLayout = this.config.header;\r\n\r\n    utils.merge(this.config, config);\r\n\r\n\r\n    this.data.on('selectionChanged.main', this.triggerSelection.bind(this));\r\n\r\n    this.header = new ui_.HeaderRenderer(data, this.node, {\r\n      manipulative: this.config.manipulative,\r\n      headerHeight: this.config.header.headerHeight,\r\n      headerHistogramHeight: this.config.header.headerHistogramHeight,\r\n      histograms : this.config.renderingOptions.histograms,\r\n\r\n      autoRotateLabels: this.config.header.autoRotateLabels,\r\n      rotationHeight: this.config.header.rotationHeight, //in px\r\n      rotationDegree:  this.config.header.rotationDegree, //in deg\r\n\r\n      freezeCols: this.config.body.freezeCols,\r\n\r\n      rankingButtons: this.config.header.rankingButtons,\r\n      linkTemplates: this.config.header.linkTemplates\r\n    });\r\n    this.body = new (this.config.body.renderer === 'svg' ? ui_.BodyRenderer: ui_.BodyCanvasRenderer)(data, this.node, this.slice.bind(this), {\r\n      rowHeight: this.config.body.rowHeight,\r\n      rowPadding: this.config.body.rowPadding,\r\n      rowBarPadding: this.config.body.rowBarPadding,\r\n      animationDuration: this.config.body.animationDuration,\r\n      meanLine: this.config.renderingOptions.meanLine,\r\n      animation: this.config.renderingOptions.animation,\r\n      stacked: this.config.renderingOptions.stacked,\r\n      actions: this.config.body.rowActions,\r\n      idPrefix: this.config.idPrefix,\r\n\r\n      freezeCols: this.config.body.freezeCols,\r\n      renderers: this.config.renderers\r\n    });\r\n    //share hist caches\r\n    this.body.histCache = this.header.sharedHistCache;\r\n\r\n    this.forward(this.body, LineUp.EVENT_HOVER_CHANGED);\r\n    if (this.config.pool && this.config.manipulative) {\r\n      this.addPool(new ui_.PoolRenderer(data, this.node, this.config));\r\n    }\r\n\r\n    if (this.config.body.visibleRowsOnly) {\r\n      this.contentScroller = new utils_.ContentScroller(<Element>this.$container.node(), this.body.node, {\r\n        backupRows: this.config.body.backupScrollRows,\r\n        rowHeight: this.config.body.rowHeight,\r\n        topShift: () => this.header.currentHeight()\r\n      });\r\n      this.contentScroller.on('scroll', (top, left) => {\r\n        //in two svg mode propagate horizontal shift\r\n        //console.log(top, left,'ss');\r\n        this.header.$node.style('transform', 'translate(' + 0 + 'px,' + top + 'px)');\r\n        if (this.config.body.freezeCols > 0) {\r\n         this.header.updateFreeze(left);\r\n         this.body.updateFreeze(left);\r\n        }\r\n      });\r\n      this.contentScroller.on('redraw', this.body.update.bind(this.body));\r\n    }\r\n  }\r\n\r\n  createEventList() {\r\n    return super.createEventList().concat([LineUp.EVENT_HOVER_CHANGED, LineUp.EVENT_SELECTION_CHANGED, LineUp.EVENT_MULTISELECTION_CHANGED, LineUp.EVENT_UPDATE_START, LineUp.EVENT_UPDATE_FINISHED]);\r\n  }\r\n\r\n  /**\r\n   * add and column pool at the given element position, with custom configuration\r\n   * @param node the node element to attach\r\n   * @param config\r\n   */\r\n  addPool(node:Element, config?:any):ui_.PoolRenderer;\r\n  addPool(pool:ui_.PoolRenderer):ui_.PoolRenderer;\r\n  addPool(pool_node:Element|ui_.PoolRenderer, config = this.config) {\r\n    if (pool_node instanceof ui_.PoolRenderer) {\r\n      this.pools.push(<ui_.PoolRenderer>pool_node);\r\n    } else {\r\n      this.pools.push(new ui_.PoolRenderer(this.data, <Element>pool_node, config));\r\n    }\r\n    return this.pools[this.pools.length - 1];\r\n  }\r\n\r\n  /**\r\n   * returns the main lineup DOM element\r\n   * @returns {Element}\r\n   */\r\n  get node() {\r\n    return <Element>this.$container.node();\r\n  }\r\n\r\n  private slice(start:number, length:number, row2y:(i:number) => number) {\r\n    if (this.contentScroller) {\r\n      return this.contentScroller.select(start, length, row2y);\r\n    }\r\n    return {from: start, to: length};\r\n  }\r\n\r\n  /**\r\n   * destroys the DOM elements created by this lineup instance, this should be the last call to this lineup instance\r\n   */\r\n  destroy() {\r\n    this.pools.forEach((p) => p.remove());\r\n    this.$container.remove();\r\n    if (this.contentScroller) {\r\n      this.contentScroller.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * sorts LineUp by he given column\r\n   * @param column callback function finding the column to sort\r\n   * @param ascending\r\n   * @returns {boolean}\r\n   */\r\n  sortBy(column:(col:model_.Column) => boolean | string, ascending = false) {\r\n    var col = this.data.find(column);\r\n    if (col) {\r\n      col.sortByMe(ascending);\r\n    }\r\n    return col !== null;\r\n  }\r\n\r\n  dump() {\r\n    return this.data.dump();\r\n  }\r\n\r\n  changeDataStorage(data:provider_.DataProvider, dump?:any) {\r\n    if (this.data) {\r\n      this.data.on('selectionChanged.main', null);\r\n    }\r\n    this.data = data;\r\n    if (dump) {\r\n      this.data.restore(dump);\r\n    }\r\n    this.data.on('selectionChanged.main', this.triggerSelection.bind(this));\r\n    this.header.changeDataStorage(data);\r\n    this.body.changeDataStorage(data);\r\n    this.pools.forEach((p) => p.changeDataStorage(data));\r\n    this.update();\r\n  }\r\n\r\n  private triggerSelection(data_indices:number[]) {\r\n    this.fire(LineUp.EVENT_SELECTION_CHANGED, data_indices.length > 0 ? data_indices[0] : -1);\r\n    this.fire(LineUp.EVENT_MULTISELECTION_CHANGED, data_indices);\r\n  }\r\n\r\n  restore(dump:any) {\r\n    this.changeDataStorage(this.data, dump);\r\n  }\r\n\r\n  /**\r\n   * local variable that is used by update()\r\n   * @type {boolean}\r\n   */\r\n  private isUpdateInitialized = false;\r\n\r\n  update() {\r\n    // HACK: when calling update for the first time the BodyRenderer\r\n    // fires 3x the `renderFinished` event. However, we want to wait for\r\n    // the last event before firing LineUp.EVENT_UPDATE_FINISHED.\r\n    // For any further call of update() the body render will fire the\r\n    // `renderFinished` event only once\r\n    var waitForBodyRenderer = (this.isUpdateInitialized) ? 1 : 3;\r\n    this.isUpdateInitialized = true;\r\n\r\n    this.fire(LineUp.EVENT_UPDATE_START);\r\n    this.header.update();\r\n    this.body.update();\r\n    this.pools.forEach((p) => p.update());\r\n\r\n    this.body.on('renderFinished', () => {\r\n      waitForBodyRenderer -= 1;\r\n      if(waitForBodyRenderer === 0)   {\r\n        this.fire(LineUp.EVENT_UPDATE_FINISHED);\r\n      }\r\n    });\r\n  }\r\n\r\n  changeRenderingOption(option:string, value:boolean) {\r\n    this.config.renderingOptions[option] = value;\r\n    if (option === 'animation' || option === 'stacked') {\r\n      this.body.setOption(option, value);\r\n      this.body.update();\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * assigns colors to colmns if they are numbers and not yet defined\r\n * @param columns\r\n * @returns {model_.IColumnDesc[]}\r\n */\r\nexport function deriveColors(columns:model_.IColumnDesc[]) {\r\n  var colors = d3.scale.category10().range().slice();\r\n  columns.forEach((col:any) => {\r\n    switch (col.type) {\r\n      case 'number':\r\n        col.color = colors.shift();\r\n        break;\r\n    }\r\n  });\r\n  return columns;\r\n}\r\n\r\n/**\r\n * creates a local storage provider\r\n * @param data\r\n * @param columns\r\n * @param options\r\n * @returns {LocalDataProvider}\r\n */\r\nexport function createLocalStorage(data:any[], columns:model_.IColumnDesc[], options = {}) {\r\n  return new provider_.LocalDataProvider(data, columns, options);\r\n}\r\n\r\nexport function create(data:provider_.DataProvider, container:d3.Selection<any> | Element, config:any = {}) {\r\n  return new LineUp(container, data, config);\r\n}\r\n\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.ts\n **/","/**\r\n * Created by Samuel Gratzl on 06.08.2015.\r\n */\r\n///<reference path='../typings/tsd.d.ts' />\r\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar d3 = require('d3');\r\nvar utils = require('./utils');\r\n/**\r\n * converts a given id to css compatible one\r\n * @param id\r\n * @return {string|void}\r\n */\r\nfunction fixCSS(id) {\r\n    return id.replace(/[\\s!#$%&'\\(\\)\\*\\+,\\.\\/:;<=>\\?@\\[\\\\\\]\\^`\\{\\|}~]/g, '_'); //replace non css stuff to _\r\n}\r\n/**\r\n * save number comparison\r\n * @param a\r\n * @param b\r\n * @return {number}\r\n */\r\nfunction numberCompare(a, b) {\r\n    if (a === b || (isNaN(a) && isNaN(b))) {\r\n        return 0;\r\n    }\r\n    return a - b;\r\n}\r\n/**\r\n * a column in LineUp\r\n */\r\nvar Column = (function (_super) {\r\n    __extends(Column, _super);\r\n    function Column(id, desc) {\r\n        _super.call(this);\r\n        this.desc = desc;\r\n        /**\r\n         * width of the column\r\n         * @type {number}\r\n         * @private\r\n         */\r\n        this.width = 100;\r\n        this.parent = null;\r\n        /**\r\n         * whether this column is compressed i.e. just shown in a minimal version\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this.compressed = false;\r\n        this.id = fixCSS(id);\r\n        this.label = this.desc.label || this.id;\r\n        this.cssClass = this.desc.cssClass || '';\r\n        this.color = this.desc.color || (this.cssClass !== '' ? null : Column.DEFAULT_COLOR);\r\n    }\r\n    Object.defineProperty(Column.prototype, \"headerCssClass\", {\r\n        get: function () {\r\n            return this.desc.type;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Column.prototype.assignNewId = function (idGenerator) {\r\n        this.id = fixCSS(idGenerator());\r\n    };\r\n    Column.prototype.init = function (callback) {\r\n        return Promise.resolve(true);\r\n    };\r\n    Object.defineProperty(Column.prototype, \"fqid\", {\r\n        /**\r\n         * returns the fully qualified id i.e. path the parent\r\n         * @returns {string}\r\n         */\r\n        get: function () {\r\n            return this.parent ? this.parent.fqid + '_' + this.id : this.id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Column.prototype, \"fqpath\", {\r\n        get: function () {\r\n            return this.parent ? this.parent.fqpath + '@' + this.parent.indexOf(this) : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * fires:\r\n     *  * widthChanged\r\n     *  * filterChanged\r\n     *  * labelChanged\r\n     *  * metaDataChanged\r\n     *  * compressChanged\r\n     *  * addColumn, removeColumn ... for composite pattern\r\n     *  * dirty, dirtyHeader, dirtyValues\r\n     * @returns {string[]}\r\n     */\r\n    Column.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['widthChanged', 'filterChanged', 'labelChanged', 'metaDataChanged', 'compressChanged', 'addColumn', 'removeColumn', 'dirty', 'dirtyHeader', 'dirtyValues']);\r\n    };\r\n    Column.prototype.getWidth = function () {\r\n        return this.width;\r\n    };\r\n    Column.prototype.isHidden = function () {\r\n        return this.width <= 0;\r\n    };\r\n    Column.prototype.setCompressed = function (value) {\r\n        if (this.compressed === value) {\r\n            return;\r\n        }\r\n        this.fire(['compressChanged', 'dirtyHeader', 'dirtyValues', 'dirty'], this.compressed, this.compressed = value);\r\n    };\r\n    Column.prototype.getCompressed = function () {\r\n        return this.compressed;\r\n    };\r\n    /**\r\n     * visitor pattern for flattening the columns\r\n     * @param r the result array\r\n     * @param offset left offeset\r\n     * @param levelsToGo how many levels down\r\n     * @param padding padding between columns\r\n     * @returns {number} the used width by this column\r\n     */\r\n    Column.prototype.flatten = function (r, offset, levelsToGo, padding) {\r\n        if (levelsToGo === void 0) { levelsToGo = 0; }\r\n        if (padding === void 0) { padding = 0; }\r\n        var w = this.compressed ? Column.COMPRESSED_WIDTH : this.getWidth();\r\n        r.push({ col: this, offset: offset, width: w });\r\n        return w;\r\n    };\r\n    Column.prototype.setWidth = function (value) {\r\n        if (this.width === value) {\r\n            return;\r\n        }\r\n        this.fire(['widthChanged', 'dirtyHeader', 'dirtyValues', 'dirty'], this.width, this.width = value);\r\n    };\r\n    Column.prototype.setWidthImpl = function (value) {\r\n        this.width = value;\r\n    };\r\n    Column.prototype.setMetaData = function (value) {\r\n        if (value.label === this.label && this.color === value.color) {\r\n            return;\r\n        }\r\n        var events = this.color === value.color ? ['labelChanged', 'metaDataChanged', 'dirtyHeader', 'dirty'] : ['labelChanged', 'metaDataChanged', 'dirtyHeader', 'dirtyValues', 'dirty'];\r\n        this.fire(events, this.getMetaData(), {\r\n            label: this.label = value.label,\r\n            color: this.color = value.color\r\n        });\r\n    };\r\n    Column.prototype.getMetaData = function () {\r\n        return {\r\n            label: this.label,\r\n            color: this.color\r\n        };\r\n    };\r\n    /**\r\n     * triggers that the ranking is sorted by this column\r\n     * @param ascending\r\n     * @returns {any}\r\n     */\r\n    Column.prototype.sortByMe = function (ascending) {\r\n        if (ascending === void 0) { ascending = false; }\r\n        var r = this.findMyRanker();\r\n        if (r) {\r\n            return r.sortBy(this, ascending);\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * toggles the sorting order of this column in the ranking\r\n     * @returns {any}\r\n     */\r\n    Column.prototype.toggleMySorting = function () {\r\n        var r = this.findMyRanker();\r\n        if (r) {\r\n            return r.toggleSorting(this);\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * removes the column from the ranking\r\n     * @returns {boolean}\r\n     */\r\n    Column.prototype.removeMe = function () {\r\n        if (this.parent) {\r\n            return this.parent.remove(this);\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * inserts the given column after itself\r\n     * @param col\r\n     * @returns {boolean}\r\n     */\r\n    Column.prototype.insertAfterMe = function (col) {\r\n        if (this.parent) {\r\n            return this.parent.insertAfter(col, this) != null;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * finds the underlying ranking column\r\n     * @returns {Ranking}\r\n     */\r\n    Column.prototype.findMyRanker = function () {\r\n        if (this.parent) {\r\n            return this.parent.findMyRanker();\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * dumps this column to JSON compatible format\r\n     * @param toDescRef\r\n     * @returns {any}\r\n     */\r\n    Column.prototype.dump = function (toDescRef) {\r\n        var r = {\r\n            id: this.id,\r\n            desc: toDescRef(this.desc),\r\n            width: this.width,\r\n            compressed: this.compressed\r\n        };\r\n        if (this.label !== (this.desc.label || this.id)) {\r\n            r.label = this.label;\r\n        }\r\n        if (this.color !== (this.desc.color || Column.DEFAULT_COLOR) && this.color) {\r\n            r.color = this.color;\r\n        }\r\n        return r;\r\n    };\r\n    /**\r\n     * restore the column content from a dump\r\n     * @param dump\r\n     * @param factory\r\n     */\r\n    Column.prototype.restore = function (dump, factory) {\r\n        this.width = dump.width || this.width;\r\n        this.label = dump.label || this.label;\r\n        this.color = dump.color || this.color;\r\n        this.compressed = dump.compressed === true;\r\n    };\r\n    /**\r\n     * return the label of a given row for the current column\r\n     * @param row\r\n     * @return {string}\r\n     */\r\n    Column.prototype.getLabel = function (row) {\r\n        return '' + this.getValue(row);\r\n    };\r\n    /**\r\n     * return the value of a given row for the current column\r\n     * @param row\r\n     * @return\r\n     */\r\n    Column.prototype.getValue = function (row) {\r\n        return ''; //no value\r\n    };\r\n    /**\r\n     * compare function used to determine the order according to the values of the current column\r\n     * @param a\r\n     * @param b\r\n     * @return {number}\r\n     */\r\n    Column.prototype.compare = function (a, b) {\r\n        return 0; //can't compare\r\n    };\r\n    /**\r\n     * flag whether any filter is applied\r\n     * @return {boolean}\r\n     */\r\n    Column.prototype.isFiltered = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * predicate whether the current row should be included\r\n     * @param row\r\n     * @return {boolean}\r\n     */\r\n    Column.prototype.filter = function (row) {\r\n        return row !== null;\r\n    };\r\n    /**\r\n     * default color that should be used\r\n     * @type {string}\r\n     */\r\n    Column.DEFAULT_COLOR = '#C1C1C1';\r\n    /**\r\n     * magic variable for showing all columns\r\n     * @type {number}\r\n     */\r\n    Column.FLAT_ALL_COLUMNS = -1;\r\n    /**\r\n     * width of a compressed column\r\n     * @type {number}\r\n     */\r\n    Column.COMPRESSED_WIDTH = 16;\r\n    return Column;\r\n}(utils.AEventDispatcher));\r\nexports.Column = Column;\r\n/**\r\n * a column having an accessor to get the cell value\r\n */\r\nvar ValueColumn = (function (_super) {\r\n    __extends(ValueColumn, _super);\r\n    function ValueColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        //find accessor\r\n        this.accessor = desc.accessor || (function () { return null; });\r\n    }\r\n    ValueColumn.prototype.getLabel = function (row) {\r\n        return '' + this.getValue(row);\r\n    };\r\n    ValueColumn.prototype.getValue = function (row) {\r\n        return this.accessor(row, this.id, this.desc, this.findMyRanker());\r\n    };\r\n    ValueColumn.prototype.compare = function (a, b) {\r\n        return 0; //can't compare\r\n    };\r\n    return ValueColumn;\r\n}(Column));\r\nexports.ValueColumn = ValueColumn;\r\n/**\r\n * a default column with no values\r\n */\r\nvar DummyColumn = (function (_super) {\r\n    __extends(DummyColumn, _super);\r\n    function DummyColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n    }\r\n    DummyColumn.prototype.getLabel = function (row) {\r\n        return '';\r\n    };\r\n    DummyColumn.prototype.getValue = function (row) {\r\n        return '';\r\n    };\r\n    DummyColumn.prototype.compare = function (a, b) {\r\n        return 0; //can't compare\r\n    };\r\n    return DummyColumn;\r\n}(Column));\r\nexports.DummyColumn = DummyColumn;\r\n/**\r\n * checks whether the given column or description is a number column, i.e. the value is a number\r\n * @param col\r\n * @returns {boolean}\r\n */\r\nfunction isNumberColumn(col) {\r\n    return (col instanceof Column && typeof col.getNumber === 'function' || (!(col instanceof Column) && col.type.match(/(number|stack|ordinal)/) != null));\r\n}\r\nexports.isNumberColumn = isNumberColumn;\r\n/**\r\n * checks whether the given column or description is a categorical column, i.e. the value is a list of categories\r\n * @param col\r\n * @returns {boolean}\r\n */\r\nfunction isCategoricalColumn(col) {\r\n    return (col instanceof Column && typeof col.getCategories === 'function' || (!(col instanceof Column) && col.type.match(/(categorical|ordinal)/) != null));\r\n}\r\nexports.isCategoricalColumn = isCategoricalColumn;\r\nfunction toScale(type) {\r\n    if (type === void 0) { type = 'linear'; }\r\n    switch (type) {\r\n        case 'log':\r\n            return d3.scale.log().clamp(true);\r\n        case 'sqrt':\r\n            return d3.scale.sqrt().clamp(true);\r\n        case 'pow1.1':\r\n            return d3.scale.pow().exponent(1.1).clamp(true);\r\n        case 'pow2':\r\n            return d3.scale.pow().exponent(2).clamp(true);\r\n        case 'pow3':\r\n            return d3.scale.pow().exponent(3).clamp(true);\r\n        default:\r\n            return d3.scale.linear().clamp(true);\r\n    }\r\n}\r\nfunction isSame(a, b) {\r\n    if (a.length !== b.length) {\r\n        return false;\r\n    }\r\n    return a.every(function (ai, i) { return ai === b[i]; });\r\n}\r\nfunction fixDomain(domain, type) {\r\n    if (type === 'log' && domain[0] === 0) {\r\n        domain[0] = 0.0000001; //0 is bad\r\n    }\r\n    return domain;\r\n}\r\n/**\r\n * a mapping function based on a d3 scale (linear, sqrt, log)\r\n */\r\nvar ScaleMappingFunction = (function () {\r\n    function ScaleMappingFunction(domain, type, range) {\r\n        if (domain === void 0) { domain = [0, 1]; }\r\n        if (type === void 0) { type = 'linear'; }\r\n        if (range === void 0) { range = [0, 1]; }\r\n        this.type = type;\r\n        this.s = toScale(type).domain(fixDomain(domain, this.type)).range(range);\r\n    }\r\n    Object.defineProperty(ScaleMappingFunction.prototype, \"domain\", {\r\n        get: function () {\r\n            return this.s.domain();\r\n        },\r\n        set: function (domain) {\r\n            this.s.domain(fixDomain(domain, this.type));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ScaleMappingFunction.prototype, \"range\", {\r\n        get: function () {\r\n            return this.s.range();\r\n        },\r\n        set: function (range) {\r\n            this.s.range(range);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScaleMappingFunction.prototype.apply = function (v) {\r\n        return this.s(v);\r\n    };\r\n    Object.defineProperty(ScaleMappingFunction.prototype, \"scaleType\", {\r\n        get: function () {\r\n            return this.type;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScaleMappingFunction.prototype.dump = function () {\r\n        return {\r\n            type: this.type,\r\n            domain: this.domain,\r\n            range: this.range\r\n        };\r\n    };\r\n    ScaleMappingFunction.prototype.eq = function (other) {\r\n        if (!(other instanceof ScaleMappingFunction)) {\r\n            return false;\r\n        }\r\n        var that = other;\r\n        return that.type === this.type && isSame(this.domain, that.domain) && isSame(this.range, that.range);\r\n    };\r\n    ScaleMappingFunction.prototype.restore = function (dump) {\r\n        this.type = dump.type;\r\n        this.s = toScale(dump.type).domain(dump.domain).range(dump.range);\r\n    };\r\n    ScaleMappingFunction.prototype.clone = function () {\r\n        return new ScaleMappingFunction(this.domain, this.type, this.range);\r\n    };\r\n    return ScaleMappingFunction;\r\n}());\r\nexports.ScaleMappingFunction = ScaleMappingFunction;\r\n/**\r\n * a mapping function based on a custom user function using 'value' as the current value\r\n */\r\nvar ScriptMappingFunction = (function () {\r\n    function ScriptMappingFunction(domain_, code_) {\r\n        if (domain_ === void 0) { domain_ = [0, 1]; }\r\n        if (code_ === void 0) { code_ = 'return this.linear(value,this.value_min,this.value_max);'; }\r\n        this.domain_ = domain_;\r\n        this.code_ = code_;\r\n        this.f = new Function('value', code_);\r\n    }\r\n    Object.defineProperty(ScriptMappingFunction.prototype, \"domain\", {\r\n        get: function () {\r\n            return this.domain_;\r\n        },\r\n        set: function (domain) {\r\n            this.domain_ = domain;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ScriptMappingFunction.prototype, \"code\", {\r\n        get: function () {\r\n            return this.code_;\r\n        },\r\n        set: function (code) {\r\n            if (this.code_ === code) {\r\n                return;\r\n            }\r\n            this.code_ = code;\r\n            this.f = new Function('value', code);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ScriptMappingFunction.prototype.apply = function (v) {\r\n        var min = this.domain_[0], max = this.domain_[this.domain_.length - 1];\r\n        var r = this.f.call({\r\n            value_min: min,\r\n            value_max: max,\r\n            value_range: max - min,\r\n            value_domain: this.domain_.slice(),\r\n            linear: function (v, mi, ma) { return (v - mi) / (ma - mi); }\r\n        }, v);\r\n        if (typeof r === 'number') {\r\n            return Math.max(Math.min(r, 1), 0);\r\n        }\r\n        return NaN;\r\n    };\r\n    ScriptMappingFunction.prototype.dump = function () {\r\n        return {\r\n            type: 'script',\r\n            code: this.code\r\n        };\r\n    };\r\n    ScriptMappingFunction.prototype.eq = function (other) {\r\n        if (!(other instanceof ScriptMappingFunction)) {\r\n            return false;\r\n        }\r\n        var that = other;\r\n        return that.code === this.code;\r\n    };\r\n    ScriptMappingFunction.prototype.restore = function (dump) {\r\n        this.code = dump.code;\r\n    };\r\n    ScriptMappingFunction.prototype.clone = function () {\r\n        return new ScriptMappingFunction(this.domain, this.code);\r\n    };\r\n    return ScriptMappingFunction;\r\n}());\r\nexports.ScriptMappingFunction = ScriptMappingFunction;\r\nfunction createMappingFunction(dump) {\r\n    if (dump.type === 'script') {\r\n        var s = new ScriptMappingFunction();\r\n        s.restore(dump);\r\n        return s;\r\n    }\r\n    else {\r\n        var l = new ScaleMappingFunction();\r\n        l.restore(dump);\r\n        return l;\r\n    }\r\n}\r\nexports.createMappingFunction = createMappingFunction;\r\n/**\r\n * a number column mapped from an original input scale to an output range\r\n */\r\nvar NumberColumn = (function (_super) {\r\n    __extends(NumberColumn, _super);\r\n    function NumberColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        this.missingValue = 0;\r\n        /**\r\n         * currently active filter\r\n         * @type {{min: number, max: number}}\r\n         * @private\r\n         */\r\n        this.currentFilter = { min: -Infinity, max: Infinity };\r\n        this.numberFormat = d3.format('.3n');\r\n        if (desc.map) {\r\n            this.mapping = createMappingFunction(desc.map);\r\n        }\r\n        else if (desc.domain) {\r\n            this.mapping = new ScaleMappingFunction(desc.domain, 'linear', desc.range || [0, 1]);\r\n        }\r\n        this.original = this.mapping.clone();\r\n        if (desc.numberFormat) {\r\n            this.numberFormat = d3.format(desc.numberFormat);\r\n        }\r\n    }\r\n    NumberColumn.prototype.init = function (callback) {\r\n        var _this = this;\r\n        var d = this.mapping.domain;\r\n        //if any of the values is not given use the statistics to compute them\r\n        if (isNaN(d[0]) || isNaN(d[1])) {\r\n            return callback(this.desc).then(function (stats) {\r\n                _this.mapping.domain = [stats.min, stats.max];\r\n                _this.original.domain = [stats.min, stats.max];\r\n                return true;\r\n            });\r\n        }\r\n        return Promise.resolve(true);\r\n    };\r\n    NumberColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.map = this.mapping.dump();\r\n        r.filter = this.currentFilter;\r\n        r.missingValue = this.missingValue;\r\n        return r;\r\n    };\r\n    NumberColumn.prototype.restore = function (dump, factory) {\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        if (dump.map) {\r\n            this.mapping = createMappingFunction(dump.map);\r\n        }\r\n        else if (dump.domain) {\r\n            this.mapping = new ScaleMappingFunction(dump.domain, 'linear', dump.range || [0, 1]);\r\n        }\r\n        if (dump.currentFilter) {\r\n            this.currentFilter = dump.currentFilter;\r\n        }\r\n        if (dump.missingValue) {\r\n            this.missingValue = dump.missingValue;\r\n        }\r\n        if (dump.numberFormat) {\r\n            this.numberFormat = d3.format(dump.numberFormat);\r\n        }\r\n    };\r\n    NumberColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['mappingChanged']);\r\n    };\r\n    NumberColumn.prototype.getLabel = function (row) {\r\n        var v = _super.prototype.getValue.call(this, row);\r\n        //keep non number if it is not a number else convert using formatter\r\n        return '' + (typeof v === 'number' ? this.numberFormat(v) : v);\r\n    };\r\n    NumberColumn.prototype.getRawValue = function (row) {\r\n        var v = _super.prototype.getValue.call(this, row);\r\n        if (typeof (v) === 'undefined' || v == null || isNaN(v) || v === '' || v === 'NA' || (typeof (v) === 'string' && (v.toLowerCase() === 'na'))) {\r\n            return this.missingValue;\r\n        }\r\n        return +v;\r\n    };\r\n    NumberColumn.prototype.getValue = function (row) {\r\n        var v = this.getRawValue(row);\r\n        if (isNaN(v)) {\r\n            return v;\r\n        }\r\n        return this.mapping.apply(v);\r\n    };\r\n    NumberColumn.prototype.getNumber = function (row) {\r\n        return this.getValue(row);\r\n    };\r\n    NumberColumn.prototype.compare = function (a, b) {\r\n        return numberCompare(this.getValue(a), this.getValue(b));\r\n    };\r\n    NumberColumn.prototype.getOriginalMapping = function () {\r\n        return this.original.clone();\r\n    };\r\n    NumberColumn.prototype.getMapping = function () {\r\n        return this.mapping.clone();\r\n    };\r\n    NumberColumn.prototype.setMapping = function (mapping) {\r\n        if (this.mapping.eq(mapping)) {\r\n            return;\r\n        }\r\n        this.fire(['mappingChanged', 'dirtyValues', 'dirty'], this.mapping.clone(), this.mapping = mapping);\r\n    };\r\n    NumberColumn.prototype.isFiltered = function () {\r\n        return isFinite(this.currentFilter.min) || isFinite(this.currentFilter.max);\r\n    };\r\n    Object.defineProperty(NumberColumn.prototype, \"filterMin\", {\r\n        get: function () {\r\n            return this.currentFilter.min;\r\n        },\r\n        set: function (min) {\r\n            var bak = { min: this.currentFilter.min, max: this.currentFilter.max };\r\n            this.currentFilter.min = isNaN(min) ? -Infinity : min;\r\n            this.fire(['filterChanged', 'dirtyValues', 'dirty'], bak, this.currentFilter);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(NumberColumn.prototype, \"filterMax\", {\r\n        get: function () {\r\n            return this.currentFilter.max;\r\n        },\r\n        set: function (max) {\r\n            var bak = { min: this.currentFilter.min, max: this.currentFilter.max };\r\n            this.currentFilter.max = isNaN(max) ? Infinity : max;\r\n            this.fire(['filterChanged', 'dirtyValues', 'dirty'], bak, this.currentFilter);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    NumberColumn.prototype.getFilter = function () {\r\n        return {\r\n            min: this.currentFilter.min,\r\n            max: this.currentFilter.max\r\n        };\r\n    };\r\n    NumberColumn.prototype.setFilter = function (value) {\r\n        if (value === void 0) { value = { min: -Infinity, max: +Infinity }; }\r\n        if (this.currentFilter.min === value.min && this.currentFilter.max === value.max) {\r\n            return;\r\n        }\r\n        var bak = this.getFilter();\r\n        this.currentFilter.min = isNaN(value.min) ? -Infinity : value.min;\r\n        this.currentFilter.max = isNaN(value.max) ? Infinity : value.max;\r\n        this.fire(['filterChanged', 'dirtyValues', 'dirty'], bak, this.currentFilter);\r\n    };\r\n    /**\r\n     * filter the current row if any filter is set\r\n     * @param row\r\n     * @returns {boolean}\r\n     */\r\n    NumberColumn.prototype.filter = function (row) {\r\n        if (!this.isFiltered()) {\r\n            return true;\r\n        }\r\n        var v = this.getRawValue(row);\r\n        if (isNaN(v)) {\r\n            return true;\r\n        }\r\n        return !((isFinite(this.currentFilter.min) && v < this.currentFilter.min) || (isFinite(this.currentFilter.max) && v < this.currentFilter.max));\r\n    };\r\n    return NumberColumn;\r\n}(ValueColumn));\r\nexports.NumberColumn = NumberColumn;\r\n/**\r\n * a string column with optional alignment\r\n */\r\nvar StringColumn = (function (_super) {\r\n    __extends(StringColumn, _super);\r\n    function StringColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        this.currentFilter = null;\r\n        this._alignment = 'left';\r\n        this.setWidthImpl(200); //by default 200\r\n        this._alignment = desc.alignment || 'left';\r\n    }\r\n    Object.defineProperty(StringColumn.prototype, \"alignment\", {\r\n        //readonly\r\n        get: function () {\r\n            return this._alignment;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    StringColumn.prototype.getValue = function (row) {\r\n        var v = _super.prototype.getValue.call(this, row);\r\n        if (typeof (v) === 'undefined' || v == null) {\r\n            return '';\r\n        }\r\n        return v;\r\n    };\r\n    StringColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        if (this.currentFilter instanceof RegExp) {\r\n            r.filter = 'REGEX:' + this.currentFilter.source;\r\n        }\r\n        else {\r\n            r.filter = this.currentFilter;\r\n        }\r\n        r.alignment = this.alignment;\r\n        return r;\r\n    };\r\n    StringColumn.prototype.restore = function (dump, factory) {\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        if (dump.filter && dump.filter.slice(0, 6) === 'REGEX:') {\r\n            this.currentFilter = new RegExp(dump.filter.slice(6));\r\n        }\r\n        else {\r\n            this.currentFilter = dump.filter || null;\r\n        }\r\n        this._alignment = dump.alignment || this._alignment;\r\n    };\r\n    StringColumn.prototype.isFiltered = function () {\r\n        return this.currentFilter != null;\r\n    };\r\n    StringColumn.prototype.filter = function (row) {\r\n        if (!this.isFiltered()) {\r\n            return true;\r\n        }\r\n        var r = this.getLabel(row), filter = this.currentFilter;\r\n        if (typeof filter === 'string' && filter.length > 0) {\r\n            return r && r.toLowerCase().indexOf(filter.toLowerCase()) >= 0;\r\n        }\r\n        if (filter instanceof RegExp) {\r\n            return r && filter.test(r);\r\n        }\r\n        return true;\r\n    };\r\n    StringColumn.prototype.getFilter = function () {\r\n        return this.currentFilter;\r\n    };\r\n    StringColumn.prototype.setFilter = function (filter) {\r\n        if (filter === '') {\r\n            filter = null;\r\n        }\r\n        if (this.currentFilter === filter) {\r\n            return;\r\n        }\r\n        this.fire(['filterChanged', 'dirtyValues', 'dirty'], this.currentFilter, this.currentFilter = filter);\r\n    };\r\n    StringColumn.prototype.compare = function (a, b) {\r\n        if (this.getValue(a) === '') {\r\n            return 1;\r\n        }\r\n        else if (this.getValue(b) === '') {\r\n            return -1;\r\n        }\r\n        else if (this.getValue(a) === this.getValue(b)) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return this.getValue(a) < this.getValue(b) ? -1 : 1;\r\n        }\r\n    };\r\n    return StringColumn;\r\n}(ValueColumn));\r\nexports.StringColumn = StringColumn;\r\n/**\r\n * a string column in which the label is a text but the value a link\r\n */\r\nvar LinkColumn = (function (_super) {\r\n    __extends(LinkColumn, _super);\r\n    function LinkColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        /**\r\n         * a pattern used for generating the link, $1 is replaced with the actual value\r\n         * @type {null}\r\n         */\r\n        this.link = null;\r\n        this.link = desc.link;\r\n    }\r\n    Object.defineProperty(LinkColumn.prototype, \"headerCssClass\", {\r\n        get: function () {\r\n            return this.link == null ? 'link' : 'link link_pattern';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinkColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['linkChanged']);\r\n    };\r\n    LinkColumn.prototype.setLink = function (link) {\r\n        /* tslint:disable */\r\n        if (link == this.link) {\r\n            return;\r\n        }\r\n        /* tslint:enable */\r\n        this.fire(['linkChanged', 'dirtyHeader', 'dirtyValues', 'dirty'], this.link, this.link = link);\r\n    };\r\n    LinkColumn.prototype.getLink = function () {\r\n        return this.link || '';\r\n    };\r\n    LinkColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        /* tslint:disable */\r\n        if (this.link != this.desc.link) {\r\n            r.link = this.link;\r\n        }\r\n        /* tslint:enable */\r\n        return r;\r\n    };\r\n    LinkColumn.prototype.restore = function (dump, factory) {\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        if (dump.link) {\r\n            this.link = dump.link;\r\n        }\r\n    };\r\n    LinkColumn.prototype.getLabel = function (row) {\r\n        var v = _super.prototype.getValue.call(this, row);\r\n        if (v.alt) {\r\n            return v.alt;\r\n        }\r\n        return '' + v;\r\n    };\r\n    LinkColumn.prototype.isLink = function (row) {\r\n        if (this.link) {\r\n            return true;\r\n        }\r\n        //get original value\r\n        var v = _super.prototype.getValue.call(this, row);\r\n        //convert to link\r\n        return v.href != null;\r\n    };\r\n    LinkColumn.prototype.getValue = function (row) {\r\n        //get original value\r\n        var v = _super.prototype.getValue.call(this, row);\r\n        //convert to link\r\n        if (v.href) {\r\n            return v.href;\r\n        }\r\n        else if (this.link) {\r\n            return this.link.replace(/\\$1/g, v);\r\n        }\r\n        return v;\r\n    };\r\n    return LinkColumn;\r\n}(StringColumn));\r\nexports.LinkColumn = LinkColumn;\r\n/**\r\n * a string column in which the values can be edited locally\r\n */\r\nvar AnnotateColumn = (function (_super) {\r\n    __extends(AnnotateColumn, _super);\r\n    function AnnotateColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        this.annotations = d3.map();\r\n    }\r\n    AnnotateColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['valueChanged']);\r\n    };\r\n    AnnotateColumn.prototype.getValue = function (row) {\r\n        var index = String(row._index);\r\n        if (this.annotations.has(index)) {\r\n            return this.annotations.get(index);\r\n        }\r\n        return _super.prototype.getValue.call(this, row);\r\n    };\r\n    AnnotateColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.annotations = {};\r\n        this.annotations.forEach(function (k, v) {\r\n            r.annotations[k] = v;\r\n        });\r\n        return r;\r\n    };\r\n    AnnotateColumn.prototype.restore = function (dump, factory) {\r\n        var _this = this;\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        if (dump.annotations) {\r\n            Object.keys(dump.annotations).forEach(function (k) {\r\n                _this.annotations.set(k, dump.annotations[k]);\r\n            });\r\n        }\r\n    };\r\n    AnnotateColumn.prototype.setValue = function (row, value) {\r\n        var old = this.getValue(row);\r\n        if (old === value) {\r\n            return true;\r\n        }\r\n        if (value === '' || value == null) {\r\n            this.annotations.remove(String(row._index));\r\n        }\r\n        else {\r\n            this.annotations.set(String(row._index), value);\r\n        }\r\n        this.fire(['valueChanged', 'dirtyValues', 'dirty'], row._index, old, value);\r\n        return true;\r\n    };\r\n    return AnnotateColumn;\r\n}(StringColumn));\r\nexports.AnnotateColumn = AnnotateColumn;\r\nfunction arrayEquals(a, b) {\r\n    var al = a != null ? a.length : 0;\r\n    var bl = b != null ? b.length : 0;\r\n    if (al !== bl) {\r\n        return false;\r\n    }\r\n    if (al === 0) {\r\n        return true;\r\n    }\r\n    return a.every(function (ai, i) { return ai === b[i]; });\r\n}\r\n/**\r\n * a checkbox column for selections\r\n */\r\nvar SelectionColumn = (function (_super) {\r\n    __extends(SelectionColumn, _super);\r\n    function SelectionColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        this.setCompressed(true);\r\n    }\r\n    /**\r\n     * factory for creating a description creating a rank column\r\n     * @param label\r\n     * @returns {{type: string, label: string}}\r\n     */\r\n    SelectionColumn.desc = function (label) {\r\n        if (label === void 0) { label = 'S'; }\r\n        return { type: 'selection', label: label };\r\n    };\r\n    SelectionColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['select']);\r\n    };\r\n    SelectionColumn.prototype.setValue = function (row, value) {\r\n        var old = this.getValue(row);\r\n        if (old === value) {\r\n            return true;\r\n        }\r\n        return this.setImpl(row, value);\r\n    };\r\n    SelectionColumn.prototype.setImpl = function (row, value) {\r\n        if (this.desc.setter) {\r\n            this.desc.setter(row, value);\r\n        }\r\n        this.fire('select', row, value);\r\n        return true;\r\n    };\r\n    SelectionColumn.prototype.toggleValue = function (row) {\r\n        var old = this.getValue(row);\r\n        this.setImpl(row, !old);\r\n        return !old;\r\n    };\r\n    SelectionColumn.prototype.compare = function (a, b) {\r\n        return d3.ascending(this.getValue(a), this.getValue(b));\r\n    };\r\n    return SelectionColumn;\r\n}(ValueColumn));\r\nexports.SelectionColumn = SelectionColumn;\r\n/**\r\n * a string column with optional alignment\r\n */\r\nvar BooleanColumn = (function (_super) {\r\n    __extends(BooleanColumn, _super);\r\n    function BooleanColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        this.currentFilter = null;\r\n        this.trueMarker = 'X';\r\n        this.falseMarker = '';\r\n        this.setWidthImpl(30);\r\n        this.trueMarker = desc.trueMarker || this.trueMarker;\r\n        this.falseMarker = desc.falseMarker || this.falseMarker;\r\n    }\r\n    BooleanColumn.prototype.getValue = function (row) {\r\n        var v = _super.prototype.getValue.call(this, row);\r\n        if (typeof (v) === 'undefined' || v == null) {\r\n            return false;\r\n        }\r\n        return v === true || v === 'true' || v === 'yes' || v === 'x';\r\n    };\r\n    BooleanColumn.prototype.getLabel = function (row) {\r\n        var v = this.getValue(row);\r\n        return v ? this.trueMarker : this.falseMarker;\r\n    };\r\n    BooleanColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        if (this.currentFilter !== null) {\r\n            r.filter = this.currentFilter;\r\n        }\r\n        return r;\r\n    };\r\n    BooleanColumn.prototype.restore = function (dump, factory) {\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        if (typeof dump.filter !== 'undefined') {\r\n            this.currentFilter = dump.filter;\r\n        }\r\n    };\r\n    BooleanColumn.prototype.isFiltered = function () {\r\n        return this.currentFilter !== null;\r\n    };\r\n    BooleanColumn.prototype.filter = function (row) {\r\n        if (!this.isFiltered()) {\r\n            return true;\r\n        }\r\n        var r = this.getValue(row);\r\n        return r === this.currentFilter;\r\n    };\r\n    BooleanColumn.prototype.getFilter = function () {\r\n        return this.currentFilter;\r\n    };\r\n    BooleanColumn.prototype.setFilter = function (filter) {\r\n        if (this.currentFilter === filter) {\r\n            return;\r\n        }\r\n        this.fire(['filterChanged', 'dirtyValues', 'dirty'], this.currentFilter, this.currentFilter = filter);\r\n    };\r\n    BooleanColumn.prototype.compare = function (a, b) {\r\n        return d3.ascending(this.getValue(a), this.getValue(b));\r\n    };\r\n    return BooleanColumn;\r\n}(ValueColumn));\r\nexports.BooleanColumn = BooleanColumn;\r\n/**\r\n * column for categorical values\r\n */\r\nvar CategoricalColumn = (function (_super) {\r\n    __extends(CategoricalColumn, _super);\r\n    function CategoricalColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        /**\r\n         * colors for each category\r\n         * @type {Ordinal<string, string>}\r\n         */\r\n        this.colors = d3.scale.category10();\r\n        /**\r\n         * category labels by default the category name itself\r\n         * @type {Array}\r\n         */\r\n        this.catLabels = d3.map();\r\n        /**\r\n         * set of categories to show\r\n         * @type {null}\r\n         * @private\r\n         */\r\n        this.currentFilter = null;\r\n        /**\r\n         * split multiple categories\r\n         * @type {string}\r\n         */\r\n        this.separator = ';';\r\n        this.separator = desc.separator || this.separator;\r\n        this.initCategories(desc);\r\n        //TODO infer categories from data\r\n    }\r\n    CategoricalColumn.prototype.initCategories = function (desc) {\r\n        if (desc.categories) {\r\n            var cats = [], cols = this.colors.range(), labels = d3.map();\r\n            desc.categories.forEach(function (cat, i) {\r\n                if (typeof cat === 'string') {\r\n                    cats.push(cat);\r\n                }\r\n                else {\r\n                    cats.push(cat.name);\r\n                    if (cat.label) {\r\n                        labels.set(cat.name, cat.label);\r\n                    }\r\n                    cols[i] = cat.color;\r\n                }\r\n            });\r\n            this.catLabels = labels;\r\n            this.colors.domain(cats).range(cols);\r\n        }\r\n    };\r\n    Object.defineProperty(CategoricalColumn.prototype, \"categories\", {\r\n        get: function () {\r\n            return this.colors.domain();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoricalColumn.prototype, \"categoryColors\", {\r\n        get: function () {\r\n            return this.colors.range();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoricalColumn.prototype, \"categoryLabels\", {\r\n        get: function () {\r\n            var _this = this;\r\n            //no mapping\r\n            if (this.catLabels === null || this.catLabels.empty()) {\r\n                return this.categories;\r\n            }\r\n            //label or identity mapping\r\n            return this.categories.map(function (c) { return _this.catLabels.has(c) ? _this.catLabels.get(c) : c; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CategoricalColumn.prototype.colorOf = function (cat) {\r\n        return this.colors(cat);\r\n    };\r\n    CategoricalColumn.prototype.getLabel = function (row) {\r\n        //no mapping\r\n        if (this.catLabels === null || this.catLabels.empty()) {\r\n            return '' + StringColumn.prototype.getValue.call(this, row);\r\n        }\r\n        return this.getLabels(row).join(this.separator);\r\n    };\r\n    CategoricalColumn.prototype.getFirstLabel = function (row) {\r\n        var l = this.getLabels(row);\r\n        return l.length > 0 ? l[0] : null;\r\n    };\r\n    CategoricalColumn.prototype.getLabels = function (row) {\r\n        var _this = this;\r\n        var v = StringColumn.prototype.getValue.call(this, row);\r\n        var r = v.split(this.separator);\r\n        var mapToLabel = function (values) {\r\n            if (_this.catLabels === null || _this.catLabels.empty()) {\r\n                return values;\r\n            }\r\n            return values.map(function (v) { return _this.catLabels.has(v) ? _this.catLabels.get(v) : v; });\r\n        };\r\n        return mapToLabel(r);\r\n    };\r\n    CategoricalColumn.prototype.getValue = function (row) {\r\n        var r = this.getValues(row);\r\n        return r.length > 0 ? r[0] : null;\r\n    };\r\n    CategoricalColumn.prototype.getValues = function (row) {\r\n        var v = StringColumn.prototype.getValue.call(this, row);\r\n        var r = v.split(this.separator);\r\n        return r;\r\n    };\r\n    CategoricalColumn.prototype.getCategories = function (row) {\r\n        return this.getValues(row);\r\n    };\r\n    CategoricalColumn.prototype.getColor = function (row) {\r\n        var cat = this.getValue(row);\r\n        if (cat === null || cat === '') {\r\n            return null;\r\n        }\r\n        return this.colors(cat);\r\n    };\r\n    CategoricalColumn.prototype.getColors = function (row) {\r\n        return this.getValues(row).map(this.colors);\r\n    };\r\n    CategoricalColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.filter = this.currentFilter;\r\n        r.colors = {\r\n            domain: this.colors.domain(),\r\n            range: this.colors.range(),\r\n            separator: this.separator\r\n        };\r\n        return r;\r\n    };\r\n    CategoricalColumn.prototype.restore = function (dump, factory) {\r\n        _super.prototype.restore.call(this, dump, factory);\r\n        this.currentFilter = dump.filter || null;\r\n        if (dump.colors) {\r\n            this.colors.domain(dump.colors.domain).range(dump.colors.range);\r\n        }\r\n        this.separator = dump.separator || this.separator;\r\n    };\r\n    CategoricalColumn.prototype.isFiltered = function () {\r\n        return this.currentFilter != null;\r\n    };\r\n    CategoricalColumn.prototype.filter = function (row) {\r\n        if (!this.isFiltered()) {\r\n            return true;\r\n        }\r\n        var vs = this.getValues(row), filter = this.currentFilter;\r\n        return vs.every(function (v) {\r\n            if (Array.isArray(filter) && filter.length > 0) {\r\n                return filter.indexOf(v) >= 0;\r\n            }\r\n            else if (typeof filter === 'string' && filter.length > 0) {\r\n                return v && v.toLowerCase().indexOf(filter.toLowerCase()) >= 0;\r\n            }\r\n            else if (filter instanceof RegExp) {\r\n                return v != null && v.match(filter).length > 0;\r\n            }\r\n            return true;\r\n        });\r\n    };\r\n    CategoricalColumn.prototype.getFilter = function () {\r\n        return this.currentFilter;\r\n    };\r\n    CategoricalColumn.prototype.setFilter = function (filter) {\r\n        if (arrayEquals(this.currentFilter, filter)) {\r\n            return;\r\n        }\r\n        this.fire(['filterChanged', 'dirtyValues', 'dirty'], this.currentFilter, this.currentFilter = filter);\r\n    };\r\n    CategoricalColumn.prototype.compare = function (a, b) {\r\n        var va = this.getValues(a);\r\n        var vb = this.getValues(b);\r\n        //check all categories\r\n        for (var i = 0; i < Math.min(va.length, vb.length); ++i) {\r\n            var ci = d3.ascending(va[i], vb[i]);\r\n            if (ci !== 0) {\r\n                return ci;\r\n            }\r\n        }\r\n        //smaller length wins\r\n        return va.length - vb.length;\r\n    };\r\n    return CategoricalColumn;\r\n}(ValueColumn));\r\nexports.CategoricalColumn = CategoricalColumn;\r\n/**\r\n * similar to a categorical column but the categories are mapped to numbers\r\n */\r\nvar CategoricalNumberColumn = (function (_super) {\r\n    __extends(CategoricalNumberColumn, _super);\r\n    function CategoricalNumberColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        this.colors = d3.scale.category10();\r\n        /**\r\n         * category labels by default the category name itself\r\n         * @type {Array}\r\n         */\r\n        this.catLabels = d3.map();\r\n        this.scale = d3.scale.ordinal().rangeRoundPoints([0, 1]);\r\n        this.currentFilter = null;\r\n        /**\r\n         * separator for multi handling\r\n         * @type {string}\r\n         */\r\n        this.separator = ';';\r\n        this.combiner = d3.max;\r\n        this.separator = desc.separator || this.separator;\r\n        CategoricalColumn.prototype.initCategories.call(this, desc);\r\n        this.scale.domain(this.colors.domain());\r\n        if (desc.categories) {\r\n            var values = [];\r\n            desc.categories.forEach(function (d) {\r\n                if (typeof d !== 'string' && typeof (d.value) === 'number') {\r\n                    values.push(d.value);\r\n                }\r\n                else {\r\n                    values.push(0.5); //by default 0.5\r\n                }\r\n            });\r\n            this.scale.range(values);\r\n        }\r\n    }\r\n    CategoricalNumberColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['mappingChanged']);\r\n    };\r\n    Object.defineProperty(CategoricalNumberColumn.prototype, \"categories\", {\r\n        get: function () {\r\n            return this.colors.domain();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoricalNumberColumn.prototype, \"categoryColors\", {\r\n        get: function () {\r\n            return this.colors.range();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CategoricalNumberColumn.prototype, \"categoryLabels\", {\r\n        get: function () {\r\n            var _this = this;\r\n            //no mapping\r\n            if (this.catLabels === null || this.catLabels.empty()) {\r\n                return this.categories;\r\n            }\r\n            //label or identity mapping\r\n            return this.categories.map(function (c) { return _this.catLabels.has(c) ? _this.catLabels.get(c) : c; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CategoricalNumberColumn.prototype.colorOf = function (cat) {\r\n        return this.colors(cat);\r\n    };\r\n    CategoricalNumberColumn.prototype.getLabel = function (row) {\r\n        return CategoricalColumn.prototype.getLabel.call(this, row);\r\n    };\r\n    CategoricalNumberColumn.prototype.getFirstLabel = function (row) {\r\n        return CategoricalColumn.prototype.getFirstLabel.call(this, row);\r\n    };\r\n    CategoricalNumberColumn.prototype.getLabels = function (row) {\r\n        return CategoricalColumn.prototype.getLabels.call(this, row);\r\n    };\r\n    CategoricalNumberColumn.prototype.getValue = function (row) {\r\n        var r = this.getValues(row);\r\n        return r.length > 0 ? this.combiner(r) : 0;\r\n    };\r\n    CategoricalNumberColumn.prototype.getValues = function (row) {\r\n        var r = CategoricalColumn.prototype.getValues.call(this, row);\r\n        return r.map(this.scale);\r\n    };\r\n    CategoricalNumberColumn.prototype.getCategories = function (row) {\r\n        return CategoricalColumn.prototype.getValues.call(this, row);\r\n    };\r\n    CategoricalNumberColumn.prototype.getNumber = function (row) {\r\n        return this.getValue(row);\r\n    };\r\n    CategoricalNumberColumn.prototype.getColor = function (row) {\r\n        var vs = this.getValues(row);\r\n        var cs = this.getColors(row);\r\n        if (this.combiner === d3.max) {\r\n            //use the max color\r\n            return cs.slice(1).reduce(function (prev, act, i) { return vs[i + 1] > prev.v ? { c: act, v: vs[i + 1] } : prev; }, {\r\n                c: cs[0],\r\n                v: vs[0]\r\n            }).c;\r\n        }\r\n        else if (this.combiner === d3.min) {\r\n            //use the max color\r\n            return cs.slice(1).reduce(function (prev, act, i) { return vs[i + 1] < prev.v ? { c: act, v: vs[i + 1] } : prev; }, {\r\n                c: cs[0],\r\n                v: vs[0]\r\n            }).c;\r\n        }\r\n        else {\r\n            //use the first\r\n            return cs[0] || null;\r\n        }\r\n    };\r\n    CategoricalNumberColumn.prototype.getColors = function (row) {\r\n        return CategoricalColumn.prototype.getColors.call(this, row);\r\n    };\r\n    CategoricalNumberColumn.prototype.dump = function (toDescRef) {\r\n        var r = CategoricalColumn.prototype.dump.call(this, toDescRef);\r\n        r.scale = {\r\n            domain: this.scale.domain(),\r\n            range: this.scale.range(),\r\n            separator: this.separator\r\n        };\r\n        return r;\r\n    };\r\n    CategoricalNumberColumn.prototype.restore = function (dump, factory) {\r\n        CategoricalColumn.prototype.restore.call(this, dump, factory);\r\n        if (dump.scale) {\r\n            this.scale.domain(dump.scale.domain).range(dump.scale.range);\r\n        }\r\n        this.separator = dump.separator || this.separator;\r\n    };\r\n    CategoricalNumberColumn.prototype.getScale = function () {\r\n        return {\r\n            domain: this.scale.domain(),\r\n            range: this.scale.range()\r\n        };\r\n    };\r\n    CategoricalNumberColumn.prototype.getMapping = function () {\r\n        return this.scale.range().slice();\r\n    };\r\n    CategoricalNumberColumn.prototype.setMapping = function (range) {\r\n        var bak = this.getScale();\r\n        this.scale.range(range);\r\n        this.fire(['mappingChanged', 'dirtyValues', 'dirty'], bak, this.getScale());\r\n    };\r\n    CategoricalNumberColumn.prototype.isFiltered = function () {\r\n        return this.currentFilter != null;\r\n    };\r\n    CategoricalNumberColumn.prototype.filter = function (row) {\r\n        return CategoricalColumn.prototype.filter.call(this, row);\r\n    };\r\n    CategoricalNumberColumn.prototype.getFilter = function () {\r\n        return this.currentFilter;\r\n    };\r\n    CategoricalNumberColumn.prototype.setFilter = function (filter) {\r\n        if (this.currentFilter === filter) {\r\n            return;\r\n        }\r\n        this.fire(['filterChanged', 'dirtyValues', 'dirty'], this.currentFilter, this.currentFilter = filter);\r\n    };\r\n    CategoricalNumberColumn.prototype.compare = function (a, b) {\r\n        return NumberColumn.prototype.compare.call(this, a, b);\r\n    };\r\n    return CategoricalNumberColumn;\r\n}(ValueColumn));\r\nexports.CategoricalNumberColumn = CategoricalNumberColumn;\r\n/**\r\n * implementation of a combine column, standard operations how to select\r\n */\r\nvar CompositeColumn = (function (_super) {\r\n    __extends(CompositeColumn, _super);\r\n    function CompositeColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        this.missingValue = 0;\r\n        this._children = [];\r\n        this.numberFormat = d3.format('.3n');\r\n        if (desc.numberFormat) {\r\n            this.numberFormat = d3.format(desc.numberFormat);\r\n        }\r\n    }\r\n    CompositeColumn.prototype.assignNewId = function (idGenerator) {\r\n        _super.prototype.assignNewId.call(this, idGenerator);\r\n        this._children.forEach(function (c) { return c.assignNewId(idGenerator); });\r\n    };\r\n    Object.defineProperty(CompositeColumn.prototype, \"children\", {\r\n        get: function () {\r\n            return this._children.slice();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompositeColumn.prototype, \"length\", {\r\n        get: function () {\r\n            return this._children.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompositeColumn.prototype.flatten = function (r, offset, levelsToGo, padding) {\r\n        if (levelsToGo === void 0) { levelsToGo = 0; }\r\n        if (padding === void 0) { padding = 0; }\r\n        var self = null;\r\n        //no more levels or just this one\r\n        if (levelsToGo === 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\r\n            var w = this.getCompressed() ? Column.COMPRESSED_WIDTH : this.getWidth();\r\n            r.push(self = { col: this, offset: offset, width: w });\r\n            if (levelsToGo === 0) {\r\n                return w;\r\n            }\r\n        }\r\n        //push children\r\n        this._children.forEach(function (c) {\r\n            if (!c.isHidden() || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\r\n                c.flatten(r, offset, levelsToGo - 1, padding);\r\n            }\r\n        });\r\n        return w;\r\n    };\r\n    CompositeColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.children = this._children.map(function (d) { return d.dump(toDescRef); });\r\n        r.missingValue = this.missingValue;\r\n        return r;\r\n    };\r\n    CompositeColumn.prototype.restore = function (dump, factory) {\r\n        var _this = this;\r\n        if (dump.missingValue) {\r\n            this.missingValue = dump.missingValue;\r\n        }\r\n        if (dump.numberFormat) {\r\n            this.numberFormat = d3.format(dump.numberFormat);\r\n        }\r\n        dump.children.map(function (child) {\r\n            var c = factory(child);\r\n            if (c) {\r\n                _this.push(c);\r\n            }\r\n        });\r\n        _super.prototype.restore.call(this, dump, factory);\r\n    };\r\n    /**\r\n     * inserts a column at a the given position\r\n     * @param col\r\n     * @param index\r\n     * @param weight\r\n     * @returns {any}\r\n     */\r\n    CompositeColumn.prototype.insert = function (col, index) {\r\n        if (!isNumberColumn(col)) {\r\n            return null;\r\n        }\r\n        this._children.splice(index, 0, col);\r\n        //listen and propagate events\r\n        return this.insertImpl(col, index);\r\n    };\r\n    CompositeColumn.prototype.insertImpl = function (col, index) {\r\n        col.parent = this;\r\n        this.forward(col, 'dirtyHeader.combine', 'dirtyValues.combine', 'dirty.combine', 'filterChanged.combine');\r\n        this.fire(['addColumn', 'dirtyHeader', 'dirtyValues', 'dirty'], col, index);\r\n        return col;\r\n    };\r\n    CompositeColumn.prototype.push = function (col) {\r\n        return this.insert(col, this._children.length);\r\n    };\r\n    CompositeColumn.prototype.at = function (index) {\r\n        return this._children[index];\r\n    };\r\n    CompositeColumn.prototype.indexOf = function (col) {\r\n        return this._children.indexOf(col);\r\n    };\r\n    CompositeColumn.prototype.insertAfter = function (col, ref) {\r\n        var i = this.indexOf(ref);\r\n        if (i < 0) {\r\n            return null;\r\n        }\r\n        return this.insert(col, i + 1);\r\n    };\r\n    CompositeColumn.prototype.remove = function (child) {\r\n        var i = this._children.indexOf(child);\r\n        if (i < 0) {\r\n            return false;\r\n        }\r\n        this._children.splice(i, 1); //remove and deregister listeners\r\n        return this.removeImpl(child);\r\n    };\r\n    CompositeColumn.prototype.removeImpl = function (child) {\r\n        child.parent = null;\r\n        this.unforward(child, 'dirtyHeader.combine', 'dirtyValues.combine', 'dirty.combine', 'filterChanged.combine');\r\n        this.fire(['removeColumn', 'dirtyHeader', 'dirtyValues', 'dirty'], child);\r\n        return true;\r\n    };\r\n    CompositeColumn.prototype.getColor = function (row) {\r\n        return this.color;\r\n    };\r\n    CompositeColumn.prototype.getLabel = function (row) {\r\n        var v = this.getValue(row);\r\n        //keep non number if it is not a number else convert using formatter\r\n        return '' + (typeof v === 'number' ? this.numberFormat(v) : v);\r\n    };\r\n    CompositeColumn.prototype.getValue = function (row) {\r\n        //weighted sum\r\n        var v = this.compute(row);\r\n        if (typeof (v) === 'undefined' || v == null || isNaN(v)) {\r\n            return this.missingValue;\r\n        }\r\n        return v;\r\n    };\r\n    CompositeColumn.prototype.compute = function (row) {\r\n        return NaN;\r\n    };\r\n    CompositeColumn.prototype.getNumber = function (row) {\r\n        return this.getValue(row);\r\n    };\r\n    CompositeColumn.prototype.compare = function (a, b) {\r\n        return numberCompare(this.getValue(a), this.getValue(b));\r\n    };\r\n    CompositeColumn.prototype.isFiltered = function () {\r\n        return this._children.some(function (d) { return d.isFiltered(); });\r\n    };\r\n    CompositeColumn.prototype.filter = function (row) {\r\n        return this._children.every(function (d) { return d.filter(row); });\r\n    };\r\n    return CompositeColumn;\r\n}(Column));\r\nexports.CompositeColumn = CompositeColumn;\r\n/**\r\n * implementation of the stacked column\r\n */\r\nvar StackColumn = (function (_super) {\r\n    __extends(StackColumn, _super);\r\n    function StackColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        /**\r\n         * whether this stack column is collapsed i.e. just looks like an ordinary number column\r\n         * @type {boolean}\r\n         * @private\r\n         */\r\n        this.collapsed = false;\r\n        var that = this;\r\n        this.adaptChange = function (old, new_) {\r\n            that.adaptWidthChange(this.source, old, new_);\r\n        };\r\n    }\r\n    /**\r\n     * factory for creating a description creating a stacked column\r\n     * @param label\r\n     * @returns {{type: string, label: string}}\r\n     */\r\n    StackColumn.desc = function (label) {\r\n        if (label === void 0) { label = 'Combined'; }\r\n        return { type: 'stack', label: label };\r\n    };\r\n    StackColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['collapseChanged', 'weightsChanged']);\r\n    };\r\n    StackColumn.prototype.setCollapsed = function (value) {\r\n        if (this.collapsed === value) {\r\n            return;\r\n        }\r\n        this.fire(['collapseChanged', 'dirtyHeader', 'dirtyValues', 'dirty'], this.collapsed, this.collapsed = value);\r\n    };\r\n    StackColumn.prototype.getCollapsed = function () {\r\n        return this.collapsed;\r\n    };\r\n    StackColumn.prototype.flatten = function (r, offset, levelsToGo, padding) {\r\n        if (levelsToGo === void 0) { levelsToGo = 0; }\r\n        if (padding === void 0) { padding = 0; }\r\n        var self = null;\r\n        var children = levelsToGo <= Column.FLAT_ALL_COLUMNS ? this._children : this._children.filter(function (c) { return !c.isHidden(); });\r\n        //no more levels or just this one\r\n        if (levelsToGo === 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\r\n            var w = this.getCompressed() ? Column.COMPRESSED_WIDTH : this.getWidth();\r\n            if (!this.collapsed && !this.getCompressed()) {\r\n                w += (children.length - 1) * padding;\r\n            }\r\n            r.push(self = { col: this, offset: offset, width: w });\r\n            if (levelsToGo === 0) {\r\n                return w;\r\n            }\r\n        }\r\n        //push children\r\n        var acc = offset;\r\n        children.forEach(function (c) {\r\n            acc += c.flatten(r, acc, levelsToGo - 1, padding) + padding;\r\n        });\r\n        if (self) {\r\n            self.width = acc - offset - padding;\r\n        }\r\n        return acc - offset - padding;\r\n    };\r\n    StackColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.collapsed = this.collapsed;\r\n        return r;\r\n    };\r\n    StackColumn.prototype.restore = function (dump, factory) {\r\n        this.collapsed = dump.collapsed === true;\r\n        _super.prototype.restore.call(this, dump, factory);\r\n    };\r\n    /**\r\n     * inserts a column at a the given position\r\n     * @param col\r\n     * @param index\r\n     * @param weight\r\n     * @returns {any}\r\n     */\r\n    StackColumn.prototype.insert = function (col, index, weight) {\r\n        if (weight === void 0) { weight = NaN; }\r\n        if (!isNaN(weight)) {\r\n            col.setWidth((weight / (1 - weight) * this.getWidth()));\r\n        }\r\n        col.on('widthChanged.stack', this.adaptChange);\r\n        //increase my width\r\n        _super.prototype.setWidth.call(this, this.length === 0 ? col.getWidth() : (this.getWidth() + col.getWidth()));\r\n        return _super.prototype.insert.call(this, col, index);\r\n    };\r\n    StackColumn.prototype.push = function (col, weight) {\r\n        if (weight === void 0) { weight = NaN; }\r\n        return this.insert(col, this.length, weight);\r\n    };\r\n    StackColumn.prototype.insertAfter = function (col, ref, weight) {\r\n        if (weight === void 0) { weight = NaN; }\r\n        var i = this.indexOf(ref);\r\n        if (i < 0) {\r\n            return null;\r\n        }\r\n        return this.insert(col, i + 1, weight);\r\n    };\r\n    /**\r\n     * adapts weights according to an own width change\r\n     * @param col\r\n     * @param old\r\n     * @param new_\r\n     */\r\n    StackColumn.prototype.adaptWidthChange = function (col, old, new_) {\r\n        if (old === new_) {\r\n            return;\r\n        }\r\n        var bak = this.getWeights();\r\n        var full = this.getWidth(), change = (new_ - old) / full;\r\n        var oldWeight = old / full;\r\n        var factor = (1 - oldWeight - change) / (1 - oldWeight);\r\n        this._children.forEach(function (c) {\r\n            if (c === col) {\r\n            }\r\n            else {\r\n                c.setWidthImpl(c.getWidth() * factor);\r\n            }\r\n        });\r\n        this.fire(['weightsChanged', 'dirtyHeader', 'dirtyValues', 'dirty'], bak, this.getWeights());\r\n    };\r\n    StackColumn.prototype.getWeights = function () {\r\n        var w = this.getWidth();\r\n        return this._children.map(function (d) { return d.getWidth() / w; });\r\n    };\r\n    StackColumn.prototype.setWeights = function (weights) {\r\n        var bak = this.getWeights();\r\n        var s, delta = weights.length - this.length;\r\n        if (delta < 0) {\r\n            s = d3.sum(weights);\r\n            if (s <= 1) {\r\n                for (var i = 0; i < -delta; ++i) {\r\n                    weights.push((1 - s) * (1 / -delta));\r\n                }\r\n            }\r\n            else if (s <= 100) {\r\n                for (var i = 0; i < -delta; ++i) {\r\n                    weights.push((100 - s) * (1 / -delta));\r\n                }\r\n            }\r\n        }\r\n        weights = weights.slice(0, this.length);\r\n        s = d3.sum(weights) / this.getWidth();\r\n        weights = weights.map(function (d) { return d / s; });\r\n        this._children.forEach(function (c, i) {\r\n            c.setWidthImpl(weights[i]);\r\n        });\r\n        this.fire(['weightsChanged', 'dirtyHeader', 'dirtyValues', 'dirty'], bak, weights);\r\n    };\r\n    StackColumn.prototype.removeImpl = function (child) {\r\n        child.on('widthChanged.stack', null);\r\n        _super.prototype.setWidth.call(this, this.length === 1 ? 100 : this.getWidth() - child.getWidth());\r\n        return _super.prototype.removeImpl.call(this, child);\r\n    };\r\n    StackColumn.prototype.setWidth = function (value) {\r\n        var factor = value / this.getWidth();\r\n        this._children.forEach(function (child) {\r\n            //disable since we change it\r\n            child.setWidthImpl(child.getWidth() * factor);\r\n        });\r\n        _super.prototype.setWidth.call(this, value);\r\n    };\r\n    StackColumn.prototype.compute = function (row) {\r\n        var w = this.getWidth();\r\n        return this._children.reduce(function (acc, d) { return acc + d.getValue(row) * (d.getWidth() / w); }, 0);\r\n    };\r\n    return StackColumn;\r\n}(CompositeColumn));\r\nexports.StackColumn = StackColumn;\r\n/**\r\n * combines multiple columns by using the maximal value\r\n */\r\nvar MaxColumn = (function (_super) {\r\n    __extends(MaxColumn, _super);\r\n    function MaxColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n    }\r\n    /**\r\n     * factory for creating a description creating a max column\r\n     * @param label\r\n     * @returns {{type: string, label: string}}\r\n     */\r\n    MaxColumn.desc = function (label) {\r\n        if (label === void 0) { label = 'Max'; }\r\n        return { type: 'max', label: label };\r\n    };\r\n    MaxColumn.prototype.getColor = function (row) {\r\n        //compute the index of the maximal one\r\n        var c = this._children;\r\n        if (c.length === 0) {\r\n            return this.color;\r\n        }\r\n        var max_i = 0, max_v = c[0].getValue(row);\r\n        for (var i = 1; i < c.length; ++i) {\r\n            var v = c[i].getValue(row);\r\n            if (v > max_v) {\r\n                max_i = i;\r\n                max_v = v;\r\n            }\r\n        }\r\n        return c[max_i].color;\r\n    };\r\n    MaxColumn.prototype.compute = function (row) {\r\n        return d3.max(this._children, function (d) { return d.getValue(row); });\r\n    };\r\n    return MaxColumn;\r\n}(CompositeColumn));\r\nexports.MaxColumn = MaxColumn;\r\nvar MinColumn = (function (_super) {\r\n    __extends(MinColumn, _super);\r\n    function MinColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n    }\r\n    /**\r\n     * factory for creating a description creating a min column\r\n     * @param label\r\n     * @returns {{type: string, label: string}}\r\n     */\r\n    MinColumn.desc = function (label) {\r\n        if (label === void 0) { label = 'Min'; }\r\n        return { type: 'min', label: label };\r\n    };\r\n    MinColumn.prototype.getColor = function (row) {\r\n        //compute the index of the maximal one\r\n        var c = this._children;\r\n        if (c.length === 0) {\r\n            return this.color;\r\n        }\r\n        var min_i = 0, min_v = c[0].getValue(row);\r\n        for (var i = 1; i < c.length; ++i) {\r\n            var v = c[i].getValue(row);\r\n            if (v < min_v) {\r\n                min_i = i;\r\n                min_v = v;\r\n            }\r\n        }\r\n        return c[min_i].color;\r\n    };\r\n    MinColumn.prototype.compute = function (row) {\r\n        return d3.min(this._children, function (d) { return d.getValue(row); });\r\n    };\r\n    return MinColumn;\r\n}(CompositeColumn));\r\nexports.MinColumn = MinColumn;\r\nvar MeanColumn = (function (_super) {\r\n    __extends(MeanColumn, _super);\r\n    function MeanColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n    }\r\n    /**\r\n     * factory for creating a description creating a mean column\r\n     * @param label\r\n     * @returns {{type: string, label: string}}\r\n     */\r\n    MeanColumn.desc = function (label) {\r\n        if (label === void 0) { label = 'Mean'; }\r\n        return { type: 'mean', label: label };\r\n    };\r\n    MeanColumn.prototype.compute = function (row) {\r\n        return d3.mean(this._children, function (d) { return d.getValue(row); });\r\n    };\r\n    return MeanColumn;\r\n}(CompositeColumn));\r\nexports.MeanColumn = MeanColumn;\r\nvar ScriptColumn = (function (_super) {\r\n    __extends(ScriptColumn, _super);\r\n    function ScriptColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        this.script = ScriptColumn.DEFAULT_SCRIPT;\r\n        this.f = null;\r\n        this.script = desc.script || this.script;\r\n    }\r\n    /**\r\n     * factory for creating a description creating a mean column\r\n     * @param label\r\n     * @returns {{type: string, label: string}}\r\n     */\r\n    ScriptColumn.desc = function (label) {\r\n        if (label === void 0) { label = 'script'; }\r\n        return { type: 'script', label: label, script: ScriptColumn.DEFAULT_SCRIPT };\r\n    };\r\n    ScriptColumn.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['scriptChanged']);\r\n    };\r\n    ScriptColumn.prototype.setScript = function (script) {\r\n        if (this.script === script) {\r\n            return;\r\n        }\r\n        this.f = null;\r\n        this.fire(['scriptChanged', 'dirtyValues', 'dirty'], this.script, this.script = script);\r\n    };\r\n    ScriptColumn.prototype.getScript = function () {\r\n        return this.script;\r\n    };\r\n    ScriptColumn.prototype.dump = function (toDescRef) {\r\n        var r = _super.prototype.dump.call(this, toDescRef);\r\n        r.script = this.script;\r\n        return r;\r\n    };\r\n    ScriptColumn.prototype.restore = function (dump, factory) {\r\n        this.script = dump.script || this.script;\r\n        _super.prototype.restore.call(this, dump, factory);\r\n    };\r\n    ScriptColumn.prototype.compute = function (row) {\r\n        if (this.f == null) {\r\n            this.f = new Function('children', 'values', this.script);\r\n        }\r\n        return this.f.call(this, this._children, this._children.map(function (d) { return d.getValue(row); }));\r\n    };\r\n    ScriptColumn.DEFAULT_SCRIPT = 'return d3.max(values)';\r\n    return ScriptColumn;\r\n}(CompositeColumn));\r\nexports.ScriptColumn = ScriptColumn;\r\n/**\r\n * a rank column\r\n */\r\nvar RankColumn = (function (_super) {\r\n    __extends(RankColumn, _super);\r\n    function RankColumn(id, desc) {\r\n        _super.call(this, id, desc);\r\n        this.setWidthImpl(50);\r\n    }\r\n    /**\r\n     * factory for creating a description creating a rank column\r\n     * @param label\r\n     * @returns {{type: string, label: string}}\r\n     */\r\n    RankColumn.desc = function (label) {\r\n        if (label === void 0) { label = 'Rank'; }\r\n        return { type: 'rank', label: label };\r\n    };\r\n    return RankColumn;\r\n}(ValueColumn));\r\nexports.RankColumn = RankColumn;\r\n/**\r\n * a ranking\r\n */\r\nvar Ranking = (function (_super) {\r\n    __extends(Ranking, _super);\r\n    function Ranking(id) {\r\n        var _this = this;\r\n        _super.call(this);\r\n        this.id = id;\r\n        /**\r\n         * the current sort criteria\r\n         * @type {null}\r\n         * @private\r\n         */\r\n        this.sortColumn = null;\r\n        /**\r\n         * ascending or descending order\r\n         * @type {boolean}\r\n         */\r\n        this.ascending = false;\r\n        /**\r\n         * columns of this ranking\r\n         * @type {Array}\r\n         * @private\r\n         */\r\n        this.columns = [];\r\n        this.comparator = function (a, b) {\r\n            if (_this.sortColumn === null) {\r\n                return 0;\r\n            }\r\n            var r = _this.sortColumn.compare(a, b);\r\n            return _this.ascending ? r : -r;\r\n        };\r\n        this.dirtyOrder = function () {\r\n            _this.fire(['dirtyOrder', 'dirtyValues', 'dirty'], _this.getSortCriteria());\r\n        };\r\n        /**\r\n         * the current ordering as an sorted array of indices\r\n         * @type {Array}\r\n         */\r\n        this.order = [];\r\n        this.id = fixCSS(id);\r\n    }\r\n    Ranking.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['widthChanged', 'filterChanged', 'labelChanged', 'compressChanged', 'addColumn', 'removeColumn', 'dirty', 'dirtyHeader', 'dirtyValues', 'sortCriteriaChanged', 'dirtyOrder', 'orderChanged']);\r\n    };\r\n    Ranking.prototype.assignNewId = function (idGenerator) {\r\n        this.id = fixCSS(idGenerator());\r\n        this.columns.forEach(function (c) { return c.assignNewId(idGenerator); });\r\n    };\r\n    Ranking.prototype.setOrder = function (order) {\r\n        this.fire(['orderChanged', 'dirtyValues', 'dirty'], this.order, this.order = order);\r\n    };\r\n    Ranking.prototype.getOrder = function () {\r\n        return this.order;\r\n    };\r\n    Ranking.prototype.dump = function (toDescRef) {\r\n        var r = {};\r\n        r.columns = this.columns.map(function (d) { return d.dump(toDescRef); });\r\n        r.sortColumn = {\r\n            asc: this.ascending\r\n        };\r\n        if (this.sortColumn) {\r\n            r.sortColumn.sortBy = this.sortColumn.id; //store the index not the object\r\n        }\r\n        return r;\r\n    };\r\n    Ranking.prototype.restore = function (dump, factory) {\r\n        var _this = this;\r\n        this.clear();\r\n        dump.columns.map(function (child) {\r\n            var c = factory(child);\r\n            if (c) {\r\n                _this.push(c);\r\n            }\r\n        });\r\n        if (dump.sortColumn) {\r\n            this.ascending = dump.sortColumn.asc;\r\n            if (dump.sortColumn.sortBy) {\r\n                var help = this.columns.filter(function (d) { return d.id === dump.sortColumn.sortBy; });\r\n                this.sortBy(help.length === 0 ? null : help[0], dump.sortColumn.asc);\r\n            }\r\n        }\r\n    };\r\n    Ranking.prototype.flatten = function (r, offset, levelsToGo, padding) {\r\n        if (levelsToGo === void 0) { levelsToGo = 0; }\r\n        if (padding === void 0) { padding = 0; }\r\n        var acc = offset; // + this.getWidth() + padding;\r\n        if (levelsToGo > 0 || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\r\n            this.columns.forEach(function (c) {\r\n                if (!c.isHidden() || levelsToGo <= Column.FLAT_ALL_COLUMNS) {\r\n                    acc += c.flatten(r, acc, levelsToGo - 1, padding) + padding;\r\n                }\r\n            });\r\n        }\r\n        return acc - offset;\r\n    };\r\n    Ranking.prototype.getSortCriteria = function () {\r\n        return {\r\n            col: this.sortColumn,\r\n            asc: this.ascending\r\n        };\r\n    };\r\n    Ranking.prototype.toggleSorting = function (col) {\r\n        if (this.sortColumn === col) {\r\n            return this.sortBy(col, !this.ascending);\r\n        }\r\n        return this.sortBy(col);\r\n    };\r\n    Ranking.prototype.setSortCriteria = function (value) {\r\n        return this.sortBy(value.col, value.asc);\r\n    };\r\n    Ranking.prototype.sortBy = function (col, ascending) {\r\n        if (ascending === void 0) { ascending = false; }\r\n        if (col !== null && col.findMyRanker() !== this) {\r\n            return false; //not one of mine\r\n        }\r\n        if (this.sortColumn === col && this.ascending === ascending) {\r\n            return true; //already in this order\r\n        }\r\n        if (this.sortColumn) {\r\n            this.sortColumn.on('dirtyValues.order', null);\r\n        }\r\n        var bak = this.getSortCriteria();\r\n        this.sortColumn = col;\r\n        if (this.sortColumn) {\r\n            this.sortColumn.on('dirtyValues.order', this.dirtyOrder);\r\n        }\r\n        this.ascending = ascending;\r\n        this.fire(['sortCriteriaChanged', 'dirtyOrder', 'dirtyHeader', 'dirtyValues', 'dirty'], bak, this.getSortCriteria());\r\n        return true;\r\n    };\r\n    Object.defineProperty(Ranking.prototype, \"children\", {\r\n        get: function () {\r\n            return this.columns.slice();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Ranking.prototype, \"length\", {\r\n        get: function () {\r\n            return this.columns.length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Ranking.prototype.insert = function (col, index) {\r\n        if (index === void 0) { index = this.columns.length; }\r\n        this.columns.splice(index, 0, col);\r\n        col.parent = this;\r\n        this.forward(col, 'dirtyValues.ranking', 'dirtyHeader.ranking', 'dirty.ranking', 'filterChanged.ranking');\r\n        col.on('filterChanged.order', this.dirtyOrder);\r\n        this.fire(['addColumn', 'dirtyHeader', 'dirtyValues', 'dirty'], col, index);\r\n        if (this.sortColumn === null && !(col instanceof RankColumn || col instanceof SelectionColumn || col instanceof DummyColumn)) {\r\n            this.sortBy(col, col instanceof StringColumn);\r\n        }\r\n        return col;\r\n    };\r\n    Object.defineProperty(Ranking.prototype, \"fqpath\", {\r\n        get: function () {\r\n            return '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Ranking.prototype.findByPath = function (fqpath) {\r\n        var p = this;\r\n        var indices = fqpath.split('@').map(Number).slice(1); //ignore the first entry = ranking\r\n        while (indices.length > 0) {\r\n            var i = indices.shift();\r\n            p = p.at(i);\r\n        }\r\n        return p;\r\n    };\r\n    Ranking.prototype.indexOf = function (col) {\r\n        return this.columns.indexOf(col);\r\n    };\r\n    Ranking.prototype.at = function (index) {\r\n        return this.columns[index];\r\n    };\r\n    Ranking.prototype.insertAfter = function (col, ref) {\r\n        var i = this.columns.indexOf(ref);\r\n        if (i < 0) {\r\n            return null;\r\n        }\r\n        return this.insert(col, i + 1);\r\n    };\r\n    Ranking.prototype.push = function (col) {\r\n        return this.insert(col);\r\n    };\r\n    Ranking.prototype.remove = function (col) {\r\n        var i = this.columns.indexOf(col);\r\n        if (i < 0) {\r\n            return false;\r\n        }\r\n        this.unforward(col, 'dirtyValues.ranking', 'dirtyHeader.ranking', 'dirty.ranking', 'filterChanged.ranking');\r\n        if (this.sortColumn === col) {\r\n            var next = this.columns.filter(function (d) { return d !== col && !(d instanceof SelectionColumn) && !(d instanceof RankColumn); })[0];\r\n            this.sortBy(next ? next : null);\r\n        }\r\n        col.parent = null;\r\n        this.columns.splice(i, 1);\r\n        this.fire(['removeColumn', 'dirtyHeader', 'dirtyValues', 'dirty'], col, i);\r\n        return true;\r\n    };\r\n    Ranking.prototype.clear = function () {\r\n        var _this = this;\r\n        if (this.columns.length === 0) {\r\n            return;\r\n        }\r\n        this.sortColumn = null;\r\n        this.columns.forEach(function (col) {\r\n            _this.unforward(col, 'dirtyValues.ranking', 'dirtyHeader.ranking', 'dirty.ranking', 'filterChanged.ranking');\r\n            col.parent = null;\r\n        });\r\n        this.columns.length = 0;\r\n        this.fire(['removeColumn', 'dirtyHeader', 'dirtyValues', 'dirty'], null);\r\n    };\r\n    Object.defineProperty(Ranking.prototype, \"flatColumns\", {\r\n        get: function () {\r\n            var r = [];\r\n            this.flatten(r, 0, Column.FLAT_ALL_COLUMNS);\r\n            return r.map(function (d) { return d.col; });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Ranking.prototype.find = function (id_or_filter) {\r\n        var filter = typeof (id_or_filter) === 'string' ? function (col) { return col.id === id_or_filter; } : id_or_filter;\r\n        var r = this.flatColumns;\r\n        for (var i = 0; i < r.length; ++i) {\r\n            if (filter(r[i])) {\r\n                return r[i];\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * converts the sorting criteria to a json compatible notation for transfering it to the server\r\n     * @param toId\r\n     * @return {any}\r\n     */\r\n    Ranking.prototype.toSortingDesc = function (toId) {\r\n        //TODO describe also all the filter settings\r\n        var resolve = function (s) {\r\n            if (s === null) {\r\n                return null;\r\n            }\r\n            if (s instanceof StackColumn) {\r\n                var w = s.getWeights();\r\n                return s.children.map(function (child, i) {\r\n                    return {\r\n                        weight: w[i],\r\n                        id: resolve(child)\r\n                    };\r\n                });\r\n            }\r\n            return toId(s.desc);\r\n        };\r\n        var id = resolve(this.sortColumn);\r\n        if (id === null) {\r\n            return null;\r\n        }\r\n        return {\r\n            id: id,\r\n            asc: this.ascending\r\n        };\r\n    };\r\n    Ranking.prototype.isFiltered = function () {\r\n        return this.columns.some(function (d) { return d.isFiltered(); });\r\n    };\r\n    Ranking.prototype.filter = function (row) {\r\n        return this.columns.every(function (d) { return d.filter(row); });\r\n    };\r\n    Ranking.prototype.findMyRanker = function () {\r\n        return this;\r\n    };\r\n    Object.defineProperty(Ranking.prototype, \"fqid\", {\r\n        get: function () {\r\n            return this.id;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Ranking;\r\n}(utils.AEventDispatcher));\r\nexports.Ranking = Ranking;\r\n/**\r\n * defines a new column type\r\n * @param name\r\n * @param functions\r\n * @returns {CustomColumn}\r\n */\r\nfunction defineColumn(name, functions) {\r\n    if (functions === void 0) { functions = {}; }\r\n    var CustomColumn = (function (_super) {\r\n        __extends(CustomColumn, _super);\r\n        function CustomColumn(id, desc) {\r\n            _super.call(this, id, desc);\r\n            if (typeof (this.init) === 'function') {\r\n                this.init.apply(this, [].slice.apply(arguments));\r\n            }\r\n        }\r\n        return CustomColumn;\r\n    }(ValueColumn));\r\n    CustomColumn.prototype.toString = function () { return name; };\r\n    CustomColumn.prototype = utils.merge(CustomColumn.prototype, functions);\r\n    return CustomColumn;\r\n}\r\nexports.defineColumn = defineColumn;\r\n/**\r\n * utility for creating a stacked column description\r\n * @type {function(string=): {type: string, label: string}}\r\n */\r\nexports.createStackDesc = StackColumn.desc;\r\nexports.createRankDesc = RankColumn.desc;\r\nexports.createSelectionDesc = SelectionColumn.desc;\r\nexports.createMinDesc = MinColumn.desc;\r\nexports.createMaxDesc = MaxColumn.desc;\r\nexports.createMeanDesc = MeanColumn.desc;\r\nexports.createScriptDesc = ScriptColumn.desc;\r\n/**\r\n * utility for creating an action description with optional label\r\n * @param label\r\n * @returns {{type: string, label: string}}\r\n */\r\nfunction createActionDesc(label) {\r\n    if (label === void 0) { label = 'actions'; }\r\n    return { type: 'actions', label: label };\r\n}\r\nexports.createActionDesc = createActionDesc;\r\n/**\r\n * a map of all known column types\r\n */\r\nfunction models() {\r\n    return {\r\n        number: NumberColumn,\r\n        string: StringColumn,\r\n        link: LinkColumn,\r\n        stack: StackColumn,\r\n        rank: RankColumn,\r\n        boolean: BooleanColumn,\r\n        categorical: CategoricalColumn,\r\n        ordinal: CategoricalNumberColumn,\r\n        actions: DummyColumn,\r\n        annotate: AnnotateColumn,\r\n        selection: SelectionColumn,\r\n        max: MaxColumn,\r\n        min: MinColumn,\r\n        mean: MinColumn,\r\n        script: ScriptColumn\r\n    };\r\n}\r\nexports.models = models;\r\n//# sourceMappingURL=model.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/model.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 5\n ** module chunks = 0\n **/","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n///<reference path='../typings/tsd.d.ts' />\r\nvar d3 = require('d3');\r\n/**\r\n * create a delayed call, can be called multiple times but only the last one at most delayed by timeToDelay will be executed\r\n * @param callback the callback to call\r\n * @param timeToDelay delay the call in milliseconds\r\n * @param thisCallback this argument of the callback\r\n * @return {function(...[any]): undefined} a function that can be called with the same interface as the callback but delayed\r\n */\r\nfunction delayedCall(callback, timeToDelay, thisCallback) {\r\n    if (timeToDelay === void 0) { timeToDelay = 100; }\r\n    if (thisCallback === void 0) { thisCallback = this; }\r\n    var tm = -1;\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i - 0] = arguments[_i];\r\n        }\r\n        if (tm >= 0) {\r\n            clearTimeout(tm);\r\n            tm = -1;\r\n        }\r\n        args.unshift(thisCallback === null ? this : thisCallback);\r\n        tm = setTimeout(callback.bind.apply(callback, args), timeToDelay);\r\n    };\r\n}\r\nexports.delayedCall = delayedCall;\r\n/**\r\n * utility for AEventDispatcher to forward an event\r\n * @param to\r\n * @param event\r\n * @return {function(...[any]): undefined}\r\n */\r\nfunction forwardEvent(to, event) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i - 0] = arguments[_i];\r\n        }\r\n        args.unshift(event || this.type);\r\n        to.fire.apply(to, args);\r\n    };\r\n}\r\nexports.forwardEvent = forwardEvent;\r\n/**\r\n * base class for event dispatching using d3 event mechanism\r\n */\r\nvar AEventDispatcher = (function () {\r\n    function AEventDispatcher() {\r\n        this.forwarder = forwardEvent(this);\r\n        this.listeners = d3.dispatch.apply(d3, this.createEventList());\r\n    }\r\n    AEventDispatcher.prototype.on = function (type, listener) {\r\n        var _this = this;\r\n        if (arguments.length > 1) {\r\n            if (Array.isArray(type)) {\r\n                type.forEach(function (d) { return _this.listeners.on(d, listener); });\r\n            }\r\n            else {\r\n                this.listeners.on(type, listener);\r\n            }\r\n            return this;\r\n        }\r\n        return this.listeners.on(type);\r\n    };\r\n    /**\r\n     * return the list of events to be able to dispatch\r\n     * @return {Array}\r\n     */\r\n    AEventDispatcher.prototype.createEventList = function () {\r\n        return [];\r\n    };\r\n    AEventDispatcher.prototype.fire = function (type) {\r\n        var _this = this;\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        var fireImpl = function (t) {\r\n            //local context per event, set a this argument\r\n            var context = {\r\n                source: _this,\r\n                type: t,\r\n                args: args //the arguments to the listener\r\n            };\r\n            _this.listeners[t].apply(context, args);\r\n        };\r\n        if (Array.isArray(type)) {\r\n            type.forEach(fireImpl.bind(this));\r\n        }\r\n        else {\r\n            fireImpl(type);\r\n        }\r\n    };\r\n    /**\r\n     * forwards one or more events from a given dispatcher to the current one\r\n     * i.e. when one of the given events is fired in 'from' it will be forwared to all my listeners\r\n     * @param from the event dispatcher to forward from\r\n     * @param types the event types to forward\r\n     */\r\n    AEventDispatcher.prototype.forward = function (from) {\r\n        var types = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            types[_i - 1] = arguments[_i];\r\n        }\r\n        from.on(types, this.forwarder);\r\n    };\r\n    /**\r\n     * removes the forwarding declarations\r\n     * @param from\r\n     * @param types\r\n     */\r\n    AEventDispatcher.prototype.unforward = function (from) {\r\n        var types = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            types[_i - 1] = arguments[_i];\r\n        }\r\n        from.on(types, null);\r\n    };\r\n    return AEventDispatcher;\r\n}());\r\nexports.AEventDispatcher = AEventDispatcher;\r\nvar TYPE_OBJECT = '[object Object]';\r\nvar TYPE_ARRAY = '[object Array]';\r\n//credits to https://github.com/vladmiller/dextend/blob/master/lib/dextend.js\r\nfunction merge() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i - 0] = arguments[_i];\r\n    }\r\n    var result = null;\r\n    for (var i = 0; i < args.length; i++) {\r\n        var toMerge = args[i], keys = Object.keys(toMerge);\r\n        if (result === null) {\r\n            result = toMerge;\r\n            continue;\r\n        }\r\n        for (var j = 0; j < keys.length; j++) {\r\n            var keyName = keys[j];\r\n            var value = toMerge[keyName];\r\n            //merge just POJOs\r\n            if (Object.prototype.toString.call(value) === TYPE_OBJECT && (Object.getPrototypeOf(value) === Object.prototype)) {\r\n                if (result[keyName] === undefined) {\r\n                    result[keyName] = {};\r\n                }\r\n                result[keyName] = merge(result[keyName], value);\r\n            }\r\n            else if (Object.prototype.toString.call(value) === TYPE_ARRAY) {\r\n                if (result[keyName] === undefined) {\r\n                    result[keyName] = [];\r\n                }\r\n                result[keyName] = value.concat(result[keyName]);\r\n            }\r\n            else {\r\n                result[keyName] = value;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexports.merge = merge;\r\n/**\r\n * computes the absolute offset of the given element\r\n * @param element\r\n * @return {{left: number, top: number, width: number, height: number}}\r\n */\r\nfunction offset(element) {\r\n    var obj = element.getBoundingClientRect();\r\n    return {\r\n        left: obj.left + window.pageXOffset,\r\n        top: obj.top + window.pageYOffset,\r\n        width: obj.width,\r\n        height: obj.height\r\n    };\r\n}\r\nexports.offset = offset;\r\n/**\r\n * content scroller utility\r\n *\r\n * a class for efficiently selecting a range of data items that are currently visible according to the scrolled position\r\n */\r\nvar ContentScroller = (function (_super) {\r\n    __extends(ContentScroller, _super);\r\n    /**\r\n     *\r\n     * @param container the container element wrapping the content with a fixed height for enforcing scrolling\r\n     * @param content the content element to scroll\r\n     * @param options options see attribute\r\n     */\r\n    function ContentScroller(container, content, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        _super.call(this);\r\n        this.container = container;\r\n        this.content = content;\r\n        this.options = {\r\n            /**\r\n             * shift that should be used for calculating the top position\r\n             */\r\n            topShift: function () { return 0; },\r\n            /**\r\n             * backup rows, i.e .the number of rows that should also be shown for avoiding to frequent updates\r\n             */\r\n            backupRows: 5,\r\n            /**\r\n             * the height of one row in pixel\r\n             */\r\n            rowHeight: 10\r\n        };\r\n        this.prevScrollTop = 0;\r\n        this.shift = 0;\r\n        merge(this.options, options);\r\n        d3.select(container).on('scroll.scroller', function () { return _this.onScroll(); });\r\n        //keep the previous state computing whether a redraw is needed\r\n        this.prevScrollTop = container.scrollTop;\r\n        //total shift to the top\r\n        this.shift = offset(content).top - offset(container).top;\r\n    }\r\n    /**\r\n     * two events are fired:\r\n     *  * scroll when the user scrolls the container\r\n     *  * redraw when a redraw of the content must be performed due to scrolling changes. Note due to backup rows\r\n     *     a scrolling operation might not include a redraw\r\n     *\r\n     * @returns {string[]}\r\n     */\r\n    ContentScroller.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['scroll', 'redraw']);\r\n    };\r\n    /**\r\n     * selects a range identified by start and length and the row2y position callback returning the slice to show according to the current user scrolling position\r\n     * @param start start of the range\r\n     * @param length length of the range\r\n     * @param row2y lookup for computing the y position of a given row\r\n     * @returns {{from: number, to: number}} the slide to show\r\n     */\r\n    ContentScroller.prototype.select = function (start, length, row2y) {\r\n        var top = this.container.scrollTop - this.shift - this.options.topShift(), bottom = top + this.container.clientHeight, i = 0, j;\r\n        /*console.log(window.matchMedia('print').matches, window.matchMedia('screen').matches, top, bottom);\r\n         if (typeof window.matchMedia === 'function' && window.matchMedia('print').matches) {\r\n         console.log('show all');\r\n         return [0, data.length];\r\n         }*/\r\n        if (top > 0) {\r\n            i = Math.round(top / this.options.rowHeight);\r\n            //count up till really even partial rows are visible\r\n            while (i >= start && row2y(i + 1) > top) {\r\n                i--;\r\n            }\r\n            i -= this.options.backupRows; //one more row as backup for scrolling\r\n        }\r\n        {\r\n            j = Math.round(bottom / this.options.rowHeight);\r\n            //count down till really even partial rows are visible\r\n            while (j <= length && row2y(j - 1) < bottom) {\r\n                j++;\r\n            }\r\n            j += this.options.backupRows; //one more row as backup for scrolling\r\n        }\r\n        return {\r\n            from: Math.max(i, start),\r\n            to: Math.min(j, length)\r\n        };\r\n    };\r\n    ContentScroller.prototype.onScroll = function () {\r\n        var top = this.container.scrollTop;\r\n        var left = this.container.scrollLeft;\r\n        //at least one row changed\r\n        //console.log(top, left);\r\n        this.fire('scroll', top, left);\r\n        if (Math.abs(this.prevScrollTop - top) >= this.options.rowHeight * this.options.backupRows) {\r\n            //we scrolled out of our backup rows, so we have to redraw the content\r\n            this.prevScrollTop = top;\r\n            this.fire('redraw');\r\n        }\r\n    };\r\n    /**\r\n     * removes the listeners\r\n     */\r\n    ContentScroller.prototype.destroy = function () {\r\n        d3.select(this.container).on('scroll.scroller', null);\r\n    };\r\n    return ContentScroller;\r\n}(AEventDispatcher));\r\nexports.ContentScroller = ContentScroller;\r\n/**\r\n * checks whether the given DragEvent has one of the given types\r\n */\r\nfunction hasDnDType(e, typesToCheck) {\r\n    var types = e.dataTransfer.types;\r\n    if (typeof types.indexOf === 'function') {\r\n        return typesToCheck.some(function (type) { return types.indexOf(type) >= 0; });\r\n    }\r\n    if (typeof types.includes === 'function') {\r\n        return typesToCheck.some(function (type) { return types.includes(type); });\r\n    }\r\n    if (typeof types.contains === 'function') {\r\n        return typesToCheck.some(function (type) { return types.contains(type); });\r\n    }\r\n    return false;\r\n}\r\nexports.hasDnDType = hasDnDType;\r\n/**\r\n * should it be a copy dnd operation?\r\n */\r\nfunction copyDnD(e) {\r\n    var dT = e.dataTransfer;\r\n    return (e.ctrlKey && dT.effectAllowed.match(/copy/gi) != null) || (dT.effectAllowed.match(/move/gi) == null);\r\n}\r\nexports.copyDnD = copyDnD;\r\n/**\r\n * updates the drop effect according to the currently selected meta keys\r\n * @param e\r\n */\r\nfunction updateDropEffect(e) {\r\n    var dT = e.dataTransfer;\r\n    if (copyDnD(e)) {\r\n        dT.dropEffect = 'copy';\r\n    }\r\n    else {\r\n        dT.dropEffect = 'move';\r\n    }\r\n}\r\nexports.updateDropEffect = updateDropEffect;\r\n/**\r\n * returns a d3 callable function to make an element dropable, managed the class css 'drag_over' for hovering effects\r\n * @param mimeTypes the mime types to be dropable\r\n * @param onDrop: handler when an element is dropped\r\n */\r\nfunction dropAble(mimeTypes, onDrop) {\r\n    return function ($node) {\r\n        $node.on('dragenter', function () {\r\n            var e = d3.event;\r\n            //var xy = d3.mouse($node.node());\r\n            if (hasDnDType(e, mimeTypes)) {\r\n                d3.select(this).classed('drag_over', true);\r\n                //sounds good\r\n                return false;\r\n            }\r\n            //not a valid mime type\r\n            d3.select(this).classed('drag_over', false);\r\n        }).on('dragover', function () {\r\n            var e = d3.event;\r\n            if (hasDnDType(e, mimeTypes)) {\r\n                e.preventDefault();\r\n                updateDropEffect(e);\r\n                d3.select(this).classed('drag_over', true);\r\n                return false;\r\n            }\r\n        }).on('dragleave', function () {\r\n            //\r\n            d3.select(this).classed('drag_over', false);\r\n        }).on('drop', function (d) {\r\n            var e = d3.event;\r\n            e.preventDefault();\r\n            d3.select(this).classed('drag_over', false);\r\n            //var xy = d3.mouse($node.node());\r\n            if (hasDnDType(e, mimeTypes)) {\r\n                var data = {};\r\n                //selects the data contained in the data transfer\r\n                mimeTypes.forEach(function (mime) {\r\n                    var value = e.dataTransfer.getData(mime);\r\n                    if (value !== '') {\r\n                        data[mime] = value;\r\n                    }\r\n                });\r\n                return onDrop(data, d, copyDnD(e));\r\n            }\r\n        });\r\n    };\r\n}\r\nexports.dropAble = dropAble;\r\n//# sourceMappingURL=utils.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils.js\n ** module id = 6\n ** module chunks = 0\n **/","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar model = require('./model');\r\nvar utils = require('./utils');\r\nvar d3 = require('d3');\r\n/**\r\n * computes the simple statistics of an array using d3 histogram\r\n * @param arr the data array\r\n * @param acc accessor function\r\n * @param range the total value range\r\n * @returns {{min: number, max: number, count: number, hist: histogram.Bin<number>[]}}\r\n */\r\nfunction computeStats(arr, acc, range) {\r\n    if (arr.length === 0) {\r\n        return {\r\n            min: NaN,\r\n            max: NaN,\r\n            mean: NaN,\r\n            count: 0,\r\n            maxBin: 0,\r\n            hist: []\r\n        };\r\n    }\r\n    var hist = d3.layout.histogram().value(acc);\r\n    if (range) {\r\n        hist.range(function () { return range; });\r\n    }\r\n    var ex = d3.extent(arr, acc);\r\n    var hist_data = hist(arr);\r\n    return {\r\n        min: ex[0],\r\n        max: ex[1],\r\n        mean: d3.mean(arr, acc),\r\n        count: arr.length,\r\n        maxBin: d3.max(hist_data, function (d) { return d.y; }),\r\n        hist: hist_data\r\n    };\r\n}\r\n/**\r\n * computes a categorical histogram\r\n * @param arr the data array\r\n * @param acc the accessor\r\n * @param categories the list of known categories\r\n * @returns {{hist: {cat: string, y: number}[]}}\r\n */\r\nfunction computeHist(arr, acc, categories) {\r\n    var m = d3.map();\r\n    categories.forEach(function (cat) { return m.set(cat, 0); });\r\n    arr.forEach(function (a) {\r\n        var vs = acc(a);\r\n        if (vs == null) {\r\n            return;\r\n        }\r\n        vs.forEach(function (v) {\r\n            m.set(v, (m.get(v) || 0) + 1);\r\n        });\r\n    });\r\n    return {\r\n        maxBin: d3.max(m.values()),\r\n        hist: m.entries().map(function (entry) { return ({ cat: entry.key, y: entry.value }); })\r\n    };\r\n}\r\nfunction isSupportType(col) {\r\n    return ['rank', 'selection', 'actions'].indexOf(col.type) >= 0;\r\n}\r\n/**\r\n * a basic data provider holding the data and rankings\r\n */\r\nvar DataProvider = (function (_super) {\r\n    __extends(DataProvider, _super);\r\n    function DataProvider(options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        _super.call(this);\r\n        /**\r\n         * all rankings\r\n         * @type {Array}\r\n         * @private\r\n         */\r\n        this.rankings_ = [];\r\n        /**\r\n         * the current selected indices\r\n         * @type {Set}\r\n         */\r\n        this.selection = d3.set();\r\n        this.uid = 0;\r\n        /**\r\n         * lookup map of a column type to its column implementation\r\n         */\r\n        this.columnTypes = utils.merge({}, model.models());\r\n        this.createHelper = function (d) {\r\n            //factory method for restoring a column\r\n            var desc = _this.fromDescRef(d.desc);\r\n            var c = null;\r\n            if (desc && desc.type) {\r\n                _this.fixDesc(d.desc);\r\n                var type = _this.columnTypes[desc.type];\r\n                c = new type(d.id, desc);\r\n                c.restore(d, _this.createHelper);\r\n            }\r\n            return c;\r\n        };\r\n        this.columnTypes = utils.merge(model.models(), options.columnTypes || {});\r\n    }\r\n    /**\r\n     * events:\r\n     *  * column changes: addColumn, removeColumn\r\n     *  * ranking changes: addRanking, removeRanking\r\n     *  * dirty: dirty, dirtyHeder, dirtyValues\r\n     *  * selectionChanged\r\n     * @returns {string[]}\r\n     */\r\n    DataProvider.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['addColumn', 'removeColumn', 'addRanking', 'removeRanking', 'dirty', 'dirtyHeader', 'dirtyValues', 'orderChanged', 'selectionChanged']);\r\n    };\r\n    /**\r\n     * returns a list of all known column descriptions\r\n     * @returns {Array}\r\n     */\r\n    DataProvider.prototype.getColumns = function () {\r\n        return [];\r\n    };\r\n    /**\r\n     * adds a new ranking\r\n     * @param existing an optional existing ranking to clone\r\n     * @return the new ranking\r\n     */\r\n    DataProvider.prototype.pushRanking = function (existing) {\r\n        var r = this.cloneRanking(existing);\r\n        this.insertRanking(r);\r\n        return r;\r\n    };\r\n    DataProvider.prototype.takeSnapshot = function (col) {\r\n        var r = this.cloneRanking();\r\n        r.push(this.clone(col));\r\n        this.insertRanking(r);\r\n        return r;\r\n    };\r\n    DataProvider.prototype.insertRanking = function (r, index) {\r\n        if (index === void 0) { index = this.rankings_.length; }\r\n        this.rankings_.splice(index, 0, r);\r\n        this.forward(r, 'addColumn.provider', 'removeColumn.provider', 'dirty.provider', 'dirtyHeader.provider', 'orderChanged.provider', 'dirtyValues.provider');\r\n        var that = this;\r\n        //delayed reordering per ranking\r\n        r.on('dirtyOrder.provider', utils.delayedCall(function () {\r\n            that.triggerReorder(this.source);\r\n        }, 100, null));\r\n        this.fire(['addRanking', 'dirtyHeader', 'dirtyValues', 'dirty'], r, index);\r\n        this.triggerReorder(r);\r\n    };\r\n    DataProvider.prototype.triggerReorder = function (ranking) {\r\n        this.sort(ranking).then(function (order) { return ranking.setOrder(order); });\r\n    };\r\n    /**\r\n     * removes a ranking from this data provider\r\n     * @param ranking\r\n     * @returns {boolean}\r\n     */\r\n    DataProvider.prototype.removeRanking = function (ranking) {\r\n        var i = this.rankings_.indexOf(ranking);\r\n        if (i < 0) {\r\n            return false;\r\n        }\r\n        this.unforward(ranking, 'addColumn.provider', 'removeColumn.provider', 'dirty.provider', 'dirtyHeader.provider', 'orderChanged.provider', 'dirtyOrder.provider', 'dirtyValues.provider');\r\n        this.rankings_.splice(i, 1);\r\n        ranking.on('dirtyOrder.provider', null);\r\n        this.cleanUpRanking(ranking);\r\n        this.fire(['removeRanking', 'dirtyHeader', 'dirtyValues', 'dirty'], ranking, i);\r\n        return true;\r\n    };\r\n    /**\r\n     * removes all rankings\r\n     */\r\n    DataProvider.prototype.clearRankings = function () {\r\n        var _this = this;\r\n        this.rankings_.forEach(function (ranking) {\r\n            _this.unforward(ranking, 'addColumn.provider', 'removeColumn.provider', 'dirty.provider', 'dirtyHeader.provider', 'dirtyOrder.provider', 'dirtyValues.provider');\r\n            ranking.on('dirtyOrder.provider', null);\r\n            _this.cleanUpRanking(ranking);\r\n        });\r\n        this.rankings_ = [];\r\n        this.fire(['removeRanking', 'dirtyHeader', 'dirtyValues', 'dirty'], null);\r\n    };\r\n    /**\r\n     * returns a list of all current rankings\r\n     * @returns {model.Ranking[]}\r\n     */\r\n    DataProvider.prototype.getRankings = function () {\r\n        return this.rankings_.slice();\r\n    };\r\n    /**\r\n     * returns the last ranking for quicker access\r\n     * @returns {model.Ranking}\r\n     */\r\n    DataProvider.prototype.getLastRanking = function () {\r\n        return this.rankings_[this.rankings_.length - 1];\r\n    };\r\n    /**\r\n     * hook method for cleaning up a ranking\r\n     * @param ranking\r\n     */\r\n    DataProvider.prototype.cleanUpRanking = function (ranking) {\r\n        //nothing to do\r\n    };\r\n    /**\r\n     * abstract method for cloning a ranking\r\n     * @param existing\r\n     * @returns {null}\r\n     */\r\n    DataProvider.prototype.cloneRanking = function (existing) {\r\n        return null; //implement me\r\n    };\r\n    /**\r\n     * adds a column to a ranking described by its column description\r\n     * @param ranking the ranking to add the column to\r\n     * @param desc the description of the column\r\n     * @return {model.Column} the newly created column or null\r\n     */\r\n    DataProvider.prototype.push = function (ranking, desc) {\r\n        var r = this.create(desc);\r\n        if (r) {\r\n            ranking.push(r);\r\n            return r;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * adds a column to a ranking described by its column description\r\n     * @param ranking the ranking to add the column to\r\n     * @param index the position to insert the column\r\n     * @param desc the description of the column\r\n     * @return {model.Column} the newly created column or null\r\n     */\r\n    DataProvider.prototype.insert = function (ranking, index, desc) {\r\n        var r = this.create(desc);\r\n        if (r) {\r\n            ranking.insert(r, index);\r\n            return r;\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * creates a new unique id for a column\r\n     * @returns {string}\r\n     */\r\n    DataProvider.prototype.nextId = function () {\r\n        return 'col' + (this.uid++);\r\n    };\r\n    DataProvider.prototype.rankAccessor = function (row, id, desc, ranking) {\r\n        return 0;\r\n    };\r\n    DataProvider.prototype.fixDesc = function (desc) {\r\n        var _this = this;\r\n        //hacks for provider dependent descriptors\r\n        if (desc.type === 'rank') {\r\n            desc.accessor = this.rankAccessor.bind(this);\r\n        }\r\n        else if (desc.type === 'selection') {\r\n            desc.accessor = function (row) { return _this.isSelected(row._index); };\r\n            desc.setter = function (row, value) { return value ? _this.select(row._index) : _this.deselect(row._index); };\r\n        }\r\n    };\r\n    /**\r\n     * creates an internal column model out of the given column description\r\n     * @param desc\r\n     * @returns {model.Column] the new column or null if it can't be created\r\n     */\r\n    DataProvider.prototype.create = function (desc) {\r\n        this.fixDesc(desc);\r\n        //find by type and instantiate\r\n        var type = this.columnTypes[desc.type];\r\n        if (type) {\r\n            return new type(this.nextId(), desc);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * clones a column by dumping and restoring\r\n     * @param col\r\n     * @returns {model.Column}\r\n     */\r\n    DataProvider.prototype.clone = function (col) {\r\n        var dump = this.dumpColumn(col);\r\n        return this.restoreColumn(dump);\r\n    };\r\n    /**\r\n     * restores a column from a dump\r\n     * @param dump\r\n     * @returns {model.Column}\r\n     */\r\n    DataProvider.prototype.restoreColumn = function (dump) {\r\n        var _this = this;\r\n        var create = function (d) {\r\n            var desc = _this.fromDescRef(d.desc);\r\n            var type = _this.columnTypes[desc.type];\r\n            _this.fixDesc(desc);\r\n            var c = new type('', desc);\r\n            c.restore(d, create);\r\n            c.assignNewId(_this.nextId.bind(_this));\r\n            return c;\r\n        };\r\n        return create(dump);\r\n    };\r\n    /**\r\n     * finds a column in all rankings returning the first match\r\n     * @param id_or_filter by id or by a filter function\r\n     * @returns {model.Column}\r\n     */\r\n    DataProvider.prototype.find = function (id_or_filter) {\r\n        //convert to function\r\n        var filter = typeof (id_or_filter) === 'string' ? function (col) { return col.id === id_or_filter; } : id_or_filter;\r\n        for (var i = 0; i < this.rankings_.length; ++i) {\r\n            var r = this.rankings_[i].find(filter);\r\n            if (r) {\r\n                return r;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * dumps this whole provider including selection and the rankings\r\n     * @returns {{uid: number, selection: number[], rankings: *[]}}\r\n     */\r\n    DataProvider.prototype.dump = function () {\r\n        var _this = this;\r\n        return {\r\n            uid: this.uid,\r\n            selection: this.selection.values().map(Number),\r\n            rankings: this.rankings_.map(function (r) { return r.dump(_this.toDescRef); })\r\n        };\r\n    };\r\n    /**\r\n     * dumps a specific column\r\n     * @param col\r\n     * @returns {any}\r\n     */\r\n    DataProvider.prototype.dumpColumn = function (col) {\r\n        return col.dump(this.toDescRef);\r\n    };\r\n    /**\r\n     * for better dumping describe reference, by default just return the description\r\n     * @param desc\r\n     * @returns {any}\r\n     */\r\n    DataProvider.prototype.toDescRef = function (desc) {\r\n        return desc;\r\n    };\r\n    /**\r\n     * inverse operation of toDescRef\r\n     * @param descRef\r\n     * @returns {any}\r\n     */\r\n    DataProvider.prototype.fromDescRef = function (descRef) {\r\n        return descRef;\r\n    };\r\n    DataProvider.prototype.restoreRanking = function (dump) {\r\n        var ranking = this.cloneRanking();\r\n        ranking.restore(dump, this.createHelper);\r\n        //if no rank column add one\r\n        if (!ranking.children.some(function (d) { return d instanceof model.RankColumn; })) {\r\n            ranking.insert(this.create(model.RankColumn.desc()), 0);\r\n        }\r\n        var idGenerator = this.nextId.bind(this);\r\n        ranking.children.forEach(function (c) { return c.assignNewId(idGenerator); });\r\n        return ranking;\r\n    };\r\n    DataProvider.prototype.restore = function (dump) {\r\n        var _this = this;\r\n        //clean old\r\n        this.clearRankings();\r\n        //restore selection\r\n        this.uid = dump.uid || 0;\r\n        if (dump.selection) {\r\n            dump.selection.forEach(function (s) { return _this.selection.add(String(s)); });\r\n        }\r\n        //restore rankings\r\n        if (dump.rankings) {\r\n            dump.rankings.forEach(function (r) {\r\n                var ranking = _this.cloneRanking();\r\n                ranking.restore(r, _this.createHelper);\r\n                //if no rank column add one\r\n                if (!ranking.children.some(function (d) { return d instanceof model.RankColumn; })) {\r\n                    ranking.insert(_this.create(model.RankColumn.desc()), 0);\r\n                }\r\n                _this.insertRanking(ranking);\r\n            });\r\n        }\r\n        if (dump.layout) {\r\n            Object.keys(dump.layout).forEach(function (key) {\r\n                _this.deriveRanking(dump.layout[key]);\r\n            });\r\n        }\r\n        //assign new ids\r\n        var idGenerator = this.nextId.bind(this);\r\n        this.rankings_.forEach(function (r) {\r\n            r.children.forEach(function (c) { return c.assignNewId(idGenerator); });\r\n        });\r\n    };\r\n    DataProvider.prototype.findDesc = function (ref) {\r\n        return null;\r\n    };\r\n    /**\r\n     * generates a default ranking by using all column descriptions ones\r\n     */\r\n    DataProvider.prototype.deriveDefault = function () {\r\n        var _this = this;\r\n        if (this.rankings_.length > 0) {\r\n            //no default if we have a ranking\r\n            return;\r\n        }\r\n        var r = this.pushRanking();\r\n        this.getColumns().forEach(function (col) {\r\n            if (!isSupportType(col)) {\r\n                _this.push(r, col);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * derives a ranking from an old layout bundle format\r\n     * @param bundle\r\n     */\r\n    DataProvider.prototype.deriveRanking = function (bundle) {\r\n        var _this = this;\r\n        var ranking = this.cloneRanking();\r\n        ranking.clear();\r\n        var toCol = function (column) {\r\n            if (column.type === 'rank') {\r\n                return _this.create(model.createRankDesc());\r\n            }\r\n            if (column.type === 'selection') {\r\n                return _this.create(model.createSelectionDesc());\r\n            }\r\n            if (column.type === 'actions') {\r\n                var r = _this.create(model.createActionDesc(column.label || 'actions'));\r\n                r.restore(column, null);\r\n                return r;\r\n            }\r\n            if (column.type === 'stacked') {\r\n                //create a stacked one\r\n                var r_1 = _this.create(model.createStackDesc(column.label || 'Combined'));\r\n                (column.children || []).forEach(function (col) {\r\n                    var c = toCol(col);\r\n                    if (c) {\r\n                        r_1.push(c);\r\n                    }\r\n                });\r\n                return r_1;\r\n            }\r\n            else {\r\n                var desc = _this.findDesc(column.column);\r\n                if (desc) {\r\n                    var r = _this.create(desc);\r\n                    column.label = column.label || desc.label || desc.column;\r\n                    r.restore(column, null);\r\n                    return r;\r\n                }\r\n            }\r\n            return null;\r\n        };\r\n        bundle.forEach(function (column) {\r\n            var col = toCol(column);\r\n            if (col) {\r\n                ranking.push(col);\r\n            }\r\n        });\r\n        //if no rank column add one\r\n        if (!ranking.children.some(function (d) { return d instanceof model.RankColumn; })) {\r\n            ranking.insert(this.create(model.createRankDesc()), 0);\r\n        }\r\n        this.insertRanking(ranking);\r\n        return ranking;\r\n    };\r\n    /**\r\n     * sorts the given ranking and eventually return a ordering of the data items\r\n     * @param ranking\r\n     * @return {Promise<any>}\r\n     */\r\n    DataProvider.prototype.sort = function (ranking) {\r\n        return Promise.reject('not implemented');\r\n    };\r\n    /**\r\n     * returns a view in the order of the given indices\r\n     * @param indices\r\n     * @return {Promise<any>}\r\n     */\r\n    DataProvider.prototype.view = function (indices) {\r\n        return Promise.reject('not implemented');\r\n    };\r\n    /**\r\n     * returns a data sample used for the mapping editor\r\n     * @param col\r\n     * @return {Promise<any>}\r\n     */\r\n    DataProvider.prototype.mappingSample = function (col) {\r\n        return Promise.reject('not implemented');\r\n    };\r\n    /**\r\n     * helper for computing statistics\r\n     * @param indices\r\n     * @returns {{stats: (function(model.INumberColumn): *), hist: (function(model.ICategoricalColumn): *)}}\r\n     */\r\n    DataProvider.prototype.stats = function (indices) {\r\n        return {\r\n            stats: function (col) { return Promise.reject('not implemented'); },\r\n            hist: function (col) { return Promise.reject('not implemented'); }\r\n        };\r\n    };\r\n    /**\r\n     * method for computing the unique key of a row\r\n     * @param row\r\n     * @param i\r\n     * @return {string}\r\n     */\r\n    DataProvider.prototype.rowKey = function (row, i) {\r\n        return typeof (row) === 'number' ? String(row) : String(row._index);\r\n    };\r\n    /**\r\n     * is the given row selected\r\n     * @param index\r\n     * @return {boolean}\r\n     */\r\n    DataProvider.prototype.isSelected = function (index) {\r\n        return this.selection.has(String(index));\r\n    };\r\n    /**\r\n     * also select the given row\r\n     * @param index\r\n     */\r\n    DataProvider.prototype.select = function (index) {\r\n        this.selection.add(String(index));\r\n        this.fire('selectionChanged', this.selection.values().map(Number));\r\n    };\r\n    /**\r\n     * hook for selecting elements matching the given arguments\r\n     * @param search\r\n     * @param col\r\n     */\r\n    DataProvider.prototype.searchSelect = function (search, col) {\r\n        //implemented by custom provider\r\n    };\r\n    /**\r\n     * also select all the given rows\r\n     * @param indices\r\n     */\r\n    DataProvider.prototype.selectAll = function (indices) {\r\n        var _this = this;\r\n        indices.forEach(function (index) {\r\n            _this.selection.add(String(index));\r\n        });\r\n        this.fire('selectionChanged', this.selection.values().map(Number));\r\n    };\r\n    /**\r\n     * set the selection to the given rows\r\n     * @param indices\r\n     */\r\n    DataProvider.prototype.setSelection = function (indices) {\r\n        var _this = this;\r\n        if (this.selection.size() === indices.length && indices.every(function (i) { return _this.selection.has(String(i)); })) {\r\n            return; //no change\r\n        }\r\n        this.selection = d3.set();\r\n        this.selectAll(indices);\r\n    };\r\n    /**\r\n     * toggles the selection of the given data index\r\n     * @param index\r\n     * @param additional just this element or all\r\n     * @returns {boolean} whether the index is currently selected\r\n     */\r\n    DataProvider.prototype.toggleSelection = function (index, additional) {\r\n        if (additional === void 0) { additional = false; }\r\n        if (this.isSelected(index)) {\r\n            if (additional) {\r\n                this.deselect(index);\r\n            }\r\n            else {\r\n                this.clearSelection();\r\n            }\r\n            return false;\r\n        }\r\n        else {\r\n            if (additional) {\r\n                this.select(index);\r\n            }\r\n            else {\r\n                this.setSelection([index]);\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * deselect the given row\r\n     * @param index\r\n     */\r\n    DataProvider.prototype.deselect = function (index) {\r\n        this.selection.remove(String(index));\r\n        this.fire('selectionChanged', this.selection.values().map(Number));\r\n    };\r\n    /**\r\n     * returns a promise containing the selected rows\r\n     * @return {Promise<any[]>}\r\n     */\r\n    DataProvider.prototype.selectedRows = function () {\r\n        if (this.selection.empty()) {\r\n            return Promise.resolve([]);\r\n        }\r\n        return this.view(this.getSelection());\r\n    };\r\n    /**\r\n     * returns the currently selected indices\r\n     * @returns {Array}\r\n     */\r\n    DataProvider.prototype.getSelection = function () {\r\n        var indices = [];\r\n        this.selection.forEach(function (s) { return indices.push(+s); });\r\n        indices.sort();\r\n        return indices;\r\n    };\r\n    /**\r\n     * clears the selection\r\n     */\r\n    DataProvider.prototype.clearSelection = function () {\r\n        this.selection = d3.set();\r\n        this.fire('selectionChanged', []);\r\n    };\r\n    /**\r\n     * utility to export a ranking to a table with the given separator\r\n     * @param ranking\r\n     * @param options\r\n     * @returns {Promise<string>}\r\n     */\r\n    DataProvider.prototype.exportTable = function (ranking, options) {\r\n        if (options === void 0) { options = {}; }\r\n        var op = {\r\n            separator: '\\t',\r\n            newline: '\\n',\r\n            header: true,\r\n            quote: false,\r\n            quoteChar: '\"'\r\n        };\r\n        //optionally quote not numbers\r\n        function quote(l, c) {\r\n            if (op.quote && (!c || !model.isNumberColumn(c))) {\r\n                return op.quoteChar + l + op.quoteChar;\r\n            }\r\n            return l;\r\n        }\r\n        utils.merge(op, options);\r\n        var columns = ranking.flatColumns;\r\n        return this.view(ranking.getOrder()).then(function (data) {\r\n            var r = [];\r\n            if (op.header) {\r\n                r.push(columns.map(function (d) { return quote(d.label); }).join(op.separator));\r\n            }\r\n            data.forEach(function (row) {\r\n                r.push(columns.map(function (c) { return quote(c.getLabel(row), c); }).join(op.separator));\r\n            });\r\n            return r.join(op.newline);\r\n        });\r\n    };\r\n    return DataProvider;\r\n}(utils.AEventDispatcher));\r\nexports.DataProvider = DataProvider;\r\n/**\r\n * common base implementation of a DataProvider with a fixed list of column descriptions\r\n */\r\nvar CommonDataProvider = (function (_super) {\r\n    __extends(CommonDataProvider, _super);\r\n    function CommonDataProvider(columns, options) {\r\n        var _this = this;\r\n        if (columns === void 0) { columns = []; }\r\n        if (options === void 0) { options = {}; }\r\n        _super.call(this, options);\r\n        this.columns = columns;\r\n        this.rankingIndex = 0;\r\n        //generic accessor of the data item\r\n        this.rowGetter = function (row, id, desc) { return row[desc.column]; };\r\n        //generate the accessor\r\n        columns.forEach(function (d) {\r\n            d.accessor = d.accessor || _this.rowGetter;\r\n            d.label = d.label || d.column;\r\n        });\r\n    }\r\n    CommonDataProvider.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['addDesc']);\r\n    };\r\n    /**\r\n     * adds another column description to this data provider\r\n     * @param column\r\n     */\r\n    CommonDataProvider.prototype.pushDesc = function (column) {\r\n        var d = column;\r\n        d.accessor = d.accessor || this.rowGetter;\r\n        d.label = column.label || d.column;\r\n        this.columns.push(column);\r\n        this.fire('addDesc', d);\r\n    };\r\n    CommonDataProvider.prototype.getColumns = function () {\r\n        return this.columns.slice();\r\n    };\r\n    CommonDataProvider.prototype.findDesc = function (ref) {\r\n        return this.columns.filter(function (c) { return c.column === ref; })[0];\r\n    };\r\n    /**\r\n     * identify by the tuple type@columnname\r\n     * @param desc\r\n     * @returns {string}\r\n     */\r\n    CommonDataProvider.prototype.toDescRef = function (desc) {\r\n        return desc.column ? desc.type + '@' + desc.column : desc;\r\n    };\r\n    CommonDataProvider.prototype.fromDescRef = function (descRef) {\r\n        if (typeof (descRef) === 'string') {\r\n            return this.columns.filter(function (d) { return d.type + '@' + d.column === descRef; })[0];\r\n        }\r\n        return descRef;\r\n    };\r\n    CommonDataProvider.prototype.restore = function (dump) {\r\n        _super.prototype.restore.call(this, dump);\r\n        this.rankingIndex = 1 + d3.max(this.getRankings(), function (r) { return +r.id.substring(4); });\r\n    };\r\n    CommonDataProvider.prototype.nextRankingId = function () {\r\n        return 'rank' + (this.rankingIndex++);\r\n    };\r\n    return CommonDataProvider;\r\n}(DataProvider));\r\nexports.CommonDataProvider = CommonDataProvider;\r\n/**\r\n * a data provider based on an local array\r\n */\r\nvar LocalDataProvider = (function (_super) {\r\n    __extends(LocalDataProvider, _super);\r\n    function LocalDataProvider(data, columns, options) {\r\n        if (columns === void 0) { columns = []; }\r\n        if (options === void 0) { options = {}; }\r\n        _super.call(this, columns, options);\r\n        this.data = data;\r\n        this.options = {\r\n            /**\r\n             * whether the filter should be applied to all rankings regardless where they are\r\n             */\r\n            filterGlobally: false\r\n        };\r\n        utils.merge(this.options, options);\r\n        //enhance with a magic attribute storing ranking information\r\n        data.forEach(function (d, i) {\r\n            d._rankings = {};\r\n            d._index = i;\r\n        });\r\n        var that = this;\r\n        this.reorderall = function () {\r\n            //fire for all other rankings a dirty order event, too\r\n            var ranking = this.source;\r\n            that.getRankings().forEach(function (r) {\r\n                if (r !== ranking) {\r\n                    r.dirtyOrder();\r\n                }\r\n            });\r\n        };\r\n    }\r\n    /**\r\n     * replaces the dataset rows with a new one\r\n     * @param data\r\n     */\r\n    LocalDataProvider.prototype.setData = function (data) {\r\n        data.forEach(function (d, i) {\r\n            d._rankings = {};\r\n            d._index = i;\r\n        });\r\n        this.data = data;\r\n        this.reorderall();\r\n    };\r\n    LocalDataProvider.prototype.clearData = function () {\r\n        this.setData([]);\r\n    };\r\n    /**\r\n     * append rows to the dataset\r\n     * @param data\r\n     */\r\n    LocalDataProvider.prototype.appendData = function (data) {\r\n        var l = this.data.length;\r\n        data.forEach(function (d, i) {\r\n            d._rankings = {};\r\n            d._index = l + i;\r\n        });\r\n        this.data.push.apply(this.data, data);\r\n        this.reorderall();\r\n    };\r\n    LocalDataProvider.prototype.rankAccessor = function (row, id, desc, ranking) {\r\n        return (row._rankings[ranking.id] + 1) || 1;\r\n    };\r\n    LocalDataProvider.prototype.cloneRanking = function (existing) {\r\n        var _this = this;\r\n        var id = this.nextRankingId();\r\n        var new_ = new model.Ranking(id);\r\n        if (existing) {\r\n            this.data.forEach(function (row) {\r\n                var r = row._rankings;\r\n                r[id] = r[existing.id];\r\n            });\r\n            //TODO better cloning\r\n            existing.children.forEach(function (child) {\r\n                _this.push(new_, child.desc);\r\n            });\r\n        }\r\n        else {\r\n            new_.push(this.create(model.createRankDesc()));\r\n        }\r\n        if (this.options.filterGlobally) {\r\n            new_.on('filterChanged.reorderall', this.reorderall);\r\n        }\r\n        return new_;\r\n    };\r\n    LocalDataProvider.prototype.cleanUpRanking = function (ranking) {\r\n        if (this.options.filterGlobally) {\r\n            ranking.on('filterChanged.reorderall', null);\r\n        }\r\n        //delete all stored information\r\n        this.data.forEach(function (d) { return delete d._rankings[ranking.id]; });\r\n    };\r\n    LocalDataProvider.prototype.sort = function (ranking) {\r\n        if (this.data.length === 0) {\r\n            return Promise.resolve([]);\r\n        }\r\n        //wrap in a helper and store the initial index\r\n        var helper = this.data.map(function (r, i) { return ({ row: r, i: i, prev: r._rankings[ranking.id] || 0 }); });\r\n        //do the optional filtering step\r\n        if (this.options.filterGlobally) {\r\n            var filtered_1 = this.getRankings().filter(function (d) { return d.isFiltered(); });\r\n            if (filtered_1.length > 0) {\r\n                helper = helper.filter(function (d) { return filtered_1.every(function (f) { return f.filter(d.row); }); });\r\n            }\r\n        }\r\n        else if (ranking.isFiltered()) {\r\n            helper = helper.filter(function (d) { return ranking.filter(d.row); });\r\n        }\r\n        //sort by the ranking column\r\n        helper.sort(function (a, b) { return ranking.comparator(a.row, b.row); });\r\n        //store the ranking index and create an argsort version, i.e. rank 0 -> index i\r\n        var argsort = helper.map(function (r, i) {\r\n            r.row._rankings[ranking.id] = i;\r\n            return r.i;\r\n        });\r\n        return Promise.resolve(argsort);\r\n    };\r\n    LocalDataProvider.prototype.view = function (indices) {\r\n        var _this = this;\r\n        if (this.data.length === 0) {\r\n            return Promise.resolve([]);\r\n        }\r\n        //filter invalid indices\r\n        var l = this.data.length;\r\n        var slice = indices.filter(function (i) { return i >= 0 && i < l; }).map(function (index) { return _this.data[index]; });\r\n        return Promise.resolve(slice);\r\n    };\r\n    /**\r\n     * helper for computing statistics\r\n     * @param indices\r\n     * @returns {{stats: (function(model.INumberColumn): *), hist: (function(model.ICategoricalColumn): *)}}\r\n     */\r\n    LocalDataProvider.prototype.stats = function (indices) {\r\n        var _this = this;\r\n        var d = null;\r\n        var getD = function () { return d === null ? (d = _this.view(indices)) : d; };\r\n        return {\r\n            stats: function (col) { return getD().then(function (data) { return computeStats(data, col.getNumber.bind(col), [0, 1]); }); },\r\n            hist: function (col) { return getD().then(function (data) { return computeHist(data, col.getCategories.bind(col), col.categories); }); }\r\n        };\r\n    };\r\n    LocalDataProvider.prototype.mappingSample = function (col) {\r\n        var _this = this;\r\n        var MAX_SAMPLE = 500; //at most 500 sample lines\r\n        var l = this.data.length;\r\n        if (l <= MAX_SAMPLE) {\r\n            return Promise.resolve(this.data.map(col.getRawValue.bind(col)));\r\n        }\r\n        //randomly select 500 elements\r\n        var indices = [];\r\n        for (var i = 0; i < MAX_SAMPLE; ++i) {\r\n            var j = Math.floor(Math.random() * (l - 1));\r\n            while (indices.indexOf(j) >= 0) {\r\n                j = Math.floor(Math.random() * (l - 1));\r\n            }\r\n            indices.push(j);\r\n        }\r\n        return Promise.resolve(indices.map(function (i) { return col.getRawValue(_this.data[i]); }));\r\n    };\r\n    LocalDataProvider.prototype.searchSelect = function (search, col) {\r\n        var f = typeof search === 'string' ? function (v) { return v.indexOf(search) >= 0; } : function (v) { return v.match(search) != null; };\r\n        var indices = this.data.filter(function (row) {\r\n            return f(col.getLabel(row));\r\n        }).map(function (row) { return row._index; });\r\n        this.setSelection(indices);\r\n    };\r\n    return LocalDataProvider;\r\n}(CommonDataProvider));\r\nexports.LocalDataProvider = LocalDataProvider;\r\n/**\r\n * a remote implementation of the data provider\r\n */\r\nvar RemoteDataProvider = (function (_super) {\r\n    __extends(RemoteDataProvider, _super);\r\n    function RemoteDataProvider(server, columns, options) {\r\n        if (columns === void 0) { columns = []; }\r\n        if (options === void 0) { options = {}; }\r\n        _super.call(this, columns, options);\r\n        this.server = server;\r\n        /**\r\n         * the local ranking orders\r\n         * @type {{}}\r\n         */\r\n        this.ranks = {};\r\n    }\r\n    RemoteDataProvider.prototype.rankAccessor = function (row, id, desc, ranking) {\r\n        return this.ranks[ranking.id][row._index] || 0;\r\n    };\r\n    RemoteDataProvider.prototype.cloneRanking = function (existing) {\r\n        var id = this.nextRankingId();\r\n        if (existing) {\r\n            //copy the ranking\r\n            this.ranks[id] = this.ranks[existing.id];\r\n        }\r\n        var r = new model.Ranking(id);\r\n        r.push(this.create(model.createRankDesc()));\r\n        return r;\r\n    };\r\n    RemoteDataProvider.prototype.cleanUpRanking = function (ranking) {\r\n        //delete all stored information\r\n        delete this.ranks[ranking.id];\r\n    };\r\n    RemoteDataProvider.prototype.sort = function (ranking) {\r\n        var _this = this;\r\n        //generate a description of what to sort\r\n        var desc = ranking.toSortingDesc(function (desc) { return desc.column; });\r\n        //use the server side to sort\r\n        return this.server.sort(desc).then(function (argsort) {\r\n            //store the result\r\n            _this.ranks[ranking.id] = argsort;\r\n            return argsort;\r\n        });\r\n    };\r\n    RemoteDataProvider.prototype.view = function (argsort) {\r\n        return this.server.view(argsort).then(function (view) {\r\n            //enhance with the data index\r\n            view.forEach(function (d, i) { return d._index = argsort[i]; });\r\n            return view;\r\n        });\r\n    };\r\n    RemoteDataProvider.prototype.mappingSample = function (col) {\r\n        return this.server.mappingSample(col.desc.column);\r\n    };\r\n    RemoteDataProvider.prototype.searchSelect = function (search, col) {\r\n        var _this = this;\r\n        this.server.search(search, col.desc.column).then(function (indices) {\r\n            _this.setSelection(indices);\r\n        });\r\n    };\r\n    return RemoteDataProvider;\r\n}(CommonDataProvider));\r\nexports.RemoteDataProvider = RemoteDataProvider;\r\n//# sourceMappingURL=provider.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/provider.js\n ** module id = 7\n ** module chunks = 0\n **/","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\nvar model = require('./model');\r\n/**\r\n * default renderer instance rendering the value as a text\r\n */\r\nvar DefaultCellRenderer = (function () {\r\n    function DefaultCellRenderer() {\r\n        /**\r\n         * class to append to the text elements\r\n         * @type {string}\r\n         */\r\n        this.textClass = 'text';\r\n        /**\r\n         * the text alignment: left, center, right\r\n         * @type {string}\r\n         */\r\n        this.align = 'left';\r\n    }\r\n    DefaultCellRenderer.prototype.render = function ($col, col, rows, context) {\r\n        var $rows = $col.datum(col).selectAll('text.' + this.textClass).data(rows, context.rowKey);\r\n        $rows.enter().append('text').attr({\r\n            'class': this.textClass,\r\n            'clip-path': 'url(#' + context.idPrefix + 'clipCol' + col.id + ')',\r\n            y: function (d, i) { return context.cellPrevY(i); }\r\n        });\r\n        var alignmentShift = 2;\r\n        if (this.align === 'right') {\r\n            alignmentShift = col.getWidth() - 5;\r\n        }\r\n        else if (this.align === 'center') {\r\n            alignmentShift = col.getWidth() * 0.5;\r\n        }\r\n        $rows.attr({\r\n            x: function (d, i) { return context.cellX(i) + alignmentShift; },\r\n            'data-index': function (d, i) { return i; }\r\n        }).text(function (d) { return col.getLabel(d); });\r\n        context.animated($rows).attr({\r\n            y: function (d, i) { return context.cellY(i); }\r\n        });\r\n        $rows.exit().remove();\r\n    };\r\n    /**\r\n     * resolves the cell in the column for a given row\r\n     * @param $col\r\n     * @param index\r\n     * @return {Selection<Datum>}\r\n     */\r\n    DefaultCellRenderer.prototype.findRow = function ($col, index) {\r\n        return $col.selectAll('text.' + this.textClass + '[data-index=\"' + index + '\"]');\r\n    };\r\n    DefaultCellRenderer.prototype.mouseEnter = function ($col, $row, col, row, index, context) {\r\n        var rowNode = $row.node();\r\n        //find the right one and\r\n        var n = this.findRow($col, index).node();\r\n        if (n) {\r\n            rowNode.appendChild(n);\r\n        }\r\n    };\r\n    DefaultCellRenderer.prototype.mouseLeave = function ($col, $row, col, row, index, context) {\r\n        var colNode = $col.node();\r\n        var rowNode = $row.node();\r\n        //move back\r\n        if (rowNode.hasChildNodes() && colNode) {\r\n            colNode.appendChild(rowNode.firstChild);\r\n        }\r\n        $row.selectAll('*').remove();\r\n    };\r\n    DefaultCellRenderer.prototype.renderCanvas = function (ctx, col, rows, context) {\r\n        var _this = this;\r\n        ctx.save();\r\n        ctx.textAlign = this.align;\r\n        rows.forEach(function (row, i) {\r\n            var y = context.cellY(i);\r\n            var alignmentShift = 2;\r\n            if (_this.align === 'right') {\r\n                alignmentShift = col.getWidth() - 5;\r\n            }\r\n            else if (_this.align === 'center') {\r\n                alignmentShift = col.getWidth() * 0.5;\r\n            }\r\n            var x = context.cellX(i) + alignmentShift;\r\n            ctx.fillText(col.getLabel(row), x, y, col.getWidth());\r\n        });\r\n        ctx.restore();\r\n    };\r\n    DefaultCellRenderer.prototype.mouseEnterCanvas = function (ctx, col, row, index, context) {\r\n        //TODO\r\n    };\r\n    return DefaultCellRenderer;\r\n}());\r\nexports.DefaultCellRenderer = DefaultCellRenderer;\r\n/**\r\n * simple derived one where individual elements can be overridden\r\n */\r\nvar DerivedCellRenderer = (function (_super) {\r\n    __extends(DerivedCellRenderer, _super);\r\n    function DerivedCellRenderer(extraFuncs) {\r\n        var _this = this;\r\n        _super.call(this);\r\n        //integrate all the extra functions\r\n        Object.keys(extraFuncs).forEach(function (key) {\r\n            _this[key] = extraFuncs[key];\r\n        });\r\n    }\r\n    return DerivedCellRenderer;\r\n}(DefaultCellRenderer));\r\n/**\r\n * a renderer rendering a bar for numerical columns\r\n */\r\nvar BarCellRenderer = (function (_super) {\r\n    __extends(BarCellRenderer, _super);\r\n    function BarCellRenderer() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    BarCellRenderer.prototype.render = function ($col, col, rows, context) {\r\n        var _this = this;\r\n        //map to bars\r\n        var $rows = $col.datum(col).selectAll('rect.bar').data(rows, context.rowKey);\r\n        $rows.enter().append('rect').attr({\r\n            'class': 'bar ' + col.cssClass,\r\n            x: function (d, i) { return context.cellX(i); },\r\n            y: function (d, i) { return context.cellPrevY(i) + context.option('rowPadding', 1); },\r\n            width: function (d) {\r\n                var n = col.getWidth() * col.getValue(d);\r\n                return isNaN(n) ? 0 : n;\r\n            }\r\n        }).style('fill', col.color);\r\n        $rows.attr({\r\n            'data-index': function (d, i) { return i; },\r\n            height: function (d, i) { return context.rowHeight(i) - context.option('rowPadding', 1) * 2; }\r\n        });\r\n        context.animated($rows).attr({\r\n            x: function (d, i) { return context.cellX(i); },\r\n            y: function (d, i) { return context.cellY(i) + context.option('rowPadding', 1); },\r\n            width: function (d) {\r\n                var n = col.getWidth() * col.getValue(d);\r\n                return isNaN(n) ? 0 : n;\r\n            }\r\n        }).style({\r\n            fill: function (d, i) { return _this.colorOf(d, i, col); }\r\n        });\r\n        $rows.exit().remove();\r\n    };\r\n    /**\r\n     * computes the color for a given row\r\n     * @param d the current row\r\n     * @param i the row index\r\n     * @param col the model column\r\n     * @returns {string}\r\n     */\r\n    BarCellRenderer.prototype.colorOf = function (d, i, col) {\r\n        return col.color;\r\n    };\r\n    BarCellRenderer.prototype.findRow = function ($col, index) {\r\n        return $col.selectAll('rect.bar[data-index=\"' + index + '\"]');\r\n    };\r\n    BarCellRenderer.prototype.mouseEnter = function ($col, $row, col, row, index, context) {\r\n        var rowNode = this.findRow($col, index);\r\n        if (!rowNode.empty()) {\r\n            //create a text element on top\r\n            $row.node().appendChild((rowNode.node()));\r\n            $row.append('text').datum(rowNode.datum()).attr({\r\n                'class': 'number',\r\n                'clip-path': 'url(#' + context.idPrefix + 'clipCol' + col.id + ')',\r\n                transform: 'translate(' + context.cellX(index) + ',' + context.cellY(index) + ')'\r\n            }).text(function (d) { return col.getLabel(d); });\r\n        }\r\n    };\r\n    BarCellRenderer.prototype.renderCanvas = function (ctx, col, rows, context) {\r\n        var _this = this;\r\n        ctx.save();\r\n        rows.forEach(function (d, i) {\r\n            var x = context.cellX(i);\r\n            var y = context.cellY(i) + context.option('rowPadding', 1);\r\n            var n = col.getWidth() * col.getValue(d);\r\n            var w = isNaN(n) ? 0 : n;\r\n            var h = context.rowHeight(i) - context.option('rowPadding', 1) * 2;\r\n            ctx.fillStyle = _this.colorOf(d, i, col) || col.color || model.Column.DEFAULT_COLOR;\r\n            ctx.fillRect(x, y, w, h);\r\n        });\r\n        ctx.restore();\r\n    };\r\n    BarCellRenderer.prototype.mouseEnterCanvas = function (ctx, col, row, index, context) {\r\n        ctx.save();\r\n        ctx.fillText(col.getLabel(row), context.cellX(index), context.cellY(index), col.getWidth());\r\n        ctx.restore();\r\n    };\r\n    return BarCellRenderer;\r\n}(DefaultCellRenderer));\r\nexports.BarCellRenderer = BarCellRenderer;\r\n/**\r\n * render as a heatmap cell, e.g., encode the value in color\r\n */\r\nvar HeatMapCellRenderer = (function (_super) {\r\n    __extends(HeatMapCellRenderer, _super);\r\n    function HeatMapCellRenderer() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    HeatMapCellRenderer.prototype.render = function ($col, col, rows, context) {\r\n        var _this = this;\r\n        var $rows = $col.datum(col).selectAll('rect.heatmap').data(rows, context.rowKey);\r\n        $rows.enter().append('rect').attr({\r\n            'class': 'bar ' + col.cssClass,\r\n            x: function (d, i) { return context.cellX(i); },\r\n            y: function (d, i) { return context.cellPrevY(i) + context.option('rowPadding', 1); },\r\n            width: function (d, i) { return context.rowHeight(i) - context.option('rowPadding', 1) * 2; }\r\n        }).style('fill', col.color);\r\n        $rows.attr({\r\n            'data-index': function (d, i) { return i; },\r\n            width: function (d, i) { return context.rowHeight(i) - context.option('rowPadding', 1) * 2; },\r\n            height: function (d, i) { return context.rowHeight(i) - context.option('rowPadding', 1) * 2; }\r\n        });\r\n        context.animated($rows).attr({\r\n            x: function (d, i) { return context.cellX(i); },\r\n            y: function (d, i) { return context.cellY(i) + context.option('rowPadding', 1); }\r\n        }).style({\r\n            fill: function (d, i) { return _this.colorOf(d, i, col); }\r\n        });\r\n        $rows.exit().remove();\r\n    };\r\n    /**\r\n     * computes the color of the cell\r\n     * @param d the row\r\n     * @param i the data index\r\n     * @param col the column\r\n     * @returns {string} the computed color\r\n     */\r\n    HeatMapCellRenderer.prototype.colorOf = function (d, i, col) {\r\n        var v = col.getValue(d);\r\n        if (isNaN(v)) {\r\n            v = 0;\r\n        }\r\n        //hsl space encoding, encode in lightness\r\n        var color = d3.hsl(col.color || model.Column.DEFAULT_COLOR);\r\n        color.l = v;\r\n        return color.toString();\r\n    };\r\n    HeatMapCellRenderer.prototype.findRow = function ($col, index) {\r\n        return $col.selectAll('rect.heatmap[data-index=\"' + index + '\"]');\r\n    };\r\n    HeatMapCellRenderer.prototype.mouseEnter = function ($col, $row, col, row, index, context) {\r\n        var rowNode = this.findRow($col, index);\r\n        if (!rowNode.empty()) {\r\n            //append a text element on top\r\n            $row.node().appendChild((rowNode.node()));\r\n            $row.append('text').datum(rowNode.datum()).attr({\r\n                'class': 'number',\r\n                'clip-path': 'url(#' + context.idPrefix + 'clipCol' + col.id + ')',\r\n                transform: 'translate(' + context.cellX(index) + ',' + context.cellY(index) + ')'\r\n            }).text(function (d) { return col.getLabel(d); });\r\n        }\r\n    };\r\n    HeatMapCellRenderer.prototype.renderCanvas = function (ctx, col, rows, context) {\r\n        var _this = this;\r\n        ctx.save();\r\n        rows.forEach(function (d, i) {\r\n            var x = context.cellX(i);\r\n            var y = context.cellY(i) + context.option('rowPadding', 1);\r\n            var h = context.rowHeight(i) - context.option('rowPadding', 1) * 2;\r\n            ctx.fillStyle = _this.colorOf(d, i, col);\r\n            ctx.fillRect(x, y, h, h);\r\n        });\r\n        ctx.restore();\r\n    };\r\n    HeatMapCellRenderer.prototype.mouseEnterCanvas = function (ctx, col, row, index, context) {\r\n        ctx.save();\r\n        ctx.fillText(col.getLabel(row), context.cellX(index), context.cellY(index), col.getWidth());\r\n        ctx.restore();\r\n    };\r\n    return HeatMapCellRenderer;\r\n}(DefaultCellRenderer));\r\nexports.HeatMapCellRenderer = HeatMapCellRenderer;\r\n/**\r\n * a bar cell renderer where individual function can be overwritten\r\n */\r\nvar DerivedBarCellRenderer = (function (_super) {\r\n    __extends(DerivedBarCellRenderer, _super);\r\n    function DerivedBarCellRenderer(extraFuncs) {\r\n        var _this = this;\r\n        _super.call(this);\r\n        Object.keys(extraFuncs).forEach(function (key) {\r\n            _this[key] = extraFuncs[key];\r\n        });\r\n    }\r\n    return DerivedBarCellRenderer;\r\n}(BarCellRenderer));\r\n/**\r\n * an rendering for action columns, i.e., clickable column actions\r\n */\r\nvar ActionCellRenderer = (function () {\r\n    function ActionCellRenderer() {\r\n    }\r\n    ActionCellRenderer.prototype.render = function ($col, col, rows, context) {\r\n        //nothing to render in normal mode\r\n    };\r\n    ActionCellRenderer.prototype.mouseEnter = function ($col, $row, col, row, index, context) {\r\n        //render all actions at tspans\r\n        var actions = context.option('actions', []);\r\n        var $actions = $row.append('text').attr({\r\n            'class': 'actions fa',\r\n            x: context.cellX(index),\r\n            y: context.cellPrevY(index),\r\n            'data-index': index\r\n        }).selectAll('tspan').data(actions);\r\n        $actions.enter().append('tspan')\r\n            .text(function (d) { return d.icon; })\r\n            .attr('title', function (d) { return d.name; })\r\n            .on('click', function (d) {\r\n            d3.event.preventDefault();\r\n            d3.event.stopPropagation();\r\n            d.action(row);\r\n        });\r\n    };\r\n    ActionCellRenderer.prototype.mouseLeave = function ($col, $row, col, row, index, context) {\r\n        $row.selectAll('*').remove();\r\n    };\r\n    return ActionCellRenderer;\r\n}());\r\nexports.ActionCellRenderer = ActionCellRenderer;\r\nvar SelectionCellRenderer = (function (_super) {\r\n    __extends(SelectionCellRenderer, _super);\r\n    function SelectionCellRenderer() {\r\n        _super.call(this);\r\n        this.textClass = 'selection';\r\n    }\r\n    SelectionCellRenderer.prototype.render = function ($col, col, rows, context) {\r\n        var $rows = $col.datum(col).selectAll('text.' + this.textClass).data(rows, context.rowKey);\r\n        $rows.enter().append('text').attr({\r\n            'class': this.textClass + ' fa',\r\n            y: function (d, i) { return context.cellPrevY(i); }\r\n        }).on('click', function (d) {\r\n            d3.event.preventDefault();\r\n            d3.event.stopPropagation();\r\n            var new_ = col.toggleValue(d);\r\n            d3.select(this).text(new_ === true ? '\\uf046' : '\\uf096');\r\n        });\r\n        $rows.attr({\r\n            x: function (d, i) { return context.cellX(i); },\r\n            'data-index': function (d, i) { return i; }\r\n        }).text(function (d) { return col.getValue(d) === true ? '\\uf046' : '\\uf096'; });\r\n        context.animated($rows).attr({\r\n            y: function (d, i) { return context.cellY(i); }\r\n        });\r\n        $rows.exit().remove();\r\n    };\r\n    SelectionCellRenderer.prototype.renderCanvas = function (ctx, col, rows, context) {\r\n        ctx.save();\r\n        ctx.font = 'FontAwesome';\r\n        rows.forEach(function (d, i) {\r\n            var x = context.cellX(i);\r\n            var y = context.cellY(i);\r\n            ctx.fillText(col.getValue(d) === true ? '\\uf046' : '\\uf096', x, y);\r\n        });\r\n        ctx.restore();\r\n    };\r\n    return SelectionCellRenderer;\r\n}(DefaultCellRenderer));\r\nexports.SelectionCellRenderer = SelectionCellRenderer;\r\n/**\r\n * a renderer for annotate columns\r\n */\r\nvar AnnotateCellRenderer = (function (_super) {\r\n    __extends(AnnotateCellRenderer, _super);\r\n    function AnnotateCellRenderer() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    AnnotateCellRenderer.prototype.mouseEnter = function ($col, $row, col, row, index, context) {\r\n        //render an input field for editing\r\n        this.findRow($col, index).attr('display', 'none');\r\n        $row.append('foreignObject').attr({\r\n            x: context.cellX(index) - 2,\r\n            y: context.cellPrevY(index) - 2,\r\n            'data-index': index,\r\n            width: col.getWidth(),\r\n            height: context.rowHeight(index)\r\n        }).append('xhtml:input').attr({\r\n            type: 'text',\r\n            value: col.getValue(row)\r\n        }).style({\r\n            width: col.getWidth() + 'px'\r\n        }).on('change', function () {\r\n            //update the value\r\n            var text = this.value;\r\n            col.setValue(row, text);\r\n        }).on('click', function () { return d3.event.stopPropagation(); });\r\n    };\r\n    AnnotateCellRenderer.prototype.mouseLeave = function ($col, $row, col, row, index, context) {\r\n        this.findRow($col, index).attr('display', null);\r\n        var node = $row.select('input').node();\r\n        if (node) {\r\n            //update the value before removal, the change event may not have been fired\r\n            col.setValue(row, node.value);\r\n        }\r\n        $row.selectAll('*').remove();\r\n    };\r\n    return AnnotateCellRenderer;\r\n}(DefaultCellRenderer));\r\nvar defaultRendererInstance = new DefaultCellRenderer();\r\nvar barRendererInstance = new BarCellRenderer();\r\n/**\r\n * creates a new instance with optional overridden methods\r\n * @param extraFuncs\r\n * @return {DefaultCellRenderer}\r\n */\r\nfunction defaultRenderer(extraFuncs) {\r\n    if (!extraFuncs) {\r\n        return defaultRendererInstance;\r\n    }\r\n    return new DerivedCellRenderer(extraFuncs);\r\n}\r\nexports.defaultRenderer = defaultRenderer;\r\n/**\r\n * creates a new instance with optional overridden methods\r\n * @param extraFuncs\r\n * @return {BarCellRenderer}\r\n */\r\nfunction barRenderer(extraFuncs) {\r\n    if (!extraFuncs) {\r\n        return barRendererInstance;\r\n    }\r\n    return new DerivedBarCellRenderer(extraFuncs);\r\n}\r\nexports.barRenderer = barRenderer;\r\n/**\r\n * renderer of a link column, i.e. render an intermediate *a* element\r\n */\r\nvar LinkCellRenderer = (function (_super) {\r\n    __extends(LinkCellRenderer, _super);\r\n    function LinkCellRenderer() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    LinkCellRenderer.prototype.render = function ($col, col, rows, context) {\r\n        //wrap the text elements with an a element\r\n        var $rows = $col.datum(col).selectAll('text.link').data(rows, context.rowKey);\r\n        $rows.enter().append('text').attr({\r\n            'class': 'text link',\r\n            'clip-path': 'url(#' + context.idPrefix + 'clipCol' + col.id + ')',\r\n            y: function (d, i) { return context.cellPrevY(i); }\r\n        });\r\n        $rows.attr({\r\n            x: function (d, i) { return context.cellX(i); },\r\n            'data-index': function (d, i) { return i; }\r\n        }).html(function (d) { return col.isLink(d) ? \"<a class=\\\"link\\\" xlink:href=\\\"\" + col.getValue(d) + \"\\\" target=\\\"_blank\\\">\" + col.getLabel(d) + \"</a>\" : col.getLabel(d); });\r\n        context.animated($rows).attr({\r\n            y: function (d, i) { return context.cellY(i); }\r\n        });\r\n        $rows.exit().remove();\r\n    };\r\n    LinkCellRenderer.prototype.findRow = function ($col, index) {\r\n        return $col.selectAll('text.link[data-index=\"' + index + '\"]');\r\n    };\r\n    return LinkCellRenderer;\r\n}(DefaultCellRenderer));\r\n/**\r\n * renders a string with additional alignment behavior\r\n */\r\nvar StringCellRenderer = (function (_super) {\r\n    __extends(StringCellRenderer, _super);\r\n    function StringCellRenderer() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    StringCellRenderer.prototype.render = function ($col, col, rows, context) {\r\n        this.align = col.alignment;\r\n        this.textClass = 'text' + (col.alignment === 'left' ? '' : '_' + col.alignment);\r\n        return _super.prototype.render.call(this, $col, col, rows, context);\r\n    };\r\n    return StringCellRenderer;\r\n}(DefaultCellRenderer));\r\n/**\r\n * renders categorical columns as a colored rect with label\r\n */\r\nvar CategoricalRenderer = (function (_super) {\r\n    __extends(CategoricalRenderer, _super);\r\n    function CategoricalRenderer() {\r\n        _super.apply(this, arguments);\r\n        this.textClass = 'cat';\r\n    }\r\n    CategoricalRenderer.prototype.render = function ($col, col, rows, context) {\r\n        var $rows = $col.datum(col).selectAll('g.' + this.textClass).data(rows, context.rowKey);\r\n        var $rows_enter = $rows.enter().append('g').attr({\r\n            'class': this.textClass,\r\n            'data-index': function (d, i) { return i; },\r\n            transform: function (d, i) { return 'translate(' + context.cellX(i) + ',' + context.cellPrevY(i) + ')'; }\r\n        });\r\n        $rows_enter.append('text').attr({\r\n            'clip-path': 'url(#' + context.idPrefix + 'clipCol' + col.id + ')',\r\n            x: function (d, i) { return context.rowHeight(i); }\r\n        });\r\n        $rows_enter.append('rect').attr({\r\n            y: context.option('rowPadding', 1)\r\n        });\r\n        $rows.attr({\r\n            'data-index': function (d, i) { return i; },\r\n            transform: function (d, i) { return 'translate(' + context.cellX(i) + ',' + context.cellY(i) + ')'; }\r\n        });\r\n        $rows.select('text').attr({\r\n            x: function (d, i) { return context.rowHeight(i); }\r\n        }).text(function (d) { return col.getLabel(d); });\r\n        $rows.select('rect').style({\r\n            fill: function (d) { return col.getColor(d); }\r\n        }).attr({\r\n            height: function (d, i) { return Math.max(context.rowHeight(i) - context.option('rowPadding', 1) * 2, 0); },\r\n            width: function (d, i) { return Math.max(context.rowHeight(i) - context.option('rowPadding', 1) * 2, 0); }\r\n        });\r\n        context.animated($rows).attr({\r\n            transform: function (d, i) { return 'translate(' + context.cellX(i) + ',' + context.cellY(i) + ')'; }\r\n        });\r\n        $rows.exit().remove();\r\n    };\r\n    CategoricalRenderer.prototype.findRow = function ($col, index) {\r\n        return $col.selectAll('g.' + this.textClass + '[data-index=\"' + index + '\"]');\r\n    };\r\n    CategoricalRenderer.prototype.renderCanvas = function (ctx, col, rows, context) {\r\n        ctx.save();\r\n        rows.forEach(function (d, i) {\r\n            var x = context.cellX(i);\r\n            var y = context.cellY(i);\r\n            ctx.fillStyle = 'black';\r\n            ctx.fillText(col.getLabel(d), x + context.rowHeight(i), y);\r\n            ctx.fillStyle = col.getColor(d);\r\n            ctx.fillRect(x, y + context.option('rowPadding', 1), Math.max(context.rowHeight(i) - context.option('rowPadding', 1) * 2, 0), Math.max(context.rowHeight(i) - context.option('rowPadding', 1) * 2, 0));\r\n        });\r\n    };\r\n    return CategoricalRenderer;\r\n}(DefaultCellRenderer));\r\n/**\r\n * renders a stacked column using composite pattern\r\n */\r\nvar StackCellRenderer = (function (_super) {\r\n    __extends(StackCellRenderer, _super);\r\n    function StackCellRenderer() {\r\n        _super.apply(this, arguments);\r\n    }\r\n    StackCellRenderer.prototype.renderImpl = function ($base, col, context, perChild, rowGetter, animated) {\r\n        if (animated === void 0) { animated = true; }\r\n        var $group = $base.datum(col), children = col.children, stacked = context.showStacked(col);\r\n        var offset = 0, shifts = children.map(function (d) {\r\n            var r = offset;\r\n            offset += d.getWidth();\r\n            offset += (!stacked ? context.option('columnPadding', 0) : 0);\r\n            return r;\r\n        });\r\n        var baseclass = 'component' + context.option('stackLevel', '');\r\n        var ueber = context.cellX;\r\n        var ueberOption = context.option;\r\n        context.option = function (option, default_) {\r\n            var r = ueberOption(option, default_);\r\n            return option === 'stackLevel' ? r + 'N' : r;\r\n        };\r\n        //map all children to g elements\r\n        var $children = $group.selectAll('g.' + baseclass).data(children, function (d) { return d.id; });\r\n        //shift children horizontally\r\n        $children.enter().append('g').attr({\r\n            'class': baseclass,\r\n            transform: function (d, i) { return 'translate(' + shifts[i] + ',0)'; }\r\n        });\r\n        //for each children render the column\r\n        $children.attr({\r\n            'class': function (d) { return baseclass + ' ' + d.desc.type; },\r\n            'data-stack': function (d, i) { return i; }\r\n        }).each(function (d, i) {\r\n            if (stacked) {\r\n                var preChildren_1 = children.slice(0, i);\r\n                //if shown as stacked bar shift individual cells of a column to the left where they belong to\r\n                context.cellX = function (index) {\r\n                    //shift by all the empty space left from the previous columns\r\n                    return ueber(index) - preChildren_1.reduce(function (prev, child) { return prev + child.getWidth() * (1 - child.getValue(rowGetter(index))); }, 0);\r\n                };\r\n            }\r\n            perChild(d3.select(this), d, i, context);\r\n        });\r\n        (animated ? context.animated($children) : $children).attr({\r\n            transform: function (d, i) { return 'translate(' + shifts[i] + ',0)'; }\r\n        });\r\n        $children.exit().remove();\r\n        context.cellX = ueber;\r\n        context.option = ueberOption;\r\n    };\r\n    StackCellRenderer.prototype.render = function ($col, stack, rows, context) {\r\n        this.renderImpl($col, stack, context, function ($child, col, i, ccontext) {\r\n            ccontext.render(col, $child, rows, ccontext);\r\n        }, function (index) { return rows[index]; });\r\n    };\r\n    StackCellRenderer.prototype.mouseEnter = function ($col, $row, stack, row, index, context) {\r\n        var baseclass = 'component' + context.option('stackLevel', '');\r\n        this.renderImpl($row, stack, context, function ($row_i, col, i, ccontext) {\r\n            var $col_i = $col.select('g.' + baseclass + '[data-stack=\"' + i + '\"]');\r\n            if (!$col_i.empty()) {\r\n                ccontext.renderer(col).mouseEnter($col_i, $row_i, col, row, index, ccontext);\r\n            }\r\n        }, function (index) { return row; }, false);\r\n    };\r\n    StackCellRenderer.prototype.mouseLeave = function ($col, $row, satck, row, index, context) {\r\n        var baseclass = 'component' + context.option('stackLevel', '');\r\n        this.renderImpl($row, satck, context, function ($row_i, col, i, ccontext) {\r\n            var $col_i = $col.select('g.' + baseclass + '[data-stack=\"' + i + '\"]');\r\n            if (!$col_i.empty()) {\r\n                ccontext.renderer(col).mouseLeave($col_i, $row_i, col, row, index, ccontext);\r\n            }\r\n        }, function (index) { return row; }, false);\r\n        $row.selectAll('*').remove();\r\n    };\r\n    StackCellRenderer.prototype.renderCanvas = function (ctx, stack, rows, context) {\r\n        var children = stack.children, stacked = context.showStacked(stack);\r\n        var offset = 0, shifts = children.map(function (d) {\r\n            var r = offset;\r\n            offset += d.getWidth();\r\n            offset += (!stacked ? context.option('columnPadding', 0) : 0);\r\n            return r;\r\n        });\r\n        var ueber = context.cellX;\r\n        var ueberOption = context.option;\r\n        context.option = function (option, default_) {\r\n            var r = ueberOption(option, default_);\r\n            return option === 'stackLevel' ? r + 'N' : r;\r\n        };\r\n        ctx.save();\r\n        children.forEach(function (child, i) {\r\n            ctx.save();\r\n            ctx.translate(shifts[i], 0);\r\n            if (stacked) {\r\n                var preChildren_2 = children.slice(0, i);\r\n                //if shown as stacked bar shift individual cells of a column to the left where they belong to\r\n                context.cellX = function (index) {\r\n                    //shift by all the empty space left from the previous columns\r\n                    return ueber(index) - preChildren_2.reduce(function (prev, child) { return prev + child.getWidth() * (1 - child.getValue(rows[index])); }, 0);\r\n                };\r\n            }\r\n            context.renderCanvas(child, ctx, rows, context);\r\n            ctx.restore();\r\n        });\r\n        ctx.restore();\r\n        context.cellX = ueber;\r\n        context.option = ueberOption;\r\n    };\r\n    return StackCellRenderer;\r\n}(DefaultCellRenderer));\r\n/**\r\n * defines a custom renderer object\r\n * @param selector d3 selector, e.g. text.my\r\n * @param render render function\r\n * @param extras additional functions\r\n * @returns {DerivedCellRenderer}\r\n */\r\nfunction createRenderer(selector, render, extras) {\r\n    var _this = this;\r\n    if (extras === void 0) { extras = {}; }\r\n    extras.selector = selector;\r\n    extras.render = render;\r\n    extras.findRow = function ($col, index) { return $col.selectAll(_this.selector + '[data-index=\"' + index + '\"]'); };\r\n    var r = new DerivedCellRenderer(extras);\r\n    return r;\r\n}\r\nexports.createRenderer = createRenderer;\r\nvar combineRenderer = barRenderer({\r\n    colorOf: function (d, i, col) { return col.getColor(d); }\r\n});\r\n/**\r\n * returns a map of all known renderers by type\r\n * @return\r\n */\r\nfunction renderers() {\r\n    return {\r\n        string: new StringCellRenderer(),\r\n        link: new LinkCellRenderer(),\r\n        number: barRenderer(),\r\n        rank: defaultRenderer({\r\n            textClass: 'rank',\r\n            align: 'right'\r\n        }),\r\n        boolean: defaultRenderer({\r\n            textClass: 'boolean',\r\n            align: 'center'\r\n        }),\r\n        heatmap: new HeatMapCellRenderer(),\r\n        stack: new StackCellRenderer(),\r\n        categorical: new CategoricalRenderer(),\r\n        ordinal: combineRenderer,\r\n        max: combineRenderer,\r\n        min: combineRenderer,\r\n        mean: combineRenderer,\r\n        script: combineRenderer,\r\n        actions: new ActionCellRenderer(),\r\n        annotate: new AnnotateCellRenderer(),\r\n        selection: new SelectionCellRenderer()\r\n    };\r\n}\r\nexports.renderers = renderers;\r\n//# sourceMappingURL=renderer.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/renderer.js\n ** module id = 8\n ** module chunks = 0\n **/","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\n\"use strict\";\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n};\r\n///<reference path='../typings/tsd.d.ts' />\r\nvar d3 = require('d3');\r\nvar utils = require('./utils');\r\nvar model = require('./model');\r\nvar renderer = require('./renderer');\r\nvar dialogs = require('./ui_dialogs');\r\nvar PoolEntry = (function () {\r\n    function PoolEntry(desc) {\r\n        this.desc = desc;\r\n        this.used = 0;\r\n    }\r\n    return PoolEntry;\r\n}());\r\nvar PoolRenderer = (function () {\r\n    function PoolRenderer(data, parent, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.data = data;\r\n        this.options = {\r\n            layout: 'vertical',\r\n            elemWidth: 100,\r\n            elemHeight: 40,\r\n            width: 100,\r\n            height: 500,\r\n            additionalDesc: [],\r\n            hideUsed: true,\r\n            addAtEndOnClick: false\r\n        };\r\n        utils.merge(this.options, options);\r\n        this.$node = d3.select(parent).append('div').classed('lu-pool', true);\r\n        this.changeDataStorage(data);\r\n    }\r\n    PoolRenderer.prototype.changeDataStorage = function (data) {\r\n        var _this = this;\r\n        if (this.data) {\r\n            this.data.on(['addColumn.pool', 'removeColumn.pool', 'addRanking.pool', 'removeRanking.pool', 'addDesc.pool'], null);\r\n        }\r\n        this.data = data;\r\n        this.entries = data.getColumns().concat(this.options.additionalDesc).map(function (d) { return new PoolEntry(d); });\r\n        data.on(['addDesc.pool'], function (desc) {\r\n            _this.entries.push(new PoolEntry(desc));\r\n            _this.update();\r\n        });\r\n        if (this.options.hideUsed) {\r\n            var that = this;\r\n            data.on(['addColumn.pool', 'removeColumn.pool'], function (col) {\r\n                var desc = col.desc, change = this.type === 'addColumn' ? 1 : -1;\r\n                that.entries.some(function (entry) {\r\n                    if (entry.desc !== desc) {\r\n                        return false;\r\n                    }\r\n                    entry.used += change;\r\n                    return true;\r\n                });\r\n                that.update();\r\n            });\r\n            data.on(['addRanking.pool', 'removeRanking.pool'], function (ranking) {\r\n                var descs = ranking.flatColumns.map(function (d) { return d.desc; }), change = this.type === 'addRanking' ? 1 : -1;\r\n                that.entries.some(function (entry) {\r\n                    if (descs.indexOf(entry.desc) < 0) {\r\n                        return false;\r\n                    }\r\n                    entry.used += change;\r\n                    return true;\r\n                });\r\n                that.update();\r\n            });\r\n            data.getRankings().forEach(function (ranking) {\r\n                var descs = ranking.flatColumns.map(function (d) { return d.desc; }), change = +1;\r\n                that.entries.some(function (entry) {\r\n                    if (descs.indexOf(entry.desc) < 0) {\r\n                        return false;\r\n                    }\r\n                    entry.used += change;\r\n                });\r\n            });\r\n        }\r\n    };\r\n    PoolRenderer.prototype.remove = function () {\r\n        this.$node.remove();\r\n        if (this.data) {\r\n            this.data.on(['addColumn.pool', 'removeColumn.pool', 'addRanking.pool', 'removeRanking.pool', 'addDesc.pool'], null);\r\n        }\r\n    };\r\n    PoolRenderer.prototype.update = function () {\r\n        var _this = this;\r\n        var data = this.data;\r\n        var descToShow = this.entries.filter(function (e) { return e.used === 0; }).map(function (d) { return d.desc; });\r\n        var $headers = this.$node.selectAll('div.header').data(descToShow);\r\n        var $headers_enter = $headers.enter().append('div').attr({\r\n            'class': 'header',\r\n            'draggable': true\r\n        }).on('dragstart', function (d) {\r\n            var e = d3.event;\r\n            e.dataTransfer.effectAllowed = 'copyMove'; //none, copy, copyLink, copyMove, link, linkMove, move, all\r\n            e.dataTransfer.setData('text/plain', d.label);\r\n            e.dataTransfer.setData('application/caleydo-lineup-column', JSON.stringify(data.toDescRef(d)));\r\n            if (model.isNumberColumn(d)) {\r\n                e.dataTransfer.setData('application/caleydo-lineup-column-number', JSON.stringify(data.toDescRef(d)));\r\n            }\r\n        }).style({\r\n            width: this.options.elemWidth + 'px',\r\n            height: this.options.elemHeight + 'px'\r\n        });\r\n        if (this.options.addAtEndOnClick) {\r\n            $headers_enter.on('click', function (d) {\r\n                _this.data.push(_this.data.getLastRanking(), d);\r\n            });\r\n        }\r\n        $headers_enter.append('span').classed('label', true).text(function (d) { return d.label; });\r\n        $headers.attr('class', function (d) { return (\"header \" + (d.cssClass || '') + \" \" + d.type); });\r\n        $headers.style({\r\n            'transform': function (d, i) {\r\n                var pos = _this.layout(i);\r\n                return 'translate(' + pos.x + 'px,' + pos.y + 'px)';\r\n            },\r\n            'background-color': function (d) {\r\n                var s = d;\r\n                return s.cssClass ? null : s.color || model.Column.DEFAULT_COLOR;\r\n            }\r\n        });\r\n        $headers.attr({\r\n            title: function (d) { return d.label; }\r\n        });\r\n        $headers.select('span').text(function (d) { return d.label; });\r\n        $headers.exit().remove();\r\n        //compute the size of this node\r\n        switch (this.options.layout) {\r\n            case 'horizontal':\r\n                this.$node.style({\r\n                    width: (this.options.elemWidth * descToShow.length) + 'px',\r\n                    height: (this.options.elemHeight * 1) + 'px'\r\n                });\r\n                break;\r\n            case 'grid':\r\n                var perRow = d3.round(this.options.width / this.options.elemWidth, 0);\r\n                this.$node.style({\r\n                    width: perRow * this.options.elemWidth + 'px',\r\n                    height: Math.ceil(descToShow.length / perRow) * this.options.elemHeight + 'px'\r\n                });\r\n                break;\r\n            //case 'vertical':\r\n            default:\r\n                this.$node.style({\r\n                    width: (this.options.elemWidth * 1) + 'px',\r\n                    height: (this.options.elemHeight * descToShow.length) + 'px'\r\n                });\r\n                break;\r\n        }\r\n    };\r\n    PoolRenderer.prototype.layout = function (i) {\r\n        switch (this.options.layout) {\r\n            case 'horizontal':\r\n                return { x: i * this.options.elemWidth, y: 0 };\r\n            case 'grid':\r\n                var perRow = d3.round(this.options.width / this.options.elemWidth, 0);\r\n                return { x: (i % perRow) * this.options.elemWidth, y: Math.floor(i / perRow) * this.options.elemHeight };\r\n            //case 'vertical':\r\n            default:\r\n                return { x: 0, y: i * this.options.elemHeight };\r\n        }\r\n    };\r\n    return PoolRenderer;\r\n}());\r\nexports.PoolRenderer = PoolRenderer;\r\nfunction dummyRankingButtonHook() {\r\n    return null;\r\n}\r\nexports.dummyRankingButtonHook = dummyRankingButtonHook;\r\nvar HeaderRenderer = (function () {\r\n    function HeaderRenderer(data, parent, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this.data = data;\r\n        this.options = {\r\n            slopeWidth: 150,\r\n            columnPadding: 5,\r\n            headerHistogramHeight: 40,\r\n            headerHeight: 20,\r\n            manipulative: true,\r\n            histograms: false,\r\n            filterDialogs: dialogs.filterDialogs(),\r\n            linkTemplates: [],\r\n            searchAble: function (col) { return col instanceof model.StringColumn; },\r\n            sortOnLabel: true,\r\n            autoRotateLabels: false,\r\n            rotationHeight: 50,\r\n            rotationDegree: -20,\r\n            freezeCols: 0,\r\n            rankingButtons: dummyRankingButtonHook\r\n        };\r\n        this.histCache = d3.map();\r\n        this.dragHandler = d3.behavior.drag()\r\n            .on('dragstart', function () {\r\n            d3.select(this).classed('dragging', true);\r\n            d3.event.sourceEvent.stopPropagation();\r\n            d3.event.sourceEvent.preventDefault();\r\n        })\r\n            .on('drag', function (d) {\r\n            //the new width\r\n            var newValue = Math.max(d3.mouse(this.parentNode)[0], 2);\r\n            d.setWidth(newValue);\r\n            d3.event.sourceEvent.stopPropagation();\r\n            d3.event.sourceEvent.preventDefault();\r\n        })\r\n            .on('dragend', function (d) {\r\n            d3.select(this).classed('dragging', false);\r\n            d3.event.sourceEvent.stopPropagation();\r\n            d3.event.sourceEvent.preventDefault();\r\n        });\r\n        this.dropHandler = utils.dropAble(['application/caleydo-lineup-column-ref', 'application/caleydo-lineup-column'], function (data, d, copy) {\r\n            var col = null;\r\n            if ('application/caleydo-lineup-column-ref' in data) {\r\n                var id = data['application/caleydo-lineup-column-ref'];\r\n                col = _this.data.find(id);\r\n                if (copy) {\r\n                    col = _this.data.clone(col);\r\n                }\r\n                else {\r\n                    col.removeMe();\r\n                }\r\n            }\r\n            else {\r\n                var desc = JSON.parse(data['application/caleydo-lineup-column']);\r\n                col = _this.data.create(_this.data.fromDescRef(desc));\r\n            }\r\n            if (d instanceof model.Column) {\r\n                return d.insertAfterMe(col) != null;\r\n            }\r\n            else {\r\n                var r = _this.data.getLastRanking();\r\n                return r.push(col) !== null;\r\n            }\r\n        });\r\n        utils.merge(this.options, options);\r\n        this.$node = d3.select(parent).append('div').classed('lu-header', true);\r\n        this.$node.append('div').classed('drop', true).call(this.dropHandler);\r\n        this.changeDataStorage(data);\r\n    }\r\n    HeaderRenderer.prototype.changeDataStorage = function (data) {\r\n        var _this = this;\r\n        if (this.data) {\r\n            this.data.on(['dirtyHeader.headerRenderer', 'orderChanged.headerRenderer', 'selectionChanged.headerRenderer'], null);\r\n        }\r\n        this.data = data;\r\n        data.on('dirtyHeader.headerRenderer', utils.delayedCall(this.update.bind(this), 1));\r\n        if (this.options.histograms) {\r\n            data.on('orderChanged.headerRenderer', function () {\r\n                _this.updateHist();\r\n                _this.update();\r\n            });\r\n            data.on('selectionChanged.headerRenderer', utils.delayedCall(this.drawSelection.bind(this), 1));\r\n        }\r\n    };\r\n    Object.defineProperty(HeaderRenderer.prototype, \"sharedHistCache\", {\r\n        get: function () {\r\n            return this.histCache;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * defines the current header height in pixel\r\n     * @returns {number}\r\n     */\r\n    HeaderRenderer.prototype.currentHeight = function () {\r\n        return parseInt(this.$node.style('height'), 10);\r\n    };\r\n    HeaderRenderer.prototype.updateHist = function () {\r\n        var _this = this;\r\n        var rankings = this.data.getRankings();\r\n        rankings.forEach(function (ranking) {\r\n            var order = ranking.getOrder();\r\n            var cols = ranking.flatColumns;\r\n            var histo = order == null ? null : _this.data.stats(order);\r\n            cols.filter(function (d) { return d instanceof model.NumberColumn && !d.isHidden(); }).forEach(function (col) {\r\n                _this.histCache.set(col.id, histo === null ? null : histo.stats(col));\r\n            });\r\n            cols.filter(function (d) { return model.isCategoricalColumn(d) && !d.isHidden(); }).forEach(function (col) {\r\n                _this.histCache.set(col.id, histo === null ? null : histo.hist(col));\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * update the selection in the histograms\r\n     */\r\n    HeaderRenderer.prototype.drawSelection = function () {\r\n        var _this = this;\r\n        if (!this.options.histograms) {\r\n            return;\r\n        }\r\n        //highlight the bins in the histograms\r\n        var node = this.$node.node();\r\n        [].slice.call(node.querySelectorAll('div.bar')).forEach(function (d) { return d.classList.remove('selected'); });\r\n        var indices = this.data.getSelection();\r\n        if (indices.length <= 0) {\r\n            return;\r\n        }\r\n        this.data.view(indices).then(function (data) {\r\n            //get the data\r\n            var rankings = _this.data.getRankings();\r\n            rankings.forEach(function (ranking) {\r\n                var cols = ranking.flatColumns;\r\n                //find all number histograms\r\n                cols.filter(function (d) { return d instanceof model.NumberColumn && !d.isHidden(); }).forEach(function (col) {\r\n                    var bars = [].slice.call(node.querySelectorAll(\"div.header[data-id=\\\"\" + col.id + \"\\\"] div.bar\"));\r\n                    data.forEach(function (d) {\r\n                        var v = col.getValue(d);\r\n                        //choose the right bin\r\n                        for (var i = 1; i < bars.length; ++i) {\r\n                            var bar = bars[i];\r\n                            if (bar.dataset.x > v) {\r\n                                bars[i - 1].classList.add('selected');\r\n                                break;\r\n                            }\r\n                            else if (i === bars.length - 1) {\r\n                                bar.classList.add('selected');\r\n                                break;\r\n                            }\r\n                        }\r\n                    });\r\n                });\r\n                cols.filter(function (d) { return model.isCategoricalColumn(d) && !d.isHidden(); }).forEach(function (col) {\r\n                    var header = node.querySelector(\"div.header[data-id=\\\"\" + col.id + \"\\\"]\");\r\n                    data.forEach(function (d) {\r\n                        var cats = col.getCategories(d);\r\n                        (cats || []).forEach(function (cat) {\r\n                            header.querySelector(\"div.bar[data-cat=\\\"\" + cat + \"\\\"]\").classList.add('selected');\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    HeaderRenderer.prototype.renderRankingButtons = function (rankings, rankingsOffsets) {\r\n        var $rankingbuttons = this.$node.selectAll('div.rankingbuttons').data(rankings);\r\n        $rankingbuttons.enter().append('div')\r\n            .classed('rankingbuttons', true)\r\n            .call(this.options.rankingButtons);\r\n        $rankingbuttons.style('left', function (d, i) { return rankingsOffsets[i] + 'px'; });\r\n        $rankingbuttons.exit().remove();\r\n    };\r\n    HeaderRenderer.prototype.update = function () {\r\n        var _this = this;\r\n        var that = this;\r\n        var rankings = this.data.getRankings();\r\n        var shifts = [], offset = 0, rankingOffsets = [];\r\n        rankings.forEach(function (ranking) {\r\n            offset += ranking.flatten(shifts, offset, 1, _this.options.columnPadding) + _this.options.slopeWidth;\r\n            rankingOffsets.push(offset - _this.options.slopeWidth);\r\n        });\r\n        //real width\r\n        offset -= this.options.slopeWidth;\r\n        var columns = shifts.map(function (d) { return d.col; });\r\n        //update all if needed\r\n        if (this.options.histograms && this.histCache.empty() && rankings.length > 0) {\r\n            this.updateHist();\r\n        }\r\n        this.renderColumns(columns, shifts);\r\n        if (this.options.rankingButtons !== dummyRankingButtonHook) {\r\n            this.renderRankingButtons(rankings, rankingOffsets);\r\n        }\r\n        function countStacked(c) {\r\n            if (c instanceof model.StackColumn && !c.getCollapsed() && !c.getCompressed()) {\r\n                return 1 + Math.max.apply(Math, c.children.map(countStacked));\r\n            }\r\n            return 1;\r\n        }\r\n        var levels = Math.max.apply(Math, columns.map(countStacked));\r\n        var height = (this.options.histograms ? this.options.headerHistogramHeight : this.options.headerHeight) + (levels - 1) * this.options.headerHeight;\r\n        if (this.options.autoRotateLabels) {\r\n            //check if we have overflows\r\n            var rotatedAny = false;\r\n            this.$node.selectAll('div.header')\r\n                .style('height', height + 'px').select('div.lu-label').each(function (d) {\r\n                var w = this.querySelector('span.lu-label').offsetWidth;\r\n                var actWidth = d.getWidth();\r\n                if (w > (actWidth + 30)) {\r\n                    d3.select(this).style('transform', \"rotate(\" + that.options.rotationDegree + \"deg)\");\r\n                    rotatedAny = true;\r\n                }\r\n                else {\r\n                    d3.select(this).style('transform', null);\r\n                }\r\n            });\r\n            this.$node.selectAll('div.header').style('margin-top', rotatedAny ? this.options.rotationHeight + 'px' : null);\r\n            height += rotatedAny ? this.options.rotationHeight : 0;\r\n        }\r\n        this.$node.style('height', height + 'px');\r\n    };\r\n    HeaderRenderer.prototype.createToolbar = function ($node) {\r\n        var _this = this;\r\n        var filterDialogs = this.options.filterDialogs, provider = this.data, that = this;\r\n        var $regular = $node.filter(function (d) { return !(d instanceof model.Ranking); }), $stacked = $node.filter(function (d) { return d instanceof model.StackColumn; });\r\n        //edit weights\r\n        $stacked.append('i').attr('class', 'fa fa-tasks').attr('title', 'Edit Weights').on('click', function (d) {\r\n            dialogs.openEditWeightsDialog(d, d3.select(this.parentNode.parentNode));\r\n            d3.event.stopPropagation();\r\n        });\r\n        //rename\r\n        $regular.append('i').attr('class', 'fa fa-pencil-square-o').attr('title', 'Rename').on('click', function (d) {\r\n            dialogs.openRenameDialog(d, d3.select(this.parentNode.parentNode));\r\n            d3.event.stopPropagation();\r\n        });\r\n        //clone\r\n        $regular.append('i').attr('class', 'fa fa-code-fork').attr('title', 'Generate Snapshot').on('click', function (d) {\r\n            provider.takeSnapshot(d);\r\n            d3.event.stopPropagation();\r\n        });\r\n        //edit link\r\n        $node.filter(function (d) { return d instanceof model.LinkColumn; }).append('i').attr('class', 'fa fa-external-link').attr('title', 'Edit Link Pattern').on('click', function (d) {\r\n            dialogs.openEditLinkDialog(d, d3.select(this.parentNode.parentNode), [].concat(d.desc.templates || [], that.options.linkTemplates));\r\n            d3.event.stopPropagation();\r\n        });\r\n        //edit script\r\n        $node.filter(function (d) { return d instanceof model.ScriptColumn; }).append('i').attr('class', 'fa fa-gears').attr('title', 'Edit Combine Script').on('click', function (d) {\r\n            dialogs.openEditScriptDialog(d, d3.select(this.parentNode.parentNode));\r\n            d3.event.stopPropagation();\r\n        });\r\n        //filter\r\n        $node.filter(function (d) { return filterDialogs.hasOwnProperty(d.desc.type); }).append('i').attr('class', 'fa fa-filter').attr('title', 'Filter').on('click', function (d) {\r\n            filterDialogs[d.desc.type](d, d3.select(this.parentNode.parentNode), provider);\r\n            d3.event.stopPropagation();\r\n        });\r\n        //search\r\n        $node.filter(function (d) { return _this.options.searchAble(d); }).append('i').attr('class', 'fa fa-search').attr('title', 'Search').on('click', function (d) {\r\n            dialogs.openSearchDialog(d, d3.select(this.parentNode.parentNode), provider);\r\n            d3.event.stopPropagation();\r\n        });\r\n        //collapse\r\n        $regular.append('i')\r\n            .attr('class', 'fa')\r\n            .classed('fa-toggle-left', function (d) { return !d.getCompressed(); })\r\n            .classed('fa-toggle-right', function (d) { return d.getCompressed(); })\r\n            .attr('title', '(Un)Collapse')\r\n            .on('click', function (d) {\r\n            d.setCompressed(!d.getCompressed());\r\n            d3.select(this)\r\n                .classed('fa-toggle-left', !d.getCompressed())\r\n                .classed('fa-toggle-right', d.getCompressed());\r\n            d3.event.stopPropagation();\r\n        });\r\n        //compress\r\n        $stacked.append('i')\r\n            .attr('class', 'fa')\r\n            .classed('fa-compress', function (d) { return !d.getCollapsed(); })\r\n            .classed('fa-expand', function (d) { return d.getCollapsed(); })\r\n            .attr('title', 'Compress/Expand')\r\n            .on('click', function (d) {\r\n            d.setCollapsed(!d.getCollapsed());\r\n            d3.select(this)\r\n                .classed('fa-compress', !d.getCollapsed())\r\n                .classed('fa-expand', d.getCollapsed());\r\n            d3.event.stopPropagation();\r\n        });\r\n        //remove\r\n        $node.append('i').attr('class', 'fa fa-times').attr('title', 'Hide').on('click', function (d) {\r\n            if (d instanceof model.RankColumn) {\r\n                provider.removeRanking(d.findMyRanker());\r\n                if (provider.getRankings().length === 0) {\r\n                    provider.pushRanking();\r\n                }\r\n            }\r\n            else {\r\n                d.removeMe();\r\n            }\r\n            d3.event.stopPropagation();\r\n        });\r\n    };\r\n    HeaderRenderer.prototype.updateFreeze = function (left) {\r\n        var numColumns = this.options.freezeCols;\r\n        this.$node.selectAll('div.header')\r\n            .style('z-index', function (d, i) { return i < numColumns ? 1 : null; })\r\n            .style('transform', function (d, i) { return i < numColumns ? \"translate(\" + left + \"px,0)\" : null; });\r\n    };\r\n    HeaderRenderer.prototype.renderColumns = function (columns, shifts, $base, clazz) {\r\n        var _this = this;\r\n        if ($base === void 0) { $base = this.$node; }\r\n        if (clazz === void 0) { clazz = 'header'; }\r\n        var $headers = $base.selectAll('div.' + clazz).data(columns, function (d) { return d.id; });\r\n        var $headers_enter = $headers.enter().append('div').attr({\r\n            'class': clazz\r\n        })\r\n            .on('click', function (d) {\r\n            if (_this.options.manipulative && !d3.event.defaultPrevented && d3.event.currentTarget === d3.event.target) {\r\n                d.toggleMySorting();\r\n            }\r\n        });\r\n        var $header_enter_div = $headers_enter.append('div').classed('lu-label', true)\r\n            .on('click', function (d) {\r\n            if (_this.options.manipulative && !d3.event.defaultPrevented) {\r\n                d.toggleMySorting();\r\n            }\r\n        })\r\n            .on('dragstart', function (d) {\r\n            var e = d3.event;\r\n            e.dataTransfer.effectAllowed = 'copyMove'; //none, copy, copyLink, copyMove, link, linkMove, move, all\r\n            e.dataTransfer.setData('text/plain', d.label);\r\n            e.dataTransfer.setData('application/caleydo-lineup-column-ref', d.id);\r\n            var ref = JSON.stringify(_this.data.toDescRef(d.desc));\r\n            e.dataTransfer.setData('application/caleydo-lineup-column', ref);\r\n            if (model.isNumberColumn(d)) {\r\n                e.dataTransfer.setData('application/caleydo-lineup-column-number', ref);\r\n                e.dataTransfer.setData('application/caleydo-lineup-column-number-ref', d.id);\r\n            }\r\n        });\r\n        $header_enter_div.append('i').attr('class', 'fa fa sort_indicator');\r\n        $header_enter_div.append('span').classed('lu-label', true).attr({\r\n            'draggable': this.options.manipulative\r\n        });\r\n        if (this.options.manipulative) {\r\n            $headers_enter.append('div').classed('handle', true)\r\n                .call(this.dragHandler)\r\n                .style('width', this.options.columnPadding + 'px')\r\n                .call(this.dropHandler);\r\n            $headers_enter.append('div').classed('toolbar', true).call(this.createToolbar.bind(this));\r\n        }\r\n        if (this.options.histograms) {\r\n            $headers_enter.append('div').classed('histogram', true);\r\n        }\r\n        $headers.style({\r\n            width: function (d, i) { return (shifts[i].width + _this.options.columnPadding) + 'px'; },\r\n            left: function (d, i) { return shifts[i].offset + 'px'; },\r\n            'background-color': function (d) { return d.color; }\r\n        });\r\n        $headers.attr({\r\n            'class': function (d) { return (clazz + \" \" + (d.cssClass || '') + \" \" + (d.getCompressed() ? 'compressed' : '') + \" \" + d.headerCssClass + \" \" + (_this.options.autoRotateLabels ? 'rotateable' : '') + \" \" + (d.isFiltered() ? 'filtered' : '')); },\r\n            title: function (d) { return d.label; },\r\n            'data-id': function (d) { return d.id; },\r\n        });\r\n        $headers.select('i.sort_indicator').attr('class', function (d) {\r\n            var r = d.findMyRanker();\r\n            if (r && r.getSortCriteria().col === d) {\r\n                return 'sort_indicator fa fa-sort-' + (r.getSortCriteria().asc ? 'asc' : 'desc');\r\n            }\r\n            return 'sort_indicator fa';\r\n        });\r\n        $headers.select('span.lu-label').text(function (d) { return d.label; });\r\n        var that = this;\r\n        $headers.filter(function (d) { return d instanceof model.StackColumn; }).each(function (col) {\r\n            if (col.getCollapsed() || col.getCompressed()) {\r\n                d3.select(this).selectAll('div.' + clazz + '_i').remove();\r\n            }\r\n            else {\r\n                var s_shifts = [];\r\n                col.flatten(s_shifts, 0, 1, that.options.columnPadding);\r\n                var s_columns = s_shifts.map(function (d) { return d.col; });\r\n                that.renderColumns(s_columns, s_shifts, d3.select(this), clazz + (clazz.substr(clazz.length - 2) !== '_i' ? '_i' : ''));\r\n            }\r\n        }).select('div.lu-label').call(utils.dropAble(['application/caleydo-lineup-column-number-ref', 'application/caleydo-lineup-column-number'], function (data, d, copy) {\r\n            var col = null;\r\n            if ('application/caleydo-lineup-column-number-ref' in data) {\r\n                var id = data['application/caleydo-lineup-column-number-ref'];\r\n                col = _this.data.find(id);\r\n                if (copy) {\r\n                    col = _this.data.clone(col);\r\n                }\r\n                else if (col) {\r\n                    col.removeMe();\r\n                }\r\n            }\r\n            else {\r\n                var desc = JSON.parse(data['application/caleydo-lineup-column-number']);\r\n                col = _this.data.create(_this.data.fromDescRef(desc));\r\n            }\r\n            return d.push(col) != null;\r\n        }));\r\n        if (this.options.histograms) {\r\n            $headers.filter(function (d) { return model.isCategoricalColumn(d); }).each(function (col) {\r\n                var $this = d3.select(this).select('div.histogram');\r\n                var hist = that.histCache.get(col.id);\r\n                if (hist) {\r\n                    hist.then(function (stats) {\r\n                        var $bars = $this.selectAll('div.bar').data(stats.hist);\r\n                        $bars.enter().append('div').classed('bar', true);\r\n                        var sx = d3.scale.ordinal().domain(col.categories).rangeBands([0, 100], 0.1);\r\n                        var sy = d3.scale.linear().domain([0, stats.maxBin]).range([0, 100]);\r\n                        $bars.style({\r\n                            left: function (d) { return sx(d.cat) + '%'; },\r\n                            width: function (d) { return sx.rangeBand() + '%'; },\r\n                            top: function (d) { return (100 - sy(d.y)) + '%'; },\r\n                            height: function (d) { return sy(d.y) + '%'; },\r\n                            'background-color': function (d) { return col.colorOf(d.cat); }\r\n                        }).attr({\r\n                            title: function (d) { return (d.cat + \": \" + d.y); },\r\n                            'data-cat': function (d) { return d.cat; }\r\n                        });\r\n                        $bars.exit().remove();\r\n                    });\r\n                }\r\n            });\r\n            $headers.filter(function (d) { return d instanceof model.NumberColumn; }).each(function (col) {\r\n                var $this = d3.select(this).select('div.histogram');\r\n                var hist = that.histCache.get(col.id);\r\n                if (hist) {\r\n                    hist.then(function (stats) {\r\n                        var $bars = $this.selectAll('div.bar').data(stats.hist);\r\n                        $bars.enter().append('div').classed('bar', true);\r\n                        var sx = d3.scale.ordinal().domain(d3.range(stats.hist.length).map(String)).rangeBands([0, 100], 0.1);\r\n                        var sy = d3.scale.linear().domain([0, stats.maxBin]).range([0, 100]);\r\n                        $bars.style({\r\n                            left: function (d, i) { return sx(String(i)) + '%'; },\r\n                            width: function (d, i) { return sx.rangeBand() + '%'; },\r\n                            top: function (d) { return (100 - sy(d.y)) + '%'; },\r\n                            height: function (d) { return sy(d.y) + '%'; }\r\n                        }).attr({\r\n                            title: function (d, i) { return (\"Bin \" + i + \": \" + d.y); },\r\n                            'data-x': function (d) { return d.x; }\r\n                        });\r\n                        $bars.exit().remove();\r\n                        var $mean = $this.select('div.mean');\r\n                        if ($mean.empty()) {\r\n                            $mean = $this.append('div').classed('mean', true);\r\n                        }\r\n                        $mean.style('left', (stats.mean * 100) + '%');\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        $headers.exit().remove();\r\n    };\r\n    return HeaderRenderer;\r\n}());\r\nexports.HeaderRenderer = HeaderRenderer;\r\nvar BodyRenderer = (function (_super) {\r\n    __extends(BodyRenderer, _super);\r\n    function BodyRenderer(data, parent, slicer, options) {\r\n        if (options === void 0) { options = {}; }\r\n        _super.call(this);\r\n        this.data = data;\r\n        this.slicer = slicer;\r\n        this.options = {\r\n            rowHeight: 20,\r\n            rowPadding: 1,\r\n            rowBarPadding: 1,\r\n            idPrefix: '',\r\n            slopeWidth: 150,\r\n            columnPadding: 5,\r\n            stacked: true,\r\n            animation: false,\r\n            animationDuration: 1000,\r\n            renderers: renderer.renderers(),\r\n            meanLine: false,\r\n            actions: [],\r\n            freezeCols: 0\r\n        };\r\n        this.currentFreezeLeft = 0;\r\n        this.histCache = d3.map();\r\n        //merge options\r\n        utils.merge(this.options, options);\r\n        this.$node = d3.select(parent).append('svg').classed('lu-body', true);\r\n        this.changeDataStorage(data);\r\n    }\r\n    BodyRenderer.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['hoverChanged', 'renderFinished']);\r\n    };\r\n    Object.defineProperty(BodyRenderer.prototype, \"node\", {\r\n        get: function () {\r\n            return this.$node.node();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BodyRenderer.prototype.setOption = function (key, value) {\r\n        this.options[key] = value;\r\n    };\r\n    BodyRenderer.prototype.changeDataStorage = function (data) {\r\n        if (this.data) {\r\n            this.data.on(['dirtyValues.bodyRenderer', 'selectionChanged.bodyRenderer'], null);\r\n        }\r\n        this.data = data;\r\n        data.on('dirtyValues.bodyRenderer', utils.delayedCall(this.update.bind(this), 1));\r\n        data.on('selectionChanged.bodyRenderer', utils.delayedCall(this.drawSelection.bind(this), 1));\r\n    };\r\n    BodyRenderer.prototype.createContext = function (index_shift) {\r\n        var options = this.options;\r\n        return {\r\n            rowKey: this.options.animation ? this.data.rowKey : undefined,\r\n            cellY: function (index) {\r\n                return (index + index_shift) * (options.rowHeight);\r\n            },\r\n            cellPrevY: function (index) {\r\n                return (index + index_shift) * (options.rowHeight);\r\n            },\r\n            cellX: function (index) {\r\n                return 0;\r\n            },\r\n            rowHeight: function (index) {\r\n                return options.rowHeight * (1 - options.rowPadding);\r\n            },\r\n            renderer: function (col) {\r\n                if (col.getCompressed() && model.isNumberColumn(col)) {\r\n                    return options.renderers.heatmap;\r\n                }\r\n                if (col instanceof model.StackColumn && col.getCollapsed()) {\r\n                    return options.renderers.number;\r\n                }\r\n                var l = options.renderers[col.desc.type];\r\n                return l || renderer.defaultRenderer();\r\n            },\r\n            render: function (col, $this, data, context) {\r\n                if (context === void 0) { context = this; }\r\n                //if renderers change delete old stuff\r\n                var tthis = ($this.node());\r\n                var old_renderer = tthis.__renderer__;\r\n                var act_renderer = this.renderer(col);\r\n                if (old_renderer !== act_renderer) {\r\n                    $this.selectAll('*').remove();\r\n                    tthis.__renderer__ = act_renderer;\r\n                }\r\n                act_renderer.render($this, col, data, context);\r\n            },\r\n            renderCanvas: function (col, ctx, data, context) {\r\n                if (context === void 0) { context = this; }\r\n                //dummy impl\r\n            },\r\n            showStacked: function (col) {\r\n                return options.stacked;\r\n            },\r\n            idPrefix: options.idPrefix,\r\n            animated: function ($sel) { return options.animation ? $sel.transition().duration(options.animationDuration) : $sel; },\r\n            //show mean line if option is enabled and top level\r\n            showMeanLine: function (col) { return options.meanLine && model.isNumberColumn(col) && !col.getCompressed() && col.parent instanceof model.Ranking; },\r\n            option: function (key, default_) { return (key in options) ? options[key] : default_; }\r\n        };\r\n    };\r\n    BodyRenderer.prototype.updateClipPathsImpl = function (r, context, height) {\r\n        var $base = this.$node.select('defs.body');\r\n        if ($base.empty()) {\r\n            $base = this.$node.append('defs').classed('body', true);\r\n        }\r\n        //generate clip paths for the text columns to avoid text overflow\r\n        //see http://stackoverflow.com/questions/L742812/cannot-select-svg-foreignobject-element-in-d3\r\n        //there is a bug in webkit which present camelCase selectors\r\n        var textClipPath = $base.selectAll(function () {\r\n            return this.getElementsByTagName('clipPath');\r\n        }).data(r, function (d) { return d.id; });\r\n        textClipPath.enter().append('clipPath')\r\n            .attr('id', function (d) { return context.idPrefix + 'clipCol' + d.id; })\r\n            .append('rect').attr({\r\n            y: 0\r\n        });\r\n        textClipPath.exit().remove();\r\n        textClipPath.select('rect')\r\n            .attr({\r\n            x: 0,\r\n            width: function (d) { return Math.max(d.getWidth() - 5, 0); },\r\n            height: height\r\n        });\r\n    };\r\n    BodyRenderer.prototype.updateClipPaths = function (rankings, context, height) {\r\n        var _this = this;\r\n        var shifts = [], offset = 0;\r\n        rankings.forEach(function (r) {\r\n            var w = r.flatten(shifts, offset, 2, _this.options.columnPadding);\r\n            offset += w + _this.options.slopeWidth;\r\n        });\r\n        this.updateClipPathsImpl(shifts.map(function (s) { return s.col; }), context, height);\r\n        var $elem = this.$node.select('clipPath#c' + context.idPrefix + 'Freeze');\r\n        if ($elem.empty()) {\r\n            $elem = this.$node.append('clipPath').attr('id', 'c' + context.idPrefix + 'Freeze').append('rect').attr({\r\n                y: 0,\r\n                width: 20000,\r\n                height: height\r\n            });\r\n        }\r\n        $elem.select('rect').attr({\r\n            height: height\r\n        });\r\n    };\r\n    BodyRenderer.prototype.renderRankings = function ($body, rankings, orders, shifts, context, height) {\r\n        var _this = this;\r\n        var that = this;\r\n        var dataPromises = orders.map(function (r) { return _this.data.view(r); });\r\n        var $rankings = $body.selectAll('g.ranking').data(rankings, function (d) { return d.id; });\r\n        var $rankings_enter = $rankings.enter().append('g').attr({\r\n            'class': 'ranking',\r\n            transform: function (d, i) { return 'translate(' + shifts[i].shift + ',0)'; }\r\n        });\r\n        $rankings_enter.append('g').attr('class', 'rows');\r\n        $rankings_enter.append('g').attr('class', 'cols');\r\n        context.animated($rankings).attr({\r\n            transform: function (d, i) { return 'translate(' + shifts[i].shift + ',0)'; }\r\n        });\r\n        var $cols = $rankings.select('g.cols').selectAll('g.uchild').data(function (d) { return d.children.filter(function (d) { return !d.isHidden(); }); }, function (d) { return d.id; });\r\n        $cols.enter().append('g').attr('class', 'uchild')\r\n            .append('g').attr({\r\n            'class': 'child',\r\n            transform: function (d, i, j) { return 'translate(' + shifts[j].shifts[i] + ',0)'; }\r\n        });\r\n        $cols.exit().remove();\r\n        $cols = $cols.select('g.child');\r\n        $cols.attr({\r\n            'data-index': function (d, i) { return i; }\r\n        });\r\n        context.animated($cols).attr({\r\n            transform: function (d, i, j) {\r\n                return 'translate(' + shifts[j].shifts[i] + ',0)';\r\n            }\r\n        }).each(function (d, i, j) {\r\n            var $col = d3.select(this);\r\n            dataPromises[j].then(function (data) {\r\n                context.render(d, $col, data, context);\r\n            });\r\n            if (context.showMeanLine(d)) {\r\n                var h = that.histCache.get(d.id);\r\n                if (h) {\r\n                    h.then(function (stats) {\r\n                        var $mean = $col.selectAll('line.meanline').data([stats.mean]);\r\n                        $mean.enter().append('line').attr('class', 'meanline');\r\n                        $mean.exit().remove();\r\n                        $mean.attr('x1', d.getWidth() * stats.mean)\r\n                            .attr('x2', d.getWidth() * stats.mean)\r\n                            .attr('y2', height);\r\n                    });\r\n                }\r\n            }\r\n            else {\r\n                $col.selectAll('line.meanline').remove();\r\n            }\r\n        });\r\n        // wait until all `context.render()` calls have finished\r\n        Promise.all(dataPromises).then(function (args) {\r\n            _this.fire('renderFinished');\r\n        });\r\n        function mouseOverRow($row, $cols, index, ranking, rankingIndex) {\r\n            $row.classed('hover', true);\r\n            var $value_cols = $row.select('g.values').selectAll('g.uchild').data(ranking.children.filter(function (d) { return !d.isHidden(); }), function (d) { return d.id; });\r\n            $value_cols.enter().append('g').attr({\r\n                'class': 'uchild'\r\n            }).append('g').classed('child', true);\r\n            $value_cols.select('g.child').attr({\r\n                transform: function (d, i) {\r\n                    return 'translate(' + shifts[rankingIndex].shifts[i] + ',0)';\r\n                }\r\n            }).each(function (d, i) {\r\n                var _this = this;\r\n                dataPromises[rankingIndex].then(function (data) {\r\n                    context.renderer(d).mouseEnter($cols.selectAll('g.child[data-index=\"' + i + '\"]'), d3.select(_this), d, data[index], index, context);\r\n                });\r\n            });\r\n            $value_cols.exit().remove();\r\n            //data.mouseOver(d, i);\r\n        }\r\n        function mouseLeaveRow($row, $cols, index, ranking, rankingIndex) {\r\n            $row.classed('hover', false);\r\n            $row.select('g.values').selectAll('g.uchild').each(function (d, i) {\r\n                var _this = this;\r\n                dataPromises[rankingIndex].then(function (data) {\r\n                    context.renderer(d).mouseLeave($cols.selectAll('g.child[data-index=\"' + i + '\"]'), d3.select(_this).select('g.child'), d, data[index], index, context);\r\n                });\r\n            }).remove();\r\n            //data.mouseLeave(d, i);\r\n        }\r\n        this.mouseOverItem = function (data_index, hover) {\r\n            if (hover === void 0) { hover = true; }\r\n            $rankings.each(function (ranking, rankingIndex) {\r\n                var $ranking = d3.select(this);\r\n                var $row = $ranking.selectAll('g.row[data-index=\"' + data_index + '\"]');\r\n                var $cols = $ranking.select('g.cols');\r\n                if (!$row.empty()) {\r\n                    var index = $row.datum().i;\r\n                    if (hover) {\r\n                        mouseOverRow($row, $cols, index, ranking, rankingIndex);\r\n                    }\r\n                    else {\r\n                        mouseLeaveRow($row, $cols, index, ranking, rankingIndex);\r\n                    }\r\n                }\r\n            });\r\n            //set clip path for frozen columns\r\n            that.updateFrozenRows();\r\n        };\r\n        var $rows = $rankings.select('g.rows').selectAll('g.row').data(function (d, i) { return orders[i].map(function (d, i) { return ({ d: d, i: i }); }); });\r\n        var $rows_enter = $rows.enter().append('g').attr({\r\n            'class': 'row'\r\n        });\r\n        $rows_enter.append('rect').attr({\r\n            'class': 'bg'\r\n        });\r\n        $rows_enter.append('g').attr({ 'class': 'values' });\r\n        $rows_enter.on('mouseenter', function (data_index) {\r\n            _this.mouseOver(data_index.d, true);\r\n        }).on('mouseleave', function (data_index) {\r\n            _this.mouseOver(data_index.d, false);\r\n        }).on('click', function (data_index) {\r\n            _this.select(data_index.d, d3.event.ctrlKey);\r\n        });\r\n        $rows.attr({\r\n            'data-index': function (d) { return d.d; }\r\n        }).classed('selected', function (d) { return _this.data.isSelected(d.d); });\r\n        $rows.select('rect').attr({\r\n            y: function (d) { return context.cellY(d.i); },\r\n            height: function (d) { return context.rowHeight(d.i); },\r\n            width: function (d, i, j) { return shifts[j].width; },\r\n            'class': function (d, i) { return 'bg ' + (i % 2 === 0 ? 'even' : 'odd'); }\r\n        });\r\n        $rows.exit().remove();\r\n        $rankings.exit().remove();\r\n    };\r\n    BodyRenderer.prototype.select = function (dataIndex, additional) {\r\n        if (additional === void 0) { additional = false; }\r\n        var selected = this.data.toggleSelection(dataIndex, additional);\r\n        this.$node.selectAll('g.row[data-index=\"' + dataIndex + '\"], line.slope[data-index=\"' + dataIndex + '\"]').classed('selected', selected);\r\n    };\r\n    BodyRenderer.prototype.hasAnySelectionColumn = function () {\r\n        return this.data.getRankings().some(function (r) { return r.children.some(function (c) { return c instanceof model.SelectionColumn && !c.isHidden(); }); });\r\n    };\r\n    BodyRenderer.prototype.drawSelection = function () {\r\n        if (this.hasAnySelectionColumn()) {\r\n            this.update();\r\n        }\r\n        var indices = this.data.getSelection();\r\n        if (indices.length === 0) {\r\n            this.$node.selectAll('g.row.selected, line.slope.selected').classed('selected', false);\r\n        }\r\n        else {\r\n            var s = d3.set(indices);\r\n            this.$node.selectAll('g.row').classed('selected', function (d) { return s.has(String(d.d)); });\r\n            this.$node.selectAll('line.slope').classed('selected', function (d) { return s.has(String(d.data_index)); });\r\n        }\r\n    };\r\n    BodyRenderer.prototype.mouseOver = function (dataIndex, hover) {\r\n        if (hover === void 0) { hover = true; }\r\n        this.fire('hoverChanged', hover ? dataIndex : -1);\r\n        this.mouseOverItem(dataIndex, hover);\r\n        //update the slope graph\r\n        this.$node.selectAll('line.slope[data-index=\"' + dataIndex + '\"]').classed('hover', hover);\r\n    };\r\n    BodyRenderer.prototype.renderSlopeGraphs = function ($body, rankings, orders, shifts, context) {\r\n        var _this = this;\r\n        var slopes = orders.slice(1).map(function (d, i) { return ({ left: orders[i], left_i: i, right: d, right_i: i + 1 }); });\r\n        var $slopes = $body.selectAll('g.slopegraph').data(slopes);\r\n        $slopes.enter().append('g').attr({\r\n            'class': 'slopegraph'\r\n        });\r\n        $slopes.attr({\r\n            transform: function (d, i) { return 'translate(' + (shifts[i + 1].shift - _this.options.slopeWidth) + ',0)'; }\r\n        });\r\n        var $lines = $slopes.selectAll('line.slope').data(function (d, i) {\r\n            var cache = {};\r\n            d.right.forEach(function (data_index, pos) {\r\n                cache[data_index] = pos;\r\n            });\r\n            return d.left.map(function (data_index, pos) { return ({\r\n                data_index: data_index,\r\n                lpos: pos,\r\n                rpos: cache[data_index]\r\n            }); }).filter(function (d) { return d.rpos != null; });\r\n        });\r\n        $lines.enter().append('line').attr({\r\n            'class': 'slope',\r\n            x2: this.options.slopeWidth\r\n        }).on('mouseenter', function (d) {\r\n            _this.mouseOver(d.data_index, true);\r\n        }).on('mouseleave', function (d) {\r\n            _this.mouseOver(d.data_index, false);\r\n        });\r\n        $lines.attr({\r\n            'data-index': function (d) { return d.data_index; }\r\n        });\r\n        $lines.attr({\r\n            y1: function (d) {\r\n                return context.rowHeight(d.lpos) * 0.5 + context.cellY(d.lpos);\r\n            },\r\n            y2: function (d) {\r\n                return context.rowHeight(d.rpos) * 0.5 + context.cellY(d.rpos);\r\n            }\r\n        });\r\n        $lines.exit().remove();\r\n        $slopes.exit().remove();\r\n    };\r\n    BodyRenderer.prototype.updateFreeze = function (left) {\r\n        var _this = this;\r\n        var numColumns = this.options.freezeCols;\r\n        var $cols = this.$node.select('g.cols');\r\n        var $n = this.$node.select('#c' + this.options.idPrefix + 'Freeze').select('rect');\r\n        var $col = $cols.select(\"g.child[data-index=\\\"\" + numColumns + \"\\\"]\");\r\n        if ($col.empty()) {\r\n            //use the last one\r\n            $col = $cols.select('g.child:last-of-type');\r\n        }\r\n        var x = d3.transform($col.attr('transform') || '').translate[0];\r\n        $n.attr('x', left + x);\r\n        $cols.selectAll('g.uchild').attr({\r\n            'clip-path': function (d, i) { return i < numColumns ? null : 'url(#c' + _this.options.idPrefix + 'Freeze)'; },\r\n            'transform': function (d, i) { return i < numColumns ? 'translate(' + left + ',0)' : null; }\r\n        });\r\n        this.currentFreezeLeft = left;\r\n        //update all mouse over rows and selected rows with\r\n        this.updateFrozenRows();\r\n    };\r\n    BodyRenderer.prototype.updateFrozenRows = function () {\r\n        var _this = this;\r\n        var numColumns = this.options.freezeCols;\r\n        if (numColumns <= 0) {\r\n            return;\r\n        }\r\n        var left = this.currentFreezeLeft;\r\n        var $rows = this.$node.select('g.rows');\r\n        $rows.select('g.row.hover g.values').selectAll('g.uchild').attr({\r\n            'clip-path': function (d, i) { return i < numColumns ? null : 'url(#c' + _this.options.idPrefix + 'Freeze)'; },\r\n            'transform': function (d, i) { return i < numColumns ? 'translate(' + left + ',0)' : null; }\r\n        });\r\n    };\r\n    /**\r\n     * render the body\r\n     */\r\n    BodyRenderer.prototype.update = function () {\r\n        var _this = this;\r\n        var rankings = this.data.getRankings();\r\n        var maxElems = d3.max(rankings, function (d) { return d.getOrder().length; }) || 0;\r\n        var height = this.options.rowHeight * maxElems;\r\n        var visibleRange = this.slicer(0, maxElems, function (i) { return i * _this.options.rowHeight; });\r\n        var orderSlicer = function (order) {\r\n            if (visibleRange.from === 0 && order.length <= visibleRange.to) {\r\n                return order;\r\n            }\r\n            return order.slice(visibleRange.from, Math.min(order.length, visibleRange.to));\r\n        };\r\n        var orders = rankings.map(function (r) { return orderSlicer(r.getOrder()); });\r\n        var context = this.createContext(visibleRange.from);\r\n        //compute offsets and shifts for individual rankings and columns inside the rankings\r\n        var offset = 0, shifts = rankings.map(function (d, i) {\r\n            var r = offset;\r\n            offset += _this.options.slopeWidth;\r\n            var o2 = 0, shift2 = d.children.filter(function (d) { return !d.isHidden(); }).map(function (o) {\r\n                var r = o2;\r\n                o2 += (o.getCompressed() ? model.Column.COMPRESSED_WIDTH : o.getWidth()) + _this.options.columnPadding;\r\n                if (o instanceof model.StackColumn && !o.getCollapsed() && !o.getCompressed()) {\r\n                    o2 += _this.options.columnPadding * (o.length - 1);\r\n                }\r\n                return r;\r\n            });\r\n            offset += o2;\r\n            return {\r\n                shift: r,\r\n                shifts: shift2,\r\n                width: o2\r\n            };\r\n        });\r\n        this.$node.attr({\r\n            width: Math.max(0, offset - this.options.slopeWidth),\r\n            height: height\r\n        });\r\n        this.updateClipPaths(rankings, context, height);\r\n        var $body = this.$node.select('g.body');\r\n        if ($body.empty()) {\r\n            $body = this.$node.append('g').classed('body', true);\r\n        }\r\n        this.renderRankings($body, rankings, orders, shifts, context, height);\r\n        this.renderSlopeGraphs($body, rankings, orders, shifts, context);\r\n    };\r\n    return BodyRenderer;\r\n}(utils.AEventDispatcher));\r\nexports.BodyRenderer = BodyRenderer;\r\nvar BodyCanvasRenderer = (function (_super) {\r\n    __extends(BodyCanvasRenderer, _super);\r\n    function BodyCanvasRenderer(data, parent, slicer, options) {\r\n        if (options === void 0) { options = {}; }\r\n        _super.call(this);\r\n        this.data = data;\r\n        this.slicer = slicer;\r\n        this.options = {\r\n            rowHeight: 20,\r\n            rowPadding: 1,\r\n            rowBarPadding: 1,\r\n            idPrefix: '',\r\n            slopeWidth: 150,\r\n            columnPadding: 5,\r\n            stacked: true,\r\n            renderers: renderer.renderers(),\r\n            meanLine: false,\r\n            freezeCols: 0\r\n        };\r\n        this.histCache = d3.map();\r\n        //merge options\r\n        utils.merge(this.options, options);\r\n        this.$node = d3.select(parent).append('canvas').classed('lu-canvas.body', true);\r\n        this.changeDataStorage(data);\r\n    }\r\n    BodyCanvasRenderer.prototype.createEventList = function () {\r\n        return _super.prototype.createEventList.call(this).concat(['hoverChanged']);\r\n    };\r\n    Object.defineProperty(BodyCanvasRenderer.prototype, \"node\", {\r\n        get: function () {\r\n            return this.$node.node();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    BodyCanvasRenderer.prototype.setOption = function (key, value) {\r\n        this.options[key] = value;\r\n    };\r\n    BodyCanvasRenderer.prototype.updateFreeze = function (left) {\r\n        //dummy impl\r\n    };\r\n    BodyCanvasRenderer.prototype.select = function (dataIndex, additional) {\r\n        if (additional === void 0) { additional = false; }\r\n        //dummy impl\r\n    };\r\n    BodyCanvasRenderer.prototype.changeDataStorage = function (data) {\r\n        if (this.data) {\r\n            this.data.on(['dirtyValues.bodyRenderer', 'selectionChanged.bodyRenderer'], null);\r\n        }\r\n        this.data = data;\r\n        data.on('dirtyValues.bodyRenderer', utils.delayedCall(this.update.bind(this), 1));\r\n        //data.on('selectionChanged.bodyRenderer', utils.delayedCall(this.drawSelection.bind(this), 1));\r\n    };\r\n    BodyCanvasRenderer.prototype.createContext = function (index_shift) {\r\n        var options = this.options;\r\n        return {\r\n            rowKey: undefined,\r\n            cellY: function (index) {\r\n                return (index + index_shift) * (options.rowHeight);\r\n            },\r\n            cellPrevY: function (index) {\r\n                return (index + index_shift) * (options.rowHeight);\r\n            },\r\n            cellX: function (index) {\r\n                return 0;\r\n            },\r\n            rowHeight: function (index) {\r\n                return options.rowHeight * (1 - options.rowPadding);\r\n            },\r\n            renderer: function (col) {\r\n                if (col.getCompressed() && model.isNumberColumn(col)) {\r\n                    return options.renderers.heatmap;\r\n                }\r\n                if (col instanceof model.StackColumn && col.getCollapsed()) {\r\n                    return options.renderers.number;\r\n                }\r\n                var l = options.renderers[col.desc.type];\r\n                return l || renderer.defaultRenderer();\r\n            },\r\n            render: function (col, $this, data, context) {\r\n                if (context === void 0) { context = this; }\r\n                //dummy impl\r\n            },\r\n            renderCanvas: function (col, ctx, data, context) {\r\n                if (context === void 0) { context = this; }\r\n                var act_renderer = this.renderer(col);\r\n                act_renderer.renderCanvas(ctx, col, data, context);\r\n            },\r\n            showStacked: function (col) {\r\n                return options.stacked;\r\n            },\r\n            idPrefix: options.idPrefix,\r\n            animated: function ($sel) { return $sel; },\r\n            //show mean line if option is enabled and top level\r\n            showMeanLine: function (col) { return options.meanLine && model.isNumberColumn(col) && !col.getCompressed() && col.parent instanceof model.Ranking; },\r\n            option: function (key, default_) { return (key in options) ? options[key] : default_; }\r\n        };\r\n    };\r\n    BodyCanvasRenderer.prototype.renderRankings = function (ctx, rankings, orders, shifts, context, height) {\r\n        var _this = this;\r\n        var dataPromises = orders.map(function (r) { return _this.data.view(r); });\r\n        ctx.save();\r\n        rankings.forEach(function (ranking, j) {\r\n            dataPromises[j].then(function (data) {\r\n                ctx.save();\r\n                ctx.translate(shifts[j].shift, 0);\r\n                ctx.save();\r\n                ctx.fillStyle = '#f7f7f7';\r\n                orders[j].forEach(function (order, i) {\r\n                    if (i % 2 === 0) {\r\n                        ctx.fillRect(0, context.cellY(i), shifts[j].width, context.rowHeight(i));\r\n                    }\r\n                });\r\n                ctx.restore();\r\n                ranking.children.forEach(function (child, i) {\r\n                    ctx.save();\r\n                    ctx.translate(shifts[j].shifts[i], 0);\r\n                    context.renderCanvas(child, ctx, data, context);\r\n                    ctx.restore();\r\n                });\r\n                ctx.restore();\r\n            });\r\n        });\r\n        ctx.restore();\r\n    };\r\n    BodyCanvasRenderer.prototype.renderSlopeGraphs = function (ctx, rankings, orders, shifts, context) {\r\n        var _this = this;\r\n        var slopes = orders.slice(1).map(function (d, i) { return ({ left: orders[i], left_i: i, right: d, right_i: i + 1 }); });\r\n        ctx.save();\r\n        ctx.fillStyle = 'darkgray';\r\n        slopes.forEach(function (slope, i) {\r\n            ctx.save();\r\n            ctx.translate(shifts[i + 1].shift - _this.options.slopeWidth, 0);\r\n            var cache = {};\r\n            slope.right.forEach(function (data_index, pos) {\r\n                cache[data_index] = pos;\r\n            });\r\n            var lines = slope.left.map(function (data_index, pos) { return ({\r\n                data_index: data_index,\r\n                lpos: pos,\r\n                rpos: cache[data_index]\r\n            }); }).filter(function (d) { return d.rpos != null; });\r\n            ctx.beginPath();\r\n            lines.forEach(function (line) {\r\n                ctx.moveTo(0, context.rowHeight(line.lpos) * 0.5 + context.cellY(line.lpos));\r\n                ctx.lineTo(_this.options.slopeWidth, context.rowHeight(line.rpos) * 0.5 + context.cellY(line.rpos));\r\n            });\r\n            ctx.stroke();\r\n            ctx.restore();\r\n        });\r\n        ctx.restore();\r\n    };\r\n    /**\r\n     * render the body\r\n     */\r\n    BodyCanvasRenderer.prototype.update = function () {\r\n        var _this = this;\r\n        var rankings = this.data.getRankings();\r\n        var maxElems = d3.max(rankings, function (d) { return d.getOrder().length; }) || 0;\r\n        var height = this.options.rowHeight * maxElems;\r\n        var visibleRange = this.slicer(0, maxElems, function (i) { return i * _this.options.rowHeight; });\r\n        var orderSlicer = function (order) {\r\n            if (visibleRange.from === 0 && order.length <= visibleRange.to) {\r\n                return order;\r\n            }\r\n            return order.slice(visibleRange.from, Math.min(order.length, visibleRange.to));\r\n        };\r\n        var orders = rankings.map(function (r) { return orderSlicer(r.getOrder()); });\r\n        var context = this.createContext(visibleRange.from);\r\n        //compute offsets and shifts for individual rankings and columns inside the rankings\r\n        var offset = 0, shifts = rankings.map(function (d, i) {\r\n            var r = offset;\r\n            offset += _this.options.slopeWidth;\r\n            var o2 = 0, shift2 = d.children.filter(function (d) { return !d.isHidden(); }).map(function (o) {\r\n                var r = o2;\r\n                o2 += (o.getCompressed() ? model.Column.COMPRESSED_WIDTH : o.getWidth()) + _this.options.columnPadding;\r\n                if (o instanceof model.StackColumn && !o.getCollapsed() && !o.getCompressed()) {\r\n                    o2 += _this.options.columnPadding * (o.length - 1);\r\n                }\r\n                return r;\r\n            });\r\n            offset += o2;\r\n            return {\r\n                shift: r,\r\n                shifts: shift2,\r\n                width: o2\r\n            };\r\n        });\r\n        this.$node.attr({\r\n            width: offset,\r\n            height: height\r\n        });\r\n        var ctx = this.$node.node().getContext('2d');\r\n        ctx.font = '10pt Times New Roman';\r\n        ctx.textBaseline = 'top';\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        this.renderRankings(ctx, rankings, orders, shifts, context, height);\r\n        this.renderSlopeGraphs(ctx, rankings, orders, shifts, context);\r\n    };\r\n    return BodyCanvasRenderer;\r\n}(utils.AEventDispatcher));\r\nexports.BodyCanvasRenderer = BodyCanvasRenderer;\r\n//# sourceMappingURL=ui.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ui.js\n ** module id = 9\n ** module chunks = 0\n **/","/**\r\n * a set of simple dialogs for LineUp\r\n *\r\n * Created by Samuel Gratzl on 24.08.2015.\r\n */\r\n\"use strict\";\r\nvar model = require('./model');\r\nvar utils = require('./utils');\r\nvar mappingeditor = require('./mappingeditor');\r\nfunction dialogForm(title, body, buttonsWithLabel) {\r\n    if (buttonsWithLabel === void 0) { buttonsWithLabel = false; }\r\n    return '<span style=\"font-weight: bold\">' + title + '</span>' +\r\n        '<form onsubmit=\"return false\">' +\r\n        body + '<button type = \"submit\" class=\"ok fa fa-check\" title=\"ok\"></button>' +\r\n        '<button type = \"reset\" class=\"cancel fa fa-times\" title=\"cancel\"></button>' +\r\n        '<button type = \"button\" class=\"reset fa fa-undo\" title=\"reset\"></button></form>';\r\n}\r\nexports.dialogForm = dialogForm;\r\n/**\r\n * creates a simple popup dialog under the given attachment\r\n * @param attachement\r\n * @param title\r\n * @param body\r\n * @returns {Selection<any>}\r\n */\r\nfunction makePopup(attachement, title, body) {\r\n    var pos = utils.offset(attachement.node());\r\n    var $popup = d3.select('body').append('div')\r\n        .attr({\r\n        'class': 'lu-popup2'\r\n    }).style({\r\n        left: pos.left + 'px',\r\n        top: pos.top + 'px'\r\n    }).html(dialogForm(title, body));\r\n    $popup.on('keydown', function () {\r\n        if (d3.event.which === 27) {\r\n            $popup.remove();\r\n        }\r\n    });\r\n    var auto = $popup.select('input[autofocus]').node();\r\n    if (auto) {\r\n        auto.focus();\r\n    }\r\n    return $popup;\r\n}\r\nexports.makePopup = makePopup;\r\n/**\r\n * opens a rename dialog for the given column\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openRenameDialog(column, $header) {\r\n    var popup = makePopup($header, 'Rename Column', \"<input type=\\\"text\\\" size=\\\"15\\\" value=\\\"\" + column.label + \"\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\"><br><input type=\\\"color\\\" size=\\\"15\\\" value=\\\"\" + column.color + \"\\\" required=\\\"required\\\"><br>\");\r\n    popup.select('.ok').on('click', function () {\r\n        var newValue = popup.select('input[type=\"text\"]').property('value');\r\n        var newColor = popup.select('input[type=\"color\"]').property('value');\r\n        column.setMetaData({ label: newValue, color: newColor });\r\n        popup.remove();\r\n    });\r\n    popup.select('.cancel').on('click', function () {\r\n        popup.remove();\r\n    });\r\n}\r\nexports.openRenameDialog = openRenameDialog;\r\n/**\r\n * opens a dialog for editing the link of a column\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openEditLinkDialog(column, $header, templates) {\r\n    if (templates === void 0) { templates = []; }\r\n    var t = \"<input type=\\\"text\\\" size=\\\"15\\\" value=\\\"\" + column.getLink() + \"\\\" required=\\\"required\\\" autofocus=\\\"autofocus\\\" \" + (templates.length > 0 ? 'list=\"lineupPatternList\"' : '') + \"><br>\";\r\n    if (templates.length > 0) {\r\n        t += '<datalist id=\"lineupPatternList\">' + templates.map(function (t) { return (\"<option value=\\\"\" + t + \"\\\">\"); }) + '</datalist>';\r\n    }\r\n    var popup = makePopup($header, 'Edit Link ($ as Placeholder)', t);\r\n    popup.select('.ok').on('click', function () {\r\n        var newValue = popup.select('input[type=\"text\"]').property('value');\r\n        column.setLink(newValue);\r\n        popup.remove();\r\n    });\r\n    popup.select('.cancel').on('click', function () {\r\n        popup.remove();\r\n    });\r\n}\r\nexports.openEditLinkDialog = openEditLinkDialog;\r\n/**\r\n * opens a search dialog for the given column\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n * @param provider the data provider for the actual search\r\n */\r\nfunction openSearchDialog(column, $header, provider) {\r\n    var popup = makePopup($header, 'Search', '<input type=\"text\" size=\"15\" value=\"\" required=\"required\" autofocus=\"autofocus\"><br><label><input type=\"checkbox\">RegExp</label><br>');\r\n    popup.select('input[type=\"text\"]').on('input', function () {\r\n        var search = d3.event.target.value;\r\n        if (search.length >= 3) {\r\n            var isRegex = popup.select('input[type=\"checkbox\"]').property('checked');\r\n            if (isRegex) {\r\n                search = new RegExp(search);\r\n            }\r\n            provider.searchSelect(search, column);\r\n        }\r\n    });\r\n    function updateImpl() {\r\n        var search = popup.select('input[type=\"text\"]').property('value');\r\n        var isRegex = popup.select('input[type=\"text\"]').property('checked');\r\n        if (search.length > 0) {\r\n            if (isRegex) {\r\n                search = new RegExp(search);\r\n            }\r\n            provider.searchSelect(search, column);\r\n        }\r\n        popup.remove();\r\n    }\r\n    popup.select('input[type=\"checkbox\"]').on('change', updateImpl);\r\n    popup.select('.ok').on('click', updateImpl);\r\n    popup.select('.cancel').on('click', function () {\r\n        popup.remove();\r\n    });\r\n}\r\nexports.openSearchDialog = openSearchDialog;\r\n/**\r\n * opens a dialog for editing the weights of a stack column\r\n * @param column the column to filter\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openEditWeightsDialog(column, $header) {\r\n    var weights = column.getWeights(), children = column.children.map(function (d, i) { return ({ col: d, weight: weights[i] * 100 }); });\r\n    //map weights to pixels\r\n    var scale = d3.scale.linear().domain([0, 100]).range([0, 120]);\r\n    var $popup = makePopup($header, 'Edit Weights', '<table></table>');\r\n    //show as a table with inputs and bars\r\n    var $rows = $popup.select('table').selectAll('tr').data(children);\r\n    var $rows_enter = $rows.enter().append('tr');\r\n    $rows_enter.append('td')\r\n        .append('input').attr({\r\n        type: 'number',\r\n        value: function (d) { return d.weight; },\r\n        min: 0,\r\n        max: 100,\r\n        size: 5\r\n    }).on('input', function (d) {\r\n        d.weight = +this.value;\r\n        redraw();\r\n    });\r\n    $rows_enter.append('td').append('div')\r\n        .attr('class', function (d) { return 'bar ' + d.col.cssClass; })\r\n        .style('background-color', function (d) { return d.col.color; });\r\n    $rows_enter.append('td').text(function (d) { return d.col.label; });\r\n    function redraw() {\r\n        $rows.select('.bar').transition().style('width', function (d) { return scale(d.weight) + 'px'; });\r\n    }\r\n    redraw();\r\n    $popup.select('.cancel').on('click', function () {\r\n        column.setWeights(weights);\r\n        $popup.remove();\r\n    });\r\n    $popup.select('.reset').on('click', function () {\r\n        children.forEach(function (d, i) { return d.weight = weights[i] * 100; });\r\n        $rows.select('input').property('value', function (d) { return d.weight; });\r\n        redraw();\r\n    });\r\n    $popup.select('.ok').on('click', function () {\r\n        column.setWeights(children.map(function (d) { return d.weight; }));\r\n        $popup.remove();\r\n    });\r\n}\r\nexports.openEditWeightsDialog = openEditWeightsDialog;\r\n/**\r\n * flags the header to be filtered\r\n * @param $header\r\n * @param filtered\r\n */\r\nfunction markFiltered($header, filtered) {\r\n    if (filtered === void 0) { filtered = false; }\r\n    $header.classed('filtered', filtered);\r\n}\r\n/**\r\n * opens a dialog for filtering a categorical column\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openCategoricalFilter(column, $header) {\r\n    var bak = column.getFilter() || [];\r\n    var popup = makePopup($header, 'Edit Filter', '<div class=\"selectionTable\"><table><thead><th class=\"selectAll\"></th><th>Category</th></thead><tbody></tbody></table></div>');\r\n    // list all data rows !\r\n    var trData = column.categories.map(function (d) {\r\n        return { d: d, isChecked: bak.length === 0 || bak.indexOf(d) >= 0 };\r\n    }).sort(function (a, b) {\r\n        if (a.d.toLowerCase() < b.d.toLowerCase()) {\r\n            return -1;\r\n        }\r\n        if (a.d.toLowerCase() > b.d.toLowerCase()) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    });\r\n    var trs = popup.select('tbody').selectAll('tr').data(trData);\r\n    trs.enter().append('tr');\r\n    trs.append('td').attr('class', 'checkmark');\r\n    trs.append('td').attr('class', 'datalabel').text(function (d) {\r\n        return d.d;\r\n    });\r\n    function redraw() {\r\n        var trs = popup.select('tbody').selectAll('tr').data(trData);\r\n        trs.select('.checkmark').html(function (d) { return '<i class=\"fa fa-' + ((d.isChecked) ? 'check-' : '') + 'square-o\"></i>'; });\r\n        trs.on('click', function (d) {\r\n            d.isChecked = !d.isChecked;\r\n            redraw();\r\n        });\r\n        trs.select('.datalabel').style('opacity', function (d) { return d.isChecked ? '1.0' : '.8'; });\r\n    }\r\n    redraw();\r\n    var isCheckedAll = true;\r\n    function redrawSelectAll() {\r\n        popup.select('.selectAll').html(function (d) { return '<i class=\"fa fa-' + ((isCheckedAll) ? 'check-' : '') + 'square-o\"></i>'; });\r\n        popup.select('thead').on('click', function (d) {\r\n            isCheckedAll = !isCheckedAll;\r\n            trData.map(function (row) {\r\n                row.isChecked = isCheckedAll;\r\n            });\r\n            redraw();\r\n            redrawSelectAll();\r\n        });\r\n    }\r\n    redrawSelectAll();\r\n    function updateData(filter) {\r\n        markFiltered($header, filter && filter.length > 0 && filter.length < column.categories.length);\r\n        column.setFilter(filter);\r\n    }\r\n    popup.select('.cancel').on('click', function () {\r\n        updateData(bak);\r\n        popup.remove();\r\n    });\r\n    popup.select('.reset').on('click', function () {\r\n        trData.forEach(function (d) { return d.isChecked = true; });\r\n        redraw();\r\n        updateData(null);\r\n    });\r\n    popup.select('.ok').on('click', function () {\r\n        var f = trData.filter(function (d) { return d.isChecked; }).map(function (d) { return d.d; });\r\n        if (f.length === column.categories.length) {\r\n            f = [];\r\n        }\r\n        updateData(f);\r\n        popup.remove();\r\n    });\r\n}\r\n/**\r\n * opens a dialog for filtering a string column\r\n * @param column the column to filter\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openStringFilter(column, $header) {\r\n    var bak = column.getFilter() || '';\r\n    var $popup = makePopup($header, 'Filter', \"<input type=\\\"text\\\" placeholder=\\\"containing...\\\" autofocus=\\\"true\\\" size=\\\"15\\\" value=\\\"\" + ((bak instanceof RegExp) ? bak.source : bak) + \"\\\" autofocus=\\\"autofocus\\\">\\n    <br><label><input type=\\\"checkbox\\\" \" + ((bak instanceof RegExp) ? 'checked=\"checked\"' : '') + \">RegExp</label>\\n    <br>\");\r\n    function updateData(filter) {\r\n        markFiltered($header, (filter && filter !== ''));\r\n        column.setFilter(filter);\r\n    }\r\n    function updateImpl(force) {\r\n        //get value\r\n        var search = $popup.select('input[type=\"text\"]').property('value');\r\n        if (search.length >= 3 || force) {\r\n            var isRegex = $popup.select('input[type=\"checkbox\"]').property('checked');\r\n            if (isRegex) {\r\n                search = new RegExp(search);\r\n            }\r\n            updateData(search);\r\n        }\r\n    }\r\n    $popup.select('input[type=\"checkbox\"]').on('change', updateImpl);\r\n    $popup.select('input[type=\"text\"]').on('input', updateImpl);\r\n    $popup.select('.cancel').on('click', function () {\r\n        $popup.select('input[type=\"text\"]').property('value', bak);\r\n        $popup.select('input[type=\"checkbox\"]').property('checked', bak instanceof RegExp ? 'checked' : null);\r\n        updateData(bak);\r\n        $popup.remove();\r\n    });\r\n    $popup.select('.reset').on('click', function () {\r\n        $popup.select('input[type=\"text\"]').property('value', '');\r\n        $popup.select('input[type=\"checkbox\"]').property('checked', null);\r\n        updateData(null);\r\n    });\r\n    $popup.select('.ok').on('click', function () {\r\n        updateImpl(true);\r\n        $popup.remove();\r\n    });\r\n}\r\n/**\r\n * opens a dialog for filtering a boolean column\r\n * @param column the column to filter\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openBooleanFilter(column, $header) {\r\n    var bak = column.getFilter();\r\n    var $popup = makePopup($header, 'Filter', \"<label><input type=\\\"radio\\\" name=\\\"boolean_check\\\" value=\\\"null\\\" \" + (bak === null ? 'checked=\"checked\"' : '') + \">No Filter</label><br>\\n     <label><input type=\\\"radio\\\" name=\\\"boolean_check\\\" value=\\\"true\\\" \" + (bak === true ? 'checked=\"checked\"' : '') + \">True</label><br>\\n     <label><input type=\\\"radio\\\" name=\\\"boolean_check\\\" value=\\\"false\\\" \" + (bak === false ? 'checked=\"checked\"' : '') + \">False</label>\\n    <br>\");\r\n    function updateData(filter) {\r\n        markFiltered($header, (filter !== null));\r\n        column.setFilter(filter);\r\n    }\r\n    function updateImpl(force) {\r\n        //get value\r\n        var isTrue = $popup.select('input[type=\"radio\"][value=\"true\"]').property('checked');\r\n        var isFalse = $popup.select('input[type=\"radio\"][value=\"false\"]').property('checked');\r\n        updateData(isTrue ? true : (isFalse ? false : null));\r\n    }\r\n    $popup.selectAll('input[type=\"radio\"]').on('change', updateImpl);\r\n    $popup.select('.cancel').on('click', function () {\r\n        updateData(bak);\r\n        $popup.remove();\r\n    });\r\n    $popup.select('.reset').on('click', function () {\r\n        var v = bak === null ? 'null' : String(bak);\r\n        $popup.selectAll('input[type=\"radio\"]').property('checked', function () {\r\n            return this.value === v;\r\n        });\r\n        updateData(null);\r\n    });\r\n    $popup.select('.ok').on('click', function () {\r\n        updateImpl(true);\r\n        $popup.remove();\r\n    });\r\n}\r\n/**\r\n * opens a dialog for editing the script code\r\n * @param column the column to edit\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openEditScriptDialog(column, $header) {\r\n    var bak = column.getScript();\r\n    var $popup = makePopup($header, 'Edit Script', \"Parameters: <code>values: number[], children: Column[]</code><br>\\n      <textarea autofocus=\\\"true\\\" rows=\\\"5\\\" autofocus=\\\"autofocus\\\" style=\\\"width: 95%;\\\">\" + column.getScript() + \"</textarea><br>\");\r\n    function updateData(script) {\r\n        column.setScript(script);\r\n    }\r\n    function updateImpl() {\r\n        //get value\r\n        var script = $popup.select('textarea').property('value');\r\n        updateData(script);\r\n    }\r\n    $popup.select('.cancel').on('click', function () {\r\n        $popup.select('textarea').property('value', bak);\r\n        updateData(bak);\r\n        $popup.remove();\r\n    });\r\n    $popup.select('.reset').on('click', function () {\r\n        $popup.select('textarea').property('value', model.ScriptColumn.DEFAULT_SCRIPT);\r\n        updateData(model.ScriptColumn.DEFAULT_SCRIPT);\r\n    });\r\n    $popup.select('.ok').on('click', function () {\r\n        updateImpl();\r\n        $popup.remove();\r\n    });\r\n}\r\nexports.openEditScriptDialog = openEditScriptDialog;\r\n/**\r\n * opens the mapping editor for a given NumberColumn\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n * @param data the data provider for illustrating the mapping by example\r\n */\r\nfunction openMappingEditor(column, $header, data) {\r\n    var pos = utils.offset($header.node()), bak = column.getMapping(), original = column.getOriginalMapping(), act = bak.clone();\r\n    var popup = d3.select('body').append('div')\r\n        .attr({\r\n        'class': 'lu-popup'\r\n    }).style({\r\n        left: pos.left + 'px',\r\n        top: pos.top + 'px'\r\n    })\r\n        .html(dialogForm('Change Mapping', '<div class=\"mappingArea\"></div>' +\r\n        '<label><input type=\"checkbox\" id=\"filterIt\" value=\"filterIt\">Filter Outliers</label><br>'));\r\n    var $filterIt = popup.select('input').on('change', function () {\r\n        applyMapping(act);\r\n    });\r\n    $filterIt.property('checked', column.isFiltered());\r\n    function applyMapping(newscale) {\r\n        act = newscale;\r\n        markFiltered($header, !newscale.eq(original));\r\n        column.setMapping(newscale);\r\n        var val = $filterIt.property('checked');\r\n        if (val) {\r\n            column.setFilter({ min: newscale.domain[0], max: newscale.domain[1] });\r\n        }\r\n        else {\r\n            column.setFilter();\r\n        }\r\n    }\r\n    var editorOptions = {\r\n        callback: applyMapping,\r\n        triggerCallback: 'dragend'\r\n    };\r\n    var data_sample = data.mappingSample(column);\r\n    var editor = mappingeditor.create(popup.select('.mappingArea').node(), act, original, data_sample, editorOptions);\r\n    popup.select('.ok').on('click', function () {\r\n        applyMapping(editor.scale);\r\n        popup.remove();\r\n    });\r\n    popup.select('.cancel').on('click', function () {\r\n        column.setMapping(bak);\r\n        markFiltered($header, !bak.eq(original));\r\n        popup.remove();\r\n    });\r\n    popup.select('.reset').on('click', function () {\r\n        bak = original;\r\n        act = bak.clone();\r\n        applyMapping(act);\r\n        popup.selectAll('.mappingArea *').remove();\r\n        editor = mappingeditor.create(popup.select('.mappingArea').node(), act, original, data_sample, editorOptions);\r\n    });\r\n}\r\n/**\r\n * opens the mapping editor for a given CategoricalNumberColumn, i.e. to map categories to numbers\r\n * @param column the column to rename\r\n * @param $header the visual header element of this column\r\n */\r\nfunction openCategoricalMappingEditor(column, $header) {\r\n    var range = column.getScale().range, colors = column.categoryColors, children = column.categories.map(function (d, i) { return ({ cat: d, range: range[i] * 100, color: colors[i] }); });\r\n    var scale = d3.scale.linear().domain([0, 100]).range([0, 120]);\r\n    var $popup = makePopup($header, 'Edit Categorical Mapping', '<table></table>');\r\n    var $rows = $popup.select('table').selectAll('tr').data(children);\r\n    var $rows_enter = $rows.enter().append('tr');\r\n    $rows_enter.append('td')\r\n        .append('input').attr({\r\n        type: 'number',\r\n        value: function (d) { return d.range; },\r\n        min: 0,\r\n        max: 100,\r\n        size: 5\r\n    }).on('input', function (d) {\r\n        d.range = +this.value;\r\n        redraw();\r\n    });\r\n    $rows_enter.append('td').append('div')\r\n        .attr('class', 'bar')\r\n        .style('background-color', function (d) { return d.color; });\r\n    $rows_enter.append('td').text(function (d) { return d.cat; });\r\n    function redraw() {\r\n        $rows.select('.bar').transition().style({\r\n            width: function (d) {\r\n                return scale(d.range) + 'px';\r\n            }\r\n        });\r\n    }\r\n    redraw();\r\n    $popup.select('.cancel').on('click', function () {\r\n        column.setMapping(range);\r\n        $popup.remove();\r\n    });\r\n    /*$popup.select('.reset').on('click', function () {\r\n  \r\n     });*/\r\n    $popup.select('.ok').on('click', function () {\r\n        column.setMapping(children.map(function (d) { return d.range / 100; }));\r\n        $popup.remove();\r\n    });\r\n}\r\n/**\r\n * returns all known filter dialogs mappings by type\r\n * @return\r\n */\r\nfunction filterDialogs() {\r\n    return {\r\n        string: openStringFilter,\r\n        categorical: openCategoricalFilter,\r\n        number: openMappingEditor,\r\n        ordinal: openCategoricalMappingEditor,\r\n        boolean: openBooleanFilter\r\n    };\r\n}\r\nexports.filterDialogs = filterDialogs;\r\n//# sourceMappingURL=ui_dialogs.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ui_dialogs.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\r\n * Created by Samuel Gratzl on 14.08.2015.\r\n */\r\n\"use strict\";\r\n///<reference path='../typings/tsd.d.ts' />\r\nvar d3 = require('d3');\r\nvar utils = require('./utils');\r\nvar model = require('./model');\r\nfunction clamp(v, min, max) {\r\n    return Math.max(Math.min(v, max), min);\r\n}\r\nvar MappingEditor = (function () {\r\n    function MappingEditor(parent, scale_, original, dataPromise, options) {\r\n        if (options === void 0) { options = {}; }\r\n        this.parent = parent;\r\n        this.scale_ = scale_;\r\n        this.original = original;\r\n        this.dataPromise = dataPromise;\r\n        this.options = {\r\n            width: 320,\r\n            height: 200,\r\n            padding_hor: 5,\r\n            padding_ver: 5,\r\n            radius: 5,\r\n            callback: function (d) { return d; },\r\n            callbackThisArg: null,\r\n            triggerCallback: 'change' //change, dragend\r\n        };\r\n        utils.merge(this.options, options);\r\n        //work on a local copy\r\n        this.scale_ = scale_.clone();\r\n        this.build(d3.select(parent));\r\n    }\r\n    Object.defineProperty(MappingEditor.prototype, \"scale\", {\r\n        get: function () {\r\n            return this.scale_;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    MappingEditor.prototype.build = function ($root) {\r\n        var options = this.options, that = this;\r\n        $root = $root.append('div').classed('lugui-me', true);\r\n        $root.node().innerHTML = \"<div>\\n    <span class=\\\"raw_min\\\">0</span>\\n    <span class=\\\"center\\\"><label><select>\\n        <option value=\\\"linear\\\">Linear</option>\\n        <option value=\\\"linear_invert\\\">Invert</option>\\n        <option value=\\\"linear_abs\\\">Absolute</option>\\n        <option value=\\\"log\\\">Log</option>\\n        <option value=\\\"pow1.1\\\">Pow 1.1</option>\\n        <option value=\\\"pow2\\\">Pow 2</option>\\n        <option value=\\\"pow3\\\">Pow 3</option>\\n        <option value=\\\"sqrt\\\">Sqrt</option>\\n        <option value=\\\"script\\\">Custom Script</option>\\n      </select></label>\\n      </span>\\n    <span class=\\\"raw_max\\\">1</span>\\n  </div>\\n  <svg width=\\\"\" + options.width + \"\\\" height=\\\"\" + options.height + \"\\\">\\n    <rect width=\\\"100%\\\" height=\\\"10\\\"></rect>\\n    <rect width=\\\"100%\\\" height=\\\"10\\\" y=\\\"\" + (options.height - 10) + \"\\\"></rect>\\n    <g transform=\\\"translate(\" + options.padding_hor + \",\" + options.padding_ver + \")\\\">\\n      <g class=\\\"samples\\\">\\n\\n      </g>\\n      <g class=\\\"mappings\\\">\\n\\n      </g>\\n    </g>\\n  </svg>\\n  <div>\\n    <input type=\\\"text\\\" class=\\\"raw_min\\\" value=\\\"0\\\">\\n    <span class=\\\"center\\\">Raw</span>\\n    <input type=\\\"text\\\" class=\\\"raw_max\\\" value=\\\"1\\\">\\n  </div>\\n  <div class=\\\"script\\\">\\n    <textarea>\\n\\n    </textarea>\\n    <button>Apply</button>\\n  </div>\";\r\n        var width = options.width - options.padding_hor * 2;\r\n        var height = options.height - options.padding_ver * 2;\r\n        var raw2pixel = d3.scale.linear().domain([Math.min(this.scale.domain[0], this.original.domain[0]), Math.max(this.scale.domain[this.scale.domain.length - 1], this.original.domain[this.original.domain.length - 1])])\r\n            .range([0, width]);\r\n        var normal2pixel = d3.scale.linear().domain([0, 1])\r\n            .range([0, width]);\r\n        $root.select('input.raw_min')\r\n            .property('value', raw2pixel.domain()[0])\r\n            .on('blur', function () {\r\n            var d = raw2pixel.domain();\r\n            d[0] = parseFloat(this.value);\r\n            raw2pixel.domain(d);\r\n            var old = that.scale_.domain;\r\n            old[0] = d[0];\r\n            that.scale_.domain = old;\r\n            updateRaw();\r\n            triggerUpdate();\r\n        });\r\n        $root.select('input.raw_max')\r\n            .property('value', raw2pixel.domain()[1])\r\n            .on('blur', function () {\r\n            var d = raw2pixel.domain();\r\n            d[1] = parseFloat(this.value);\r\n            raw2pixel.domain(d);\r\n            var old = that.scale_.domain;\r\n            old[old.length - 1] = d[1];\r\n            that.scale_.domain = old;\r\n            updateRaw();\r\n            triggerUpdate();\r\n        });\r\n        //lines that show mapping of individual data items\r\n        var datalines = $root.select('g.samples').selectAll('line').data([]);\r\n        this.dataPromise.then(function (data) {\r\n            //to unique values\r\n            data = d3.set(data.map(String)).values().map(parseFloat);\r\n            datalines = datalines.data(data);\r\n            datalines.enter()\r\n                .append('line')\r\n                .attr({\r\n                x1: function (d) { return normal2pixel(that.scale.apply(d)); },\r\n                y1: 0,\r\n                x2: raw2pixel,\r\n                y2: height\r\n            }).style('visibility', function (d) {\r\n                var domain = that.scale.domain;\r\n                return (d < domain[0] || d > domain[domain.length - 1]) ? 'hidden' : null;\r\n            });\r\n        });\r\n        function updateDataLines() {\r\n            datalines.attr({\r\n                x1: function (d) { return normal2pixel(that.scale.apply(d)); },\r\n                x2: raw2pixel\r\n            }).style('visibility', function (d) {\r\n                var domain = that.scale.domain;\r\n                return (d < domain[0] || d > domain[domain.length - 1]) ? 'hidden' : null;\r\n            });\r\n        }\r\n        function createDrag(move) {\r\n            return d3.behavior.drag()\r\n                .on('dragstart', function () {\r\n                d3.select(this)\r\n                    .classed('dragging', true)\r\n                    .attr('r', options.radius * 1.1);\r\n            })\r\n                .on('drag', move)\r\n                .on('dragend', function () {\r\n                d3.select(this)\r\n                    .classed('dragging', false)\r\n                    .attr('r', options.radius);\r\n                triggerUpdate(true);\r\n            });\r\n        }\r\n        var mapping_lines = [];\r\n        function renderMappingLines() {\r\n            if (!(that.scale instanceof model.ScaleMappingFunction)) {\r\n                return;\r\n            }\r\n            {\r\n                var sscale = that.scale;\r\n                var domain = sscale.domain;\r\n                var range_1 = sscale.range;\r\n                mapping_lines = domain.map(function (d, i) { return ({ r: d, n: range_1[i] }); });\r\n            }\r\n            function updateScale() {\r\n                //sort by raw value\r\n                mapping_lines.sort(function (a, b) { return a.r - b.r; });\r\n                //update the scale\r\n                var scale = that.scale;\r\n                scale.domain = mapping_lines.map(function (d) { return d.r; });\r\n                scale.range = mapping_lines.map(function (d) { return d.n; });\r\n                //console.log(sscale.domain, sscale.range);\r\n                updateDataLines();\r\n            }\r\n            function removePoint(i) {\r\n                if (mapping_lines.length <= 2) {\r\n                    return; //can't remove have to have at least two\r\n                }\r\n                mapping_lines.splice(i, 1);\r\n                updateScale();\r\n                renderMappingLines();\r\n            }\r\n            function addPoint(x) {\r\n                x = clamp(x, 0, width);\r\n                mapping_lines.push({\r\n                    n: normal2pixel.invert(x),\r\n                    r: raw2pixel.invert(x)\r\n                });\r\n                updateScale();\r\n                renderMappingLines();\r\n            }\r\n            $root.selectAll('rect').on('click', function () {\r\n                addPoint(d3.mouse($root.select('svg > g').node())[0]);\r\n            });\r\n            var $mapping = $root.select('g.mappings').selectAll('g.mapping').data(mapping_lines);\r\n            var $mapping_enter = $mapping.enter().append('g').classed('mapping', true).on('contextmenu', function (d, i) {\r\n                d3.event.preventDefault();\r\n                d3.event.stopPropagation();\r\n                removePoint(i);\r\n            });\r\n            $mapping_enter.append('line').attr({\r\n                y1: 0,\r\n                y2: height\r\n            }).call(createDrag(function (d) {\r\n                //drag the line shifts both point in parallel\r\n                var dx = d3.event.dx;\r\n                var nx = clamp(normal2pixel(d.n) + dx, 0, width);\r\n                var rx = clamp(raw2pixel(d.r) + dx, 0, width);\r\n                d.n = normal2pixel.invert(nx);\r\n                d.r = raw2pixel.invert(rx);\r\n                d3.select(this).attr('x1', nx).attr('x2', rx);\r\n                d3.select(this.parentElement).select('circle.normalized').attr('cx', nx);\r\n                d3.select(this.parentElement).select('circle.raw').attr('cx', rx);\r\n                updateScale();\r\n            }));\r\n            $mapping_enter.append('circle').classed('normalized', true).attr('r', options.radius).call(createDrag(function (d) {\r\n                //drag normalized\r\n                var x = clamp(d3.event.x, 0, width);\r\n                d.n = normal2pixel.invert(x);\r\n                d3.select(this).attr('cx', x);\r\n                d3.select(this.parentElement).select('line').attr('x1', x);\r\n                updateScale();\r\n            }));\r\n            $mapping_enter.append('circle').classed('raw', true).attr('r', options.radius).attr('cy', height).call(createDrag(function (d) {\r\n                //drag raw\r\n                var x = clamp(d3.event.x, 0, width);\r\n                d.r = raw2pixel.invert(x);\r\n                d3.select(this).attr('cx', x);\r\n                d3.select(this.parentElement).select('line').attr('x2', x);\r\n                updateScale();\r\n            }));\r\n            $mapping.select('line').attr({\r\n                x1: function (d) { return normal2pixel(d.n); },\r\n                x2: function (d) { return raw2pixel(d.r); }\r\n            });\r\n            $mapping.select('circle.normalized').attr('cx', function (d) { return normal2pixel(d.n); });\r\n            $mapping.select('circle.raw').attr('cx', function (d) { return raw2pixel(d.r); });\r\n            $mapping.exit().remove();\r\n        }\r\n        function renderScript() {\r\n            if (!(that.scale instanceof model.ScriptMappingFunction)) {\r\n                $root.select('div.script').style('display', 'none');\r\n                return;\r\n            }\r\n            $root.select('div.script').style('display', null);\r\n            var sscale = that.scale;\r\n            var $text = $root.select('textarea').text(sscale.code);\r\n            $root.select('div.script').select('button').on('click', function () {\r\n                var code = $text.property('value');\r\n                sscale.code = code;\r\n                updateDataLines();\r\n                triggerUpdate();\r\n            });\r\n        }\r\n        renderMappingLines();\r\n        renderScript();\r\n        function triggerUpdate(isDragEnd) {\r\n            if (isDragEnd === void 0) { isDragEnd = false; }\r\n            if (isDragEnd && (options.triggerCallback !== 'dragend')) {\r\n                return;\r\n            }\r\n            options.callback.call(options.callbackThisArg, that.scale.clone());\r\n        }\r\n        function updateRaw() {\r\n            var d = raw2pixel.domain();\r\n            $root.select('input.raw_min').property('value', d[0]);\r\n            $root.select('input.raw_max').property('value', d[1]);\r\n            updateDataLines();\r\n            renderMappingLines();\r\n        }\r\n        updateRaw();\r\n        $root.select('select').on('change', function () {\r\n            var v = this.value;\r\n            if (v === 'linear_invert') {\r\n                that.scale_ = new model.ScaleMappingFunction(raw2pixel.domain(), 'linear', [1, 0]);\r\n            }\r\n            else if (v === 'linear_abs') {\r\n                var d = raw2pixel.domain();\r\n                that.scale_ = new model.ScaleMappingFunction([d[0], (d[1] - d[0]) / 2, d[1]], 'linear', [1, 0, 1]);\r\n            }\r\n            else if (v === 'script') {\r\n                that.scale_ = new model.ScriptMappingFunction(raw2pixel.domain());\r\n            }\r\n            else {\r\n                that.scale_ = new model.ScaleMappingFunction(raw2pixel.domain(), v);\r\n            }\r\n            updateDataLines();\r\n            renderMappingLines();\r\n            renderScript();\r\n            triggerUpdate();\r\n        }).property('selectedIndex', function () {\r\n            var name = 'script';\r\n            if (that.scale_ instanceof model.ScaleMappingFunction) {\r\n                name = that.scale.scaleType;\r\n            }\r\n            var types = ['linear', 'linear_invert', 'linear_abs', 'log', 'pow1.1', 'pow2', 'pow3', 'sqrt', 'script'];\r\n            return types.indexOf(name);\r\n        });\r\n    };\r\n    return MappingEditor;\r\n}());\r\nexports.MappingEditor = MappingEditor;\r\nfunction create(parent, scale, original, dataPromise, options) {\r\n    if (options === void 0) { options = {}; }\r\n    return new MappingEditor(parent, scale, original, dataPromise, options);\r\n}\r\nexports.create = create;\r\n//# sourceMappingURL=mappingeditor.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/mappingeditor.js\n ** module id = 11\n ** module chunks = 0\n **/"],"sourceRoot":""}